{"version":3,"sources":["components/collection/common/priceCalc.jsx"],"names":["start_price","end_price","symbol","PriceCalc","props","_this","Object","_Volumes_NITIN_PATIL_Latest_Working_Project_react_beldara_com_13_08_20_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Volumes_NITIN_PATIL_Latest_Working_Project_react_beldara_com_13_08_20_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Volumes_NITIN_PATIL_Latest_Working_Project_react_beldara_com_13_08_20_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","prodCost","productCost","e","state","getPrice","nextProps","data","country_code","getCookie","price_in","price_us","inrValue","minqty","undefined","isNaN","currencyValue","INR","parseFloat","toLowerCase","Math","round","toFixed","finalCost","setState","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","Intl","NumberFormat","format","Component","connect","getAllCurrencyValue"],"mappings":"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","file":"static/js/7.0b785a40.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {getAllCurrencyValue} from '../../../actions';\nimport { getCookie } from '../../../functions';\nvar start_price, end_price, symbol;\nclass PriceCalc extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            start_price : '',\n            end_price : '',\n            symbol : ''\n        }\n    }\n\n    // UNSAFE_componentWillMount(){\n    //     this.props.getAllCurrencyValue();\n    // }\n\n    componentDidMount(){\n        this.getPrice(this.props)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // if (nextProps.data.symbol !== this.props.data.symbol)\n        if (nextProps.data.symbol !== this.props.data.symbol || nextProps.start_price !== this.props.start_price){\n            this.getPrice(nextProps)\n        }\n        if(this.props.country_code != getCookie('country_code')){\n            this.getPrice(nextProps)\n        }\n    }\n\n    getPrice(nextProps){\n        let price_in, price_us, inrValue;\n        var minqty;\n        try{\n            {nextProps.minqty === undefined || isNaN(nextProps.minqty) || nextProps.minqty == null || nextProps.minqty == 0 || nextProps.minqty == '0'?\n                minqty = 1\n                :minqty = nextProps.minqty }\n        }catch(e){\n            minqty = 1\n        } \n        try{\n            {nextProps.price_in === undefined || isNaN(nextProps.price_in) || nextProps.price_in == null?\n                price_in = 0\n                :price_in = nextProps.price_in }\n        }catch(e){\n            price_in = 0\n        } \n        try{ \n        {nextProps.price_us === undefined || isNaN(nextProps.price_us) || nextProps.price_us == null?\n            price_us = 0\n            :price_us = nextProps.price_us }\n        }catch(e){\n            price_us = 0\n        }  \n        try{    \n        {nextProps.currencyValue.currencyValue[0].INR === undefined || isNaN(nextProps.currencyValue.currencyValue[0].INR) || nextProps.currencyValue.currencyValue[0].INR == null?\n            inrValue = 1\n            :inrValue = nextProps.currencyValue.currencyValue[0].INR }    \n        }catch(e){\n            inrValue = 1\n        }    \n\n        try{    \n        {nextProps.start_price === undefined || isNaN(nextProps.start_price) || nextProps.start_price === null?\n            start_price = 0\n            :start_price = nextProps.start_price }    \n        }catch(e){\n            start_price = 0\n        } \n\n        try{    \n            {nextProps.end_price === undefined || isNaN(nextProps.end_price) || nextProps.end_price === null || parseFloat(nextProps.end_price) < parseFloat(0) ?\n                end_price = 0\n                :end_price = nextProps.end_price }    \n            }catch(e){\n                end_price = 0\n            } \n            \n        let country_code = getCookie('country_code');\n    \n        try{\n            if ((nextProps.symbol == 'INR' || nextProps.symbol == '' || nextProps.symbol == null || nextProps.symbol === undefined) && nextProps.data.symbol == 'USD') {\n                start_price = parseFloat(start_price / inrValue);\n                end_price = parseFloat(end_price / inrValue);\n                symbol = \"USD\";\n            } else if (nextProps.symbol == 'USD' && nextProps.data.symbol == 'INR') {\n                start_price = parseFloat(start_price * inrValue);\n                end_price = parseFloat(end_price * inrValue);\n                symbol = \"INR\";\n            } else if (nextProps.symbol === nextProps.data.symbol) {\n                start_price = parseFloat(start_price ) ;\n                end_price = parseFloat(end_price ) ;\n                symbol = nextProps.data.symbol;\n            } else {\n                start_price = parseFloat( nextProps.start_price );\n                end_price = parseFloat( nextProps.end_price );\n                symbol = \"INR\";\n            }\n            \n            if (country_code == '' || country_code.toLowerCase() == 'in'){\n                start_price = parseFloat( start_price + ((price_in/100) * start_price))\n                end_price = parseFloat(end_price + ((price_in/100) * end_price))\n            }\n\n            if ( country_code.toLowerCase() == 'us'){\n                start_price = parseFloat(start_price + ((price_us/100) * start_price))\n                end_price = parseFloat(end_price + ((price_us/100) * end_price))\n            }\n            start_price = Math.round(start_price * 100) / 100;\n            end_price = Math.round(end_price * 100) / 100;\n        }catch(e){\n            start_price = 'Ask For Price';\n            end_price = '';\n            symbol = '';\n        }\n\n        start_price = start_price.toFixed(2)\n        end_price = end_price.toFixed(2)\n\n        if (start_price === undefined || isNaN(start_price) || start_price === null)\n        start_price = 0.00\n\n        if (end_price === undefined || isNaN(end_price) || end_price === null)\n            end_price = 0.00\n\n        try{\n            this.props.finalCost(start_price, minqty);\n        }catch(e){\n\n        }\n\n        this.setState({\n            start_price : start_price,\n            end_price : end_price,\n            symbol : symbol\n        })\n\n    }\n\n    prodCost = (start_price) => {\n        try{\n        this.props.productCost(start_price);\n        }catch(e){\n            \n        }\n    }\n\n    render() {\n        // console.log('render',151);\n        const {start_price, symbol, end_price} = this.state;\n        return (\n            // <React.Fragment>\n            //     <div>\n            //         {start_price !== undefined && start_price != 'undefined' ?\n            //         ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n            //                 <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + end_price : 'Ask for price'} {start_price ? '-' + start_price : ''}</div>\n            //         :( parseFloat(end_price) >  parseFloat(0))?\n            //                 <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + start_price : 'Ask for price'} {end_price ? '-' + end_price : ''}</div>\n            //         : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + start_price} </React.Fragment>: 'Ask for price'}</div>\n            //         :''}\n            //     </div>\n            // </React.Fragment>\n\n            <React.Fragment>\n                <div>\n                    {start_price !== undefined && start_price != 'undefined' ?\n                    ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n                            <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'} {start_price ? '- '  + new Intl.NumberFormat().format(start_price) : ''}</div>\n                    :( parseFloat(start_price) >  parseFloat(0) && parseFloat(end_price) >  parseFloat(0))?\n                            <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : ''} {end_price ? '- ' + new Intl.NumberFormat().format(end_price) : ''}</div>\n                    :( parseFloat(start_price) >  parseFloat(0))?\n                        <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : 'Ask for price'} </div>\n                    :( parseFloat(end_price) >  parseFloat(0))?\n                        <div className=\"font-weight-bold small\"> { parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'} </div>\n                    : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + new Intl.NumberFormat().format(start_price)} </React.Fragment>: 'Ask for price'}</div>\n                    :''}\n                </div>\n\n                {/* <div>\n                    {start_price !== undefined && start_price != 'undefined' ?\n                    ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n                            <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'} {start_price ? '-' + new Intl.NumberFormat().format(start_price) : ''}</div>\n                    :( parseFloat(end_price) >  parseFloat(0))?\n                            <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : 'Ask for price'} {end_price ? '-' + new Intl.NumberFormat().format(end_price) : ''}</div>\n                    : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + new Intl.NumberFormat().format(start_price)} </React.Fragment>: 'Ask for price'}</div>\n                    :''}\n                </div> */}\n            </React.Fragment>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return state;\n}\nexport default connect(mapStateToProps,{getAllCurrencyValue})(PriceCalc);\n"],"sourceRoot":""}