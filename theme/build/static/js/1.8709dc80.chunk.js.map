{"version":3,"sources":["../node_modules/react-intl-tel-input/dist/main.js","../node_modules/libphonenumber-js-utils/dist/libphonenumber.js"],"names":["e","t","n","o","r","module","exports","__webpack_require__","l","a","i","length","u","push","Object","prototype","hasOwnProperty","call","s","shift","0","m","c","d","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","p","oe","console","error","window","self","this","webpackJsonpIntlTelInput","slice","arguments","Array","isArray","apply","join","toString","forEach","indexOf","f","constructor","h","Math","max","split","toLowerCase","y","String","g","Callbacks","once","memory","stopOnFalse","disable","add","unique","has","remove","splice","empty","disabled","lock","locked","fireWith","fire","fired","Deferred","state","always","done","fail","then","reject","promise","resolve","progress","notify","pipe","when","notifyWith","resolveWith","_","mixin","map","name","iso2","dialCode","priority","areaCodes","initialize","getCountries","iterator","arraysEqual","shallowEquals","trim","replace","isNumeric","parseFloat","retrieveLiIndex","parentNode","childNodes","nodeType","tagName","getNumeric","startsWith","substr","toUpperCase","isWindow","getWindow","defaultView","offset","top","left","ownerDocument","documentElement","getBoundingClientRect","pageYOffset","clientTop","pageXOffset","clientLeft","getOuterHeight","offsetHeight","getComputedStyle","getPropertyValue","getCountryData","hasClass","classList","contains","className","match","RegExp","concat","addClass","removeClass","findIndex","some","getCursorPositionAfterFormating","isNaN","configurable","writable","key","setPrototypeOf","getPrototypeOf","__proto__","b","C","ReferenceError","w","v","TypeError","listElement","props","inputTop","document","body","scrollTop","innerHeight","clientHeight","inputOuterHeight","style","setAttribute","setFlag","preferredCountries","country","highlight","highlightedCountry","preferred","createElement","data-dial-code","data-country-code","onMouseOver","isMobile","handleMouseOver","onClick","ref","selectedFlag","selectedFlagInner","currentTarget","getAttribute","changeHighlightCountry","showDropdown","setDropdownPosition","countries","country-list","hide","appendListItem","__docgenInfo","description","methods","docblock","modifiers","params","returns","type","displayName","required","D","k","S","N","F","P","I","O","modalTarget","appendChild","removeChild","createPortal","Fragment","children","T","q","E","A","j","M","x","separateDialCode","allowDropdown","iti-arrow","up","countryCode","iti-flag","dropdownContainer","countryList","refCallback","clickSelectedFlag","handleSelectedFlagKeydown","titleTip","tabIndex","onKeyDown","title","genFlagClassName","genSelectedDialCode","genArrow","genCountryList","L","V","assign","U","B","H","R","K","hasFocus","tel","setState","handleOnBlur","handleOnFocus","setSelectionRange","cursorPosition","inputProps","refHandler","autoComplete","readOnly","readonly","fieldName","id","fieldId","placeholder","onChange","handleInputChange","onBlur","handleBlur","onFocus","handleFocus","autoFocus","z","W","G","J","Y","Z","$","Q","X","updateFlagFromNumber","updateValFromNumber","flagDropDown","selectedCountryData","noCountryDataHandler","defaultCountry","wrapperClass","focus","updateDialCode","updatePlaceholder","active","onSelectFlag","formatFullNumber","isValidNumber","intlTelInputUtils","getExtension","getFullNumber","formatNumber","charAt","countryCodes","onlyCountries","filterCountries","excludeCountries","addCountryCode","defaultValue","getDialCode","tempCountry","nationalMode","autoHideDialCode","formatOnInit","Promise","loadUtils","utilsScriptDeferred","catch","loadAutoCountry","autoCountryDeferred","localStorage","getItem","autoCountry","autoCountryLoaded","startedLoadingAutoCountry","geoIpLookup","setItem","querySelectorAll","previousElementSibling","nextElementSibling","keys","UP","scrollTo","unbindDocumentClick","querySelector","numberFormat","INTERNATIONAL","NATIONAL","beforeSetNumber","notifyPhoneNumberChange","isUnknownNanp","countriesData","processAllCountries","processCountryCodes","processPreferredCountries","removeEmptyDialCode","onPhoneNumberBlur","onPhoneNumberFocus","isOpening","addEventListener","handleDocumentClick","removeEventListener","onFlagClick","toggleDropdown","offsetTop","outerHeight","autoPlaceholder","numberType","getExampleNumber","customPlaceholder","useMobileFullscreenDropdown","handleWindowScroll","which","DOWN","SPACE","ENTER","preventDefault","stopPropagation","TAB","getNumber","onPhoneNumberChange","cap","handleUpDownKey","handleEnterKey","ESC","clearTimeout","query","fromCharCode","searchForCountry","setTimeout","target","selectionStart","substring","format","deferreds","navigator","test","userAgent","windowLoaded","PLUS","processCountryData","getTempCountry","readyState","generateMarkup","setInitialState","initRequests","handleDocumentKeyDown","bindDocumentClick","updateFlagOnDefaultCountryChange","containerClassName","inputClassName","expanded","setFlagDropdownRef","setTelRef","telInputProps","defaultProps","computed","raw","aa","execScript","sort","ba","da","ea","fa","ha","ia","ja","ka","la","ma","oa","ca","na","clone","Boolean","Number","set","Error","pa","qa","ra","sa","1","2","3","4","6","5","9","10","7","8","21","25","27","28","29","30","31","33","24","11","17","12","13","15","16","18","19","20","22","23","26","ta","ua","ctor","32","34","36","39","40","41","43","44","45","46","47","48","49","51","52","53","54","55","56","57","58","60","61","62","63","64","65","66","81","82","84","86","90","91","92","93","94","95","98","211","212","213","216","218","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","260","261","262","263","264","265","266","267","268","269","290","291","297","298","299","350","351","352","353","354","355","356","357","358","359","370","371","372","373","374","375","376","377","378","380","381","382","383","385","386","387","389","420","421","423","500","501","502","503","504","505","506","507","508","509","590","591","592","593","594","595","596","597","598","599","670","672","673","674","675","676","677","678","679","680","681","682","683","685","686","687","688","689","690","691","692","800","808","850","852","853","855","856","870","878","880","881","882","883","886","888","960","961","962","963","964","965","966","967","968","970","971","972","973","974","975","976","977","979","992","993","994","995","996","998","wa","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","xa","０","１","２","３","４","５","６","７","８","９","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ia","Ja","Ka","La","Ma","Na","search","Oa","Pa","Qa","parseInt","lastIndexOf","Ra","exec","Sa","Ha","message","va","Ua","E164","RFC3966","FIXED_LINE","MOBILE","FIXED_LINE_OR_MOBILE","TOLL_FREE","PREMIUM_RATE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL","UNKNOWN","IS_POSSIBLE","INVALID_COUNTRY_CODE","TOO_SHORT","TOO_LONG","NOT_A_NUMBER"],"mappings":"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","file":"static/js/1.8709dc80.chunk.js","sourcesContent":["!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t(require(\"react\"), require(\"react-dom\"), require(\"libphonenumber-js-utils\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"react-dom\", \"libphonenumber-js-utils\"], t) : \"object\" == typeof exports ? exports.IntlTelInput = t(require(\"react\"), require(\"react-dom\"), require(\"libphonenumber-js-utils\")) : e.IntlTelInput = t(e.React, e.ReactDOM, e.intlTelInputUtils);\n}(function () {\n  return \"undefined\" != typeof window && window ? window : \"undefined\" != typeof self && self ? self : this;\n}(), function (n, o, r) {\n  return function (l) {\n    function e(e) {\n      for (var t, n, o = e[0], r = e[1], a = 0, i = []; a < o.length; a++) {\n        n = o[a], u[n] && i.push(u[n][0]), u[n] = 0;\n      }\n\n      for (t in r) {\n        Object.prototype.hasOwnProperty.call(r, t) && (l[t] = r[t]);\n      }\n\n      for (s && s(e); i.length;) {\n        i.shift()();\n      }\n    }\n\n    var n = {},\n        u = {\n      0: 0\n    };\n\n    function r(e) {\n      if (n[e]) return n[e].exports;\n      var t = n[e] = {\n        i: e,\n        l: !1,\n        exports: {}\n      };\n      return l[e].call(t.exports, t, t.exports, r), t.l = !0, t.exports;\n    }\n\n    r.m = l, r.c = n, r.d = function (e, t, n) {\n      r.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: n\n      });\n    }, r.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, r.t = function (t, e) {\n      if (1 & e && (t = r(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var n = Object.create(null);\n      if (r.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var o in t) {\n        r.d(n, o, function (e) {\n          return t[e];\n        }.bind(null, o));\n      }\n      return n;\n    }, r.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return r.d(t, \"a\", t), t;\n    }, r.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, r.p = \"\", r.oe = function (e) {\n      throw console.error(e), e;\n    };\n\n    var t = function () {\n      return \"undefined\" != typeof window && window ? window : \"undefined\" != typeof self && self ? self : this;\n    }().webpackJsonpIntlTelInput = function () {\n      return \"undefined\" != typeof window && window ? window : \"undefined\" != typeof self && self ? self : this;\n    }().webpackJsonpIntlTelInput || [],\n        o = t.push.bind(t);\n\n    t.push = e, t = t.slice();\n\n    for (var a = 0; a < t.length; a++) {\n      e(t[a]);\n    }\n\n    var s = o;\n    return r(r.s = 5);\n  }([function (e, t) {\n    e.exports = n;\n  }, function (e, t, n) {\n    var o;\n    !function () {\n      \"use strict\";\n\n      var i = {}.hasOwnProperty;\n\n      function l() {\n        for (var e = [], t = 0; t < arguments.length; t++) {\n          var n = arguments[t];\n\n          if (n) {\n            var o = typeof n;\n            if (\"string\" === o || \"number\" === o) e.push(n);else if (Array.isArray(n) && n.length) {\n              var r = l.apply(null, n);\n              r && e.push(r);\n            } else if (\"object\" === o) for (var a in n) {\n              i.call(n, a) && n[a] && e.push(a);\n            }\n          }\n        }\n\n        return e.join(\" \");\n      }\n\n      e.exports ? (l.default = l, e.exports = l) : void 0 === (o = function () {\n        return l;\n      }.apply(t, [])) || (e.exports = o);\n    }();\n  }, function (s, e, t) {\n    !function (e) {\n      var i = {},\n          t = Array.prototype,\n          n = Object.prototype,\n          l = n.hasOwnProperty,\n          o = n.toString,\n          u = t.forEach,\n          r = t.indexOf,\n          d = t.slice,\n          f = function f(e, t, n) {\n        var o, r, a;\n        if (e) if (u && e.forEach === u) e.forEach(t, n);else if (e.length === +e.length) {\n          for (r = 0, a = e.length; r < a; r++) {\n            if (r in e && t.call(n, e[r], r, e) === i) return;\n          }\n        } else for (o in e) {\n          if (l.call(e, o) && t.call(n, e[o], o, e) === i) return;\n        }\n      },\n          c = function c(e) {\n        return !!(e && e.constructor && e.call && e.apply);\n      },\n          m = function m(n) {\n        return f(d.call(arguments, 1), function (e) {\n          var t;\n\n          for (t in e) {\n            void 0 !== e[t] && (n[t] = e[t]);\n          }\n        }), n;\n      },\n          h = function h(e, t, n) {\n        var o;\n\n        if (t) {\n          if (r) return r.call(t, e, n);\n\n          for (o = t.length, n = n ? n < 0 ? Math.max(0, o + n) : n : 0; n < o; n++) {\n            if (n in t && t[n] === e) return n;\n          }\n        }\n\n        return -1;\n      },\n          a = {};\n\n      f(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function (e, t) {\n        a[\"[object \" + e + \"]\"] = e.toLowerCase();\n      });\n\n      var y = function y(e) {\n        return null == e ? String(e) : a[o.call(e)] || \"object\";\n      },\n          p = {},\n          g = {};\n\n      p.Callbacks = function (o) {\n        var e, t;\n        o = \"string\" == typeof o ? g[o] || (t = g[e = o] = {}, f(e.split(/\\s+/), function (e) {\n          t[e] = !0;\n        }), t) : m({}, o);\n\n        var n,\n            r,\n            a,\n            i,\n            l,\n            u,\n            s = [],\n            d = !o.once && [],\n            c = function c(e) {\n          for (n = o.memory && e, r = !0, u = i || 0, i = 0, l = s.length, a = !0; s && u < l; u++) {\n            if (!1 === s[u].apply(e[0], e[1]) && o.stopOnFalse) {\n              n = !1;\n              break;\n            }\n          }\n\n          a = !1, s && (d ? d.length && c(d.shift()) : n ? s = [] : p.disable());\n        },\n            p = {\n          add: function add() {\n            if (s) {\n              var e = s.length;\n              !function n(e) {\n                f(e, function (e) {\n                  var t = y(e);\n                  \"function\" === t ? o.unique && p.has(e) || s.push(e) : e && e.length && \"string\" !== t && n(e);\n                });\n              }(arguments), a ? l = s.length : n && (i = e, c(n));\n            }\n\n            return this;\n          },\n          remove: function remove() {\n            return s && f(arguments, function (e) {\n              for (var t; -1 < (t = h(e, s, t));) {\n                s.splice(t, 1), a && (t <= l && l--, t <= u && u--);\n              }\n            }), this;\n          },\n          has: function has(e) {\n            return -1 < h(e, s);\n          },\n          empty: function empty() {\n            return s = [], this;\n          },\n          disable: function disable() {\n            return s = d = n = void 0, this;\n          },\n          disabled: function disabled() {\n            return !s;\n          },\n          lock: function lock() {\n            return d = void 0, n || p.disable(), this;\n          },\n          locked: function locked() {\n            return !d;\n          },\n          fireWith: function fireWith(e, t) {\n            return t = [e, (t = t || []).slice ? t.slice() : t], !s || r && !d || (a ? d.push(t) : c(t)), this;\n          },\n          fire: function fire() {\n            return p.fireWith(this, arguments), this;\n          },\n          fired: function fired() {\n            return !!r;\n          }\n        };\n\n        return p;\n      }, p.Deferred = function (e) {\n        var i = [[\"resolve\", \"done\", p.Callbacks(\"once memory\"), \"resolved\"], [\"reject\", \"fail\", p.Callbacks(\"once memory\"), \"rejected\"], [\"notify\", \"progress\", p.Callbacks(\"memory\")]],\n            r = \"pending\",\n            a = {\n          state: function state() {\n            return r;\n          },\n          always: function always() {\n            return l.done(arguments).fail(arguments), this;\n          },\n          then: function then() {\n            var a = arguments;\n            return p.Deferred(function (r) {\n              f(i, function (e, t) {\n                var n = e[0],\n                    o = a[t];\n                l[e[1]](c(o) ? function () {\n                  var e;\n\n                  try {\n                    e = o.apply(this, arguments);\n                  } catch (e) {\n                    return void r.reject(e);\n                  }\n\n                  e && c(e.promise) ? e.promise().done(r.resolve).fail(r.reject).progress(r.notify) : r[\"notify\" !== n ? \"resolveWith\" : n + \"With\"](this === l ? r : this, [e]);\n                } : r[n]);\n              }), a = null;\n            }).promise();\n          },\n          promise: function promise(e) {\n            return null != e ? m(e, a) : a;\n          }\n        },\n            l = {};\n        return a.pipe = a.then, f(i, function (e, t) {\n          var n = e[2],\n              o = e[3];\n          a[e[1]] = n.add, o && n.add(function () {\n            r = o;\n          }, i[1 ^ t][2].disable, i[2][2].lock), l[e[0]] = n.fire, l[e[0] + \"With\"] = n.fireWith;\n        }), a.promise(l), e && e.call(l, l), l;\n      }, p.when = function (e) {\n        var r,\n            t,\n            n,\n            o = 0,\n            a = \"array\" === y(e) && 1 === arguments.length ? e : d.call(arguments),\n            i = a.length,\n            l = 1 !== i || e && c(e.promise) ? i : 0,\n            u = 1 === l ? e : p.Deferred(),\n            s = function s(t, n, o) {\n          return function (e) {\n            n[t] = this, o[t] = 1 < arguments.length ? d.call(arguments) : e, o === r ? u.notifyWith(n, o) : --l || u.resolveWith(n, o);\n          };\n        };\n\n        if (1 < i) for (r = new Array(i), t = new Array(i), n = new Array(i); o < i; o++) {\n          a[o] && c(a[o].promise) ? a[o].promise().done(s(o, n, a)).fail(u.reject).progress(s(o, t, r)) : --l;\n        }\n        return l || u.resolveWith(n, a), u.promise();\n      }, s.exports ? s.exports = p : void 0 !== e._ ? e._.mixin(p) : e._ = p;\n    }(this);\n  }, function (e, t) {\n    e.exports = o;\n  }, function (e, t, n) {}, function (e, t, r) {\n    \"use strict\";\n\n    r.r(t);\n    var n,\n        a = r(0),\n        f = r.n(a),\n        o = r(1),\n        s = r.n(o),\n        i = r(2),\n        l = r.n(i),\n        u = [[\"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\"], [\"Albania (Shqipëri)\", \"al\", \"355\"], [\"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\"], [\"American Samoa\", \"as\", \"1684\"], [\"Andorra\", \"ad\", \"376\"], [\"Angola\", \"ao\", \"244\"], [\"Anguilla\", \"ai\", \"1264\"], [\"Antigua and Barbuda\", \"ag\", \"1268\"], [\"Argentina\", \"ar\", \"54\"], [\"Armenia (Հայաստան)\", \"am\", \"374\"], [\"Aruba\", \"aw\", \"297\"], [\"Australia\", \"au\", \"61\", 0], [\"Austria (Österreich)\", \"at\", \"43\"], [\"Azerbaijan (Azərbaycan)\", \"az\", \"994\"], [\"Bahamas\", \"bs\", \"1242\"], [\"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\"], [\"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\"], [\"Barbados\", \"bb\", \"1246\"], [\"Belarus (Беларусь)\", \"by\", \"375\"], [\"Belgium (België)\", \"be\", \"32\"], [\"Belize\", \"bz\", \"501\"], [\"Benin (Bénin)\", \"bj\", \"229\"], [\"Bermuda\", \"bm\", \"1441\"], [\"Bhutan (འབྲུག)\", \"bt\", \"975\"], [\"Bolivia\", \"bo\", \"591\"], [\"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\"], [\"Botswana\", \"bw\", \"267\"], [\"Brazil (Brasil)\", \"br\", \"55\"], [\"British Indian Ocean Territory\", \"io\", \"246\"], [\"British Virgin Islands\", \"vg\", \"1284\"], [\"Brunei\", \"bn\", \"673\"], [\"Bulgaria (България)\", \"bg\", \"359\"], [\"Burkina Faso\", \"bf\", \"226\"], [\"Burundi (Uburundi)\", \"bi\", \"257\"], [\"Cambodia (កម្ពុជា)\", \"kh\", \"855\"], [\"Cameroon (Cameroun)\", \"cm\", \"237\"], [\"Canada\", \"ca\", \"1\", 1, [\"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]], [\"Cape Verde (Kabu Verdi)\", \"cv\", \"238\"], [\"Caribbean Netherlands\", \"bq\", \"599\", 1], [\"Cayman Islands\", \"ky\", \"1345\"], [\"Central African Republic (République centrafricaine)\", \"cf\", \"236\"], [\"Chad (Tchad)\", \"td\", \"235\"], [\"Chile\", \"cl\", \"56\"], [\"China (中国)\", \"cn\", \"86\"], [\"Christmas Island\", \"cx\", \"61\", 2], [\"Cocos (Keeling) Islands\", \"cc\", \"61\", 1], [\"Colombia\", \"co\", \"57\"], [\"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\"], [\"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\"], [\"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\"], [\"Cook Islands\", \"ck\", \"682\"], [\"Costa Rica\", \"cr\", \"506\"], [\"Côte d’Ivoire\", \"ci\", \"225\"], [\"Croatia (Hrvatska)\", \"hr\", \"385\"], [\"Cuba\", \"cu\", \"53\"], [\"Curaçao\", \"cw\", \"599\", 0], [\"Cyprus (Κύπρος)\", \"cy\", \"357\"], [\"Czech Republic (Česká republika)\", \"cz\", \"420\"], [\"Denmark (Danmark)\", \"dk\", \"45\"], [\"Djibouti\", \"dj\", \"253\"], [\"Dominica\", \"dm\", \"1767\"], [\"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [\"809\", \"829\", \"849\"]], [\"Ecuador\", \"ec\", \"593\"], [\"Egypt (‫مصر‬‎)\", \"eg\", \"20\"], [\"El Salvador\", \"sv\", \"503\"], [\"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\"], [\"Eritrea\", \"er\", \"291\"], [\"Estonia (Eesti)\", \"ee\", \"372\"], [\"Ethiopia\", \"et\", \"251\"], [\"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\"], [\"Faroe Islands (Føroyar)\", \"fo\", \"298\"], [\"Fiji\", \"fj\", \"679\"], [\"Finland (Suomi)\", \"fi\", \"358\", 0], [\"France\", \"fr\", \"33\"], [\"French Guiana (Guyane française)\", \"gf\", \"594\"], [\"French Polynesia (Polynésie française)\", \"pf\", \"689\"], [\"Gabon\", \"ga\", \"241\"], [\"Gambia\", \"gm\", \"220\"], [\"Georgia (საქართველო)\", \"ge\", \"995\"], [\"Germany (Deutschland)\", \"de\", \"49\"], [\"Ghana (Gaana)\", \"gh\", \"233\"], [\"Gibraltar\", \"gi\", \"350\"], [\"Greece (Ελλάδα)\", \"gr\", \"30\"], [\"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\"], [\"Grenada\", \"gd\", \"1473\"], [\"Guadeloupe\", \"gp\", \"590\", 0], [\"Guam\", \"gu\", \"1671\"], [\"Guatemala\", \"gt\", \"502\"], [\"Guernsey\", \"gg\", \"44\", 1], [\"Guinea (Guinée)\", \"gn\", \"224\"], [\"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\"], [\"Guyana\", \"gy\", \"592\"], [\"Haiti\", \"ht\", \"509\"], [\"Honduras\", \"hn\", \"504\"], [\"Hong Kong (香港)\", \"hk\", \"852\"], [\"Hungary (Magyarország)\", \"hu\", \"36\"], [\"Iceland (Ísland)\", \"is\", \"354\"], [\"India (भारत)\", \"in\", \"91\"], [\"Indonesia\", \"id\", \"62\"], [\"Iran (‫ایران‬‎)\", \"ir\", \"98\"], [\"Iraq (‫العراق‬‎)\", \"iq\", \"964\"], [\"Ireland\", \"ie\", \"353\"], [\"Isle of Man\", \"im\", \"44\", 2], [\"Israel (‫ישראל‬‎)\", \"il\", \"972\"], [\"Italy (Italia)\", \"it\", \"39\", 0], [\"Jamaica\", \"jm\", \"1876\"], [\"Japan (日本)\", \"jp\", \"81\"], [\"Jersey\", \"je\", \"44\", 3], [\"Jordan (‫الأردن‬‎)\", \"jo\", \"962\"], [\"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1], [\"Kenya\", \"ke\", \"254\"], [\"Kiribati\", \"ki\", \"686\"], [\"Kosovo\", \"xk\", \"383\"], [\"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\"], [\"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\"], [\"Laos (ລາວ)\", \"la\", \"856\"], [\"Latvia (Latvija)\", \"lv\", \"371\"], [\"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\"], [\"Lesotho\", \"ls\", \"266\"], [\"Liberia\", \"lr\", \"231\"], [\"Libya (‫ليبيا‬‎)\", \"ly\", \"218\"], [\"Liechtenstein\", \"li\", \"423\"], [\"Lithuania (Lietuva)\", \"lt\", \"370\"], [\"Luxembourg\", \"lu\", \"352\"], [\"Macau (澳門)\", \"mo\", \"853\"], [\"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\"], [\"Madagascar (Madagasikara)\", \"mg\", \"261\"], [\"Malawi\", \"mw\", \"265\"], [\"Malaysia\", \"my\", \"60\"], [\"Maldives\", \"mv\", \"960\"], [\"Mali\", \"ml\", \"223\"], [\"Malta\", \"mt\", \"356\"], [\"Marshall Islands\", \"mh\", \"692\"], [\"Martinique\", \"mq\", \"596\"], [\"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\"], [\"Mauritius (Moris)\", \"mu\", \"230\"], [\"Mayotte\", \"yt\", \"262\", 1], [\"Mexico (México)\", \"mx\", \"52\"], [\"Micronesia\", \"fm\", \"691\"], [\"Moldova (Republica Moldova)\", \"md\", \"373\"], [\"Monaco\", \"mc\", \"377\"], [\"Mongolia (Монгол)\", \"mn\", \"976\"], [\"Montenegro (Crna Gora)\", \"me\", \"382\"], [\"Montserrat\", \"ms\", \"1664\"], [\"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0], [\"Mozambique (Moçambique)\", \"mz\", \"258\"], [\"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\"], [\"Namibia (Namibië)\", \"na\", \"264\"], [\"Nauru\", \"nr\", \"674\"], [\"Nepal (नेपाल)\", \"np\", \"977\"], [\"Netherlands (Nederland)\", \"nl\", \"31\"], [\"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\"], [\"New Zealand\", \"nz\", \"64\"], [\"Nicaragua\", \"ni\", \"505\"], [\"Niger (Nijar)\", \"ne\", \"227\"], [\"Nigeria\", \"ng\", \"234\"], [\"Niue\", \"nu\", \"683\"], [\"Norfolk Island\", \"nf\", \"672\"], [\"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\"], [\"Northern Mariana Islands\", \"mp\", \"1670\"], [\"Norway (Norge)\", \"no\", \"47\", 0], [\"Oman (‫عُمان‬‎)\", \"om\", \"968\"], [\"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\"], [\"Palau\", \"pw\", \"680\"], [\"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\"], [\"Panama (Panamá)\", \"pa\", \"507\"], [\"Papua New Guinea\", \"pg\", \"675\"], [\"Paraguay\", \"py\", \"595\"], [\"Peru (Perú)\", \"pe\", \"51\"], [\"Philippines\", \"ph\", \"63\"], [\"Poland (Polska)\", \"pl\", \"48\"], [\"Portugal\", \"pt\", \"351\"], [\"Puerto Rico\", \"pr\", \"1\", 3, [\"787\", \"939\"]], [\"Qatar (‫قطر‬‎)\", \"qa\", \"974\"], [\"Réunion (La Réunion)\", \"re\", \"262\", 0], [\"Romania (România)\", \"ro\", \"40\"], [\"Russia (Россия)\", \"ru\", \"7\", 0], [\"Rwanda\", \"rw\", \"250\"], [\"Saint Barthélemy (Saint-Barthélemy)\", \"bl\", \"590\", 1], [\"Saint Helena\", \"sh\", \"290\"], [\"Saint Kitts and Nevis\", \"kn\", \"1869\"], [\"Saint Lucia\", \"lc\", \"1758\"], [\"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2], [\"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\"], [\"Saint Vincent and the Grenadines\", \"vc\", \"1784\"], [\"Samoa\", \"ws\", \"685\"], [\"San Marino\", \"sm\", \"378\"], [\"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\"], [\"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\"], [\"Senegal (Sénégal)\", \"sn\", \"221\"], [\"Serbia (Србија)\", \"rs\", \"381\"], [\"Seychelles\", \"sc\", \"248\"], [\"Sierra Leone\", \"sl\", \"232\"], [\"Singapore\", \"sg\", \"65\"], [\"Sint Maarten\", \"sx\", \"1721\"], [\"Slovakia (Slovensko)\", \"sk\", \"421\"], [\"Slovenia (Slovenija)\", \"si\", \"386\"], [\"Solomon Islands\", \"sb\", \"677\"], [\"Somalia (Soomaaliya)\", \"so\", \"252\"], [\"South Africa\", \"za\", \"27\"], [\"South Korea (대한민국)\", \"kr\", \"82\"], [\"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\"], [\"Spain (España)\", \"es\", \"34\"], [\"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\"], [\"Sudan (‫السودان‬‎)\", \"sd\", \"249\"], [\"Suriname\", \"sr\", \"597\"], [\"Svalbard and Jan Mayen\", \"sj\", \"47\", 1], [\"Swaziland\", \"sz\", \"268\"], [\"Sweden (Sverige)\", \"se\", \"46\"], [\"Switzerland (Schweiz)\", \"ch\", \"41\"], [\"Syria (‫سوريا‬‎)\", \"sy\", \"963\"], [\"Taiwan (台灣)\", \"tw\", \"886\"], [\"Tajikistan\", \"tj\", \"992\"], [\"Tanzania\", \"tz\", \"255\"], [\"Thailand (ไทย)\", \"th\", \"66\"], [\"Timor-Leste\", \"tl\", \"670\"], [\"Togo\", \"tg\", \"228\"], [\"Tokelau\", \"tk\", \"690\"], [\"Tonga\", \"to\", \"676\"], [\"Trinidad and Tobago\", \"tt\", \"1868\"], [\"Tunisia (‫تونس‬‎)\", \"tn\", \"216\"], [\"Turkey (Türkiye)\", \"tr\", \"90\"], [\"Turkmenistan\", \"tm\", \"993\"], [\"Turks and Caicos Islands\", \"tc\", \"1649\"], [\"Tuvalu\", \"tv\", \"688\"], [\"U.S. Virgin Islands\", \"vi\", \"1340\"], [\"Uganda\", \"ug\", \"256\"], [\"Ukraine (Україна)\", \"ua\", \"380\"], [\"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\"], [\"United Kingdom\", \"gb\", \"44\", 0], [\"United States\", \"us\", \"1\", 0], [\"Uruguay\", \"uy\", \"598\"], [\"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\"], [\"Vanuatu\", \"vu\", \"678\"], [\"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1], [\"Venezuela\", \"ve\", \"58\"], [\"Vietnam (Việt Nam)\", \"vn\", \"84\"], [\"Wallis and Futuna\", \"wf\", \"681\"], [\"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1], [\"Yemen (‫اليمن‬‎)\", \"ye\", \"967\"], [\"Zambia\", \"zm\", \"260\"], [\"Zimbabwe\", \"zw\", \"263\"], [\"Åland Islands\", \"ax\", \"358\", 1]];\n\n    function d(e) {\n      n = (e || u).map(function (e) {\n        return {\n          name: e[0],\n          iso2: e[1],\n          dialCode: e[2],\n          priority: e[3] || 0,\n          areaCodes: e[4] || null\n        };\n      });\n    }\n\n    var c = {\n      initialize: d,\n      getCountries: function getCountries() {\n        return n || d(), n;\n      }\n    };\n\n    function p(e) {\n      return (p = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    var m = {\n      arraysEqual: function arraysEqual(e, t) {\n        if (e === t) return !0;\n        if (null === e || null === t) return !1;\n        if (e.length !== t.length) return !1;\n\n        for (var n = 0; n < e.length; ++n) {\n          if (e[n] !== t[n]) return !1;\n        }\n\n        return !0;\n      },\n      shallowEquals: function shallowEquals(e, t) {\n        if (e === t) return !0;\n\n        for (var n in e) {\n          if (e[n] !== t[n]) {\n            if (!Array.isArray(e[n]) || !Array.isArray(t[n])) return !1;\n            if (!this.arraysEqual(e[n], t[n])) return !1;\n          }\n        }\n\n        for (var o in t) {\n          if (!1 === e.hasOwnProperty(o)) return !1;\n        }\n\n        return !0;\n      },\n      trim: function trim(e) {\n        return e ? e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\") : \"\";\n      },\n      isNumeric: function isNumeric(e) {\n        return 0 <= e - parseFloat(e);\n      },\n      retrieveLiIndex: function retrieveLiIndex(e) {\n        if (!e) return -1;\n\n        for (var t = e.parentNode.childNodes, n = 0, o = 0, r = t.length; o < r; o++) {\n          if (t[o] === e) return n;\n          1 === t[o].nodeType && \"li\" === t[o].tagName.toLowerCase() && (n += 1);\n        }\n\n        return -1;\n      },\n      getNumeric: function getNumeric(e) {\n        return e.replace(/\\D/g, \"\");\n      },\n      startsWith: function startsWith(e, t) {\n        return e.substr(0, t.length).toUpperCase() === t;\n      },\n      isWindow: function isWindow(e) {\n        return null !== e && e === e.window;\n      },\n      getWindow: function getWindow(e) {\n        return this.isWindow(e) ? e : 9 === e.nodeType && e.defaultView;\n      },\n      offset: function offset(e) {\n        var t,\n            n,\n            o = {\n          top: 0,\n          left: 0\n        },\n            r = e && e.ownerDocument;\n        return t = r.documentElement, \"undefined\" !== p(e.getBoundingClientRect) && (o = e.getBoundingClientRect()), n = this.getWindow(r), {\n          top: o.top + n.pageYOffset - t.clientTop,\n          left: o.left + n.pageXOffset - t.clientLeft\n        };\n      },\n      getOuterHeight: function getOuterHeight(e) {\n        return e.offsetHeight + parseFloat(window.getComputedStyle(e).getPropertyValue(\"margin-top\")) + parseFloat(window.getComputedStyle(e).getPropertyValue(\"margin-bottom\"));\n      },\n      getCountryData: function getCountryData(e, t, n, o, r) {\n        for (var a = n ? c.getCountries() : e, i = 0; i < a.length; i++) {\n          if (a[i].iso2 === t) return a[i];\n        }\n\n        return o ? null : (\"function\" == typeof r && r(t), {});\n      },\n      hasClass: function hasClass(e, t) {\n        return e.classList ? e.classList.contains(t) : !!e.className.match(new RegExp(\"(\\\\s|^)\".concat(t, \"(\\\\s|$)\")));\n      },\n      addClass: function addClass(e, t) {\n        e.classList ? e.classList.add(t) : this.hasClass(e, t) || (e.className += \" \".concat(t));\n      },\n      removeClass: function removeClass(e, t) {\n        if (e.classList) e.classList.remove(t);else if (this.hasClass(e, t)) {\n          var n = new RegExp(\"(\\\\s|^)\".concat(t, \"(\\\\s|$)\"));\n          e.className = e.className.replace(n, \" \");\n        }\n      },\n      findIndex: function findIndex(e, n) {\n        var o = -1;\n        return e.some(function (e, t) {\n          if (n(e)) return o = t, !0;\n        }), o;\n      },\n      getCursorPositionAfterFormating: function getCursorPositionAfterFormating(e, t, n) {\n        if (t === n) return e.length;\n        var o = 0;\n        if (t.length > n.length) for (var r = 0, a = 0; r < e.length && a < n.length; r += 1) {\n          e[r] !== n[a] ? isNaN(n[a]) && !isNaN(e[r]) ? (r -= 1, a += 1, o += 1) : o -= 1 : a += 1;\n        } else for (var i = 0, l = 0; i < e.length && l < n.length; l += 1) {\n          e[i] !== n[l] ? isNaN(e[i]) && !isNaN(n[l]) ? (l -= 1, i += 1, o -= 1) : o += 1 : i += 1;\n        }\n        return e.length + o;\n      }\n    };\n\n    function h(e) {\n      return (h = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function y(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function g(e) {\n      return (g = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function b(e, t) {\n      return (b = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    function C(e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }\n\n    function w(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    var v = function (e) {\n      function i() {\n        var e, u, t, n;\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, i);\n\n        for (var o = arguments.length, r = new Array(o), a = 0; a < o; a++) {\n          r[a] = arguments[a];\n        }\n\n        return t = this, n = (e = g(i)).call.apply(e, [this].concat(r)), w(C(C(u = !n || \"object\" !== h(n) && \"function\" != typeof n ? C(t) : n)), \"setDropdownPosition\", function () {\n          m.removeClass(u.listElement, \"hide\");\n          var e = u.props.inputTop,\n              t = void 0 !== window.pageYOffset ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop,\n              n = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n              o = u.props.inputOuterHeight,\n              r = m.getOuterHeight(u.listElement),\n              a = !(e + o + r < t + n) && t < e - r ? \"-\".concat(r - 1, \"px\") : \"\";\n          u.listElement.style.top = a, u.listElement.setAttribute(\"class\", \"country-list\");\n        }), w(C(C(u)), \"setFlag\", function (e) {\n          u.props.setFlag(e);\n        }), w(C(C(u)), \"appendListItem\", function (e) {\n          var i = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],\n              l = u.props.preferredCountries.length;\n          return e.map(function (e, t) {\n            var n = i ? t : t + l,\n                o = {\n              country: !0,\n              highlight: u.props.highlightedCountry === n,\n              preferred: i\n            },\n                r = s()(o),\n                a = i ? \"pref-\" : \"\";\n            return f.a.createElement(\"li\", {\n              key: \"\".concat(a).concat(e.iso2),\n              className: r,\n              \"data-dial-code\": e.dialCode,\n              \"data-country-code\": e.iso2,\n              onMouseOver: u.props.isMobile ? null : u.handleMouseOver,\n              onClick: function (e) {\n                for (var t = arguments.length, n = new Array(1 < t ? t - 1 : 0), o = 1; o < t; o++) {\n                  n[o - 1] = arguments[o];\n                }\n\n                return e.bind.apply(e, [e].concat(n));\n              }(u.setFlag, e.iso2)\n            }, f.a.createElement(\"div\", {\n              ref: function ref(e) {\n                u.selectedFlag = e;\n              },\n              className: \"flag-box\"\n            }, f.a.createElement(\"div\", {\n              ref: function ref(e) {\n                u.selectedFlagInner = e;\n              },\n              className: \"iti-flag \".concat(e.iso2)\n            })), f.a.createElement(\"span\", {\n              className: \"country-name\"\n            }, e.name), f.a.createElement(\"span\", {\n              className: \"dial-code\"\n            }, \"+\", e.dialCode));\n          });\n        }), w(C(C(u)), \"handleMouseOver\", function (e) {\n          if (-1 < e.currentTarget.getAttribute(\"class\").indexOf(\"country\")) {\n            var t = m.retrieveLiIndex(e.currentTarget);\n            u.props.changeHighlightCountry(!0, t);\n          }\n        }), u;\n      }\n\n      var t, n, o;\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && b(e, t);\n      }(i, a[\"Component\"]), t = i, (n = [{\n        key: \"shouldComponentUpdate\",\n        value: function value(e) {\n          var t = !m.shallowEquals(this.props, e);\n          return t && e.showDropdown && (this.listElement.setAttribute(\"class\", \"country-list v-hide\"), this.setDropdownPosition()), t;\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var e,\n              t = this,\n              n = this.props.preferredCountries,\n              o = null,\n              r = this.props.countries,\n              a = s()({\n            \"country-list\": !0,\n            hide: !this.props.showDropdown\n          }),\n              i = null;\n          return n.length && (o = this.appendListItem(n, !0), i = f.a.createElement(\"div\", {\n            className: \"divider\"\n          })), e = this.appendListItem(r), f.a.createElement(\"ul\", {\n            ref: function ref(e) {\n              t.listElement = e;\n            },\n            className: a\n          }, o, i, e);\n        }\n      }]) && y(t.prototype, n), o && y(t, o), i;\n    }();\n\n    v.__docgenInfo = {\n      description: \"\",\n      methods: [{\n        name: \"setDropdownPosition\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"setFlag\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"iso2\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"appendListItem\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countries\",\n          type: null\n        }, {\n          name: \"isPreferred\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleMouseOver\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }],\n      displayName: \"CountryList\",\n      props: {\n        setFlag: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        countries: {\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"object\"\n            }\n          },\n          required: !1,\n          description: \"\"\n        },\n        inputTop: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        inputOuterHeight: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        preferredCountries: {\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"object\"\n            }\n          },\n          required: !1,\n          description: \"\"\n        },\n        highlightedCountry: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        changeHighlightCountry: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        showDropdown: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        isMobile: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        }\n      }\n    };\n    var D = r(3),\n        k = r.n(D);\n\n    function S(e) {\n      return (S = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function N(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function O(e, t) {\n      return !t || \"object\" !== S(t) && \"function\" != typeof t ? function (e) {\n        if (void 0 !== e) return e;\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }(e) : t;\n    }\n\n    function F(e) {\n      return (F = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function P(e, t) {\n      return (P = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    var I = function (e) {\n      function n(e) {\n        var t;\n        return function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, n), (t = O(this, F(n).call(this, e))).modalTarget = document.createElement(\"div\"), t.modalTarget.className = \"intl-tel-input iti-container\", t;\n      }\n\n      var t, o, r;\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && P(e, t);\n      }(n, a[\"Component\"]), t = n, (o = [{\n        key: \"componentDidMount\",\n        value: function value() {\n          document.body.appendChild(this.modalTarget);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          document.body.removeChild(this.modalTarget);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          return k.a.createPortal(f.a.createElement(a.Fragment, null, this.props.children), this.modalTarget);\n        }\n      }]) && N(t.prototype, o), r && N(t, r), n;\n    }();\n\n    function T(e) {\n      return (T = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function q(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function E(e) {\n      return (E = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function A(e, t) {\n      return (A = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    function j(e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }\n\n    function M(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    I.__docgenInfo = {\n      description: \"\",\n      methods: [],\n      displayName: \"RootModal\",\n      props: {\n        children: {\n          type: {\n            name: \"node\"\n          },\n          required: !1,\n          description: \"\"\n        }\n      }\n    };\n\n    var x = function (e) {\n      function i() {\n        var e, p, t, n;\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, i);\n\n        for (var o = arguments.length, r = new Array(o), a = 0; a < o; a++) {\n          r[a] = arguments[a];\n        }\n\n        return t = this, n = (e = E(i)).call.apply(e, [this].concat(r)), M(j(j(p = !n || \"object\" !== T(n) && \"function\" != typeof n ? j(t) : n)), \"genSelectedDialCode\", function () {\n          var e = p.props,\n              t = e.separateDialCode,\n              n = e.dialCode;\n          return t ? f.a.createElement(\"div\", {\n            className: \"selected-dial-code\"\n          }, n) : \"\";\n        }), M(j(j(p)), \"genArrow\", function () {\n          var e = p.props,\n              t = e.allowDropdown,\n              n = e.showDropdown,\n              o = s()({\n            \"iti-arrow\": !0,\n            up: n\n          });\n          return t ? f.a.createElement(\"div\", {\n            className: o\n          }) : \"\";\n        }), M(j(j(p)), \"genFlagClassName\", function () {\n          var e = p.props.countryCode,\n              t = {\n            \"iti-flag\": !0\n          };\n          return e && (t[e] = !0), s()(t);\n        }), M(j(j(p)), \"genCountryList\", function () {\n          var e = p.props,\n              t = e.dropdownContainer,\n              n = e.showDropdown,\n              o = e.isMobile,\n              r = e.allowDropdown,\n              a = e.setFlag,\n              i = e.countries,\n              l = e.inputTop,\n              u = e.inputOuterHeight,\n              s = e.preferredCountries,\n              d = e.highlightedCountry,\n              c = e.changeHighlightCountry;\n          return f.a.createElement(v, {\n            ref: function ref(e) {\n              p.countryList = e;\n            },\n            dropdownContainer: t,\n            isMobile: o,\n            showDropdown: r && n,\n            setFlag: a,\n            countries: i,\n            inputTop: l,\n            inputOuterHeight: u,\n            preferredCountries: s,\n            highlightedCountry: d,\n            changeHighlightCountry: c\n          });\n        }), p;\n      }\n\n      var t, n, o;\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && A(e, t);\n      }(i, a[\"Component\"]), t = i, (n = [{\n        key: \"render\",\n        value: function value() {\n          var e = this.props,\n              t = e.refCallback,\n              n = e.allowDropdown,\n              o = e.clickSelectedFlag,\n              r = e.handleSelectedFlagKeydown,\n              a = e.titleTip,\n              i = e.dropdownContainer,\n              l = e.showDropdown;\n          return f.a.createElement(\"div\", {\n            ref: t,\n            className: \"flag-container\"\n          }, f.a.createElement(\"div\", {\n            className: \"selected-flag\",\n            tabIndex: n ? \"0\" : \"\",\n            onClick: o,\n            onKeyDown: r,\n            title: a\n          }, f.a.createElement(\"div\", {\n            className: this.genFlagClassName()\n          }), this.genSelectedDialCode(), this.genArrow()), i && l ? f.a.createElement(I, null, this.genCountryList()) : this.genCountryList());\n        }\n      }]) && q(t.prototype, n), o && q(t, o), i;\n    }();\n\n    function L(e) {\n      return (L = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function V() {\n      return (V = Object.assign || function (e) {\n        for (var t = 1; t < arguments.length; t++) {\n          var n = arguments[t];\n\n          for (var o in n) {\n            Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    }\n\n    function _(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function U(e) {\n      return (U = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function B(e, t) {\n      return (B = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    function H(e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }\n\n    function R(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    x.__docgenInfo = {\n      description: \"\",\n      methods: [{\n        name: \"genSelectedDialCode\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"genArrow\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"genFlagClassName\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"genCountryList\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }],\n      displayName: \"FlagDropDown\",\n      props: {\n        allowDropdown: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        dropdownContainer: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        separateDialCode: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        dialCode: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        countryCode: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        showDropdown: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        clickSelectedFlag: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        handleSelectedFlagKeydown: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        isMobile: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        setFlag: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        countries: {\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"object\"\n            }\n          },\n          required: !1,\n          description: \"\"\n        },\n        inputTop: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        inputOuterHeight: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        preferredCountries: {\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"object\"\n            }\n          },\n          required: !1,\n          description: \"\"\n        },\n        highlightedCountry: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        changeHighlightCountry: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        titleTip: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        refCallback: {\n          type: {\n            name: \"func\"\n          },\n          required: !0,\n          description: \"\"\n        }\n      }\n    };\n\n    var K = function (e) {\n      function l() {\n        var e, t, n, o;\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, l);\n\n        for (var r = arguments.length, a = new Array(r), i = 0; i < r; i++) {\n          a[i] = arguments[i];\n        }\n\n        return n = this, o = (e = U(l)).call.apply(e, [this].concat(a)), R(H(H(t = !o || \"object\" !== L(o) && \"function\" != typeof o ? H(n) : o)), \"state\", {\n          hasFocus: !1\n        }), R(H(H(t)), \"refHandler\", function (e) {\n          t.tel = e, t.props.refCallback(e);\n        }), R(H(H(t)), \"handleBlur\", function (e) {\n          t.setState({\n            hasFocus: !1\n          }), \"function\" == typeof t.props.handleOnBlur && t.props.handleOnBlur(e);\n        }), R(H(H(t)), \"handleFocus\", function (e) {\n          t.setState({\n            hasFocus: !0\n          }), \"function\" == typeof t.props.handleOnFocus && t.props.handleOnFocus(e);\n        }), t;\n      }\n\n      var t, n, o;\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && B(e, t);\n      }(l, a[\"Component\"]), t = l, (n = [{\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.state.hasFocus && this.tel.setSelectionRange(this.props.cursorPosition, this.props.cursorPosition);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          return f.a.createElement(\"input\", V({}, this.props.inputProps, {\n            ref: this.refHandler,\n            type: \"tel\",\n            autoComplete: this.props.autoComplete,\n            className: this.props.className,\n            disabled: !!this.props.disabled && \"disabled\",\n            readOnly: !!this.props.readonly && \"readonly\",\n            name: this.props.fieldName,\n            id: this.props.fieldId,\n            value: this.props.value,\n            placeholder: this.props.placeholder,\n            onChange: this.props.handleInputChange,\n            onBlur: this.handleBlur,\n            onFocus: this.handleFocus,\n            autoFocus: this.props.autoFocus\n          }));\n        }\n      }]) && _(t.prototype, n), o && _(t, o), l;\n    }();\n\n    K.__docgenInfo = {\n      description: \"\",\n      methods: [{\n        name: \"refHandler\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"element\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleBlur\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleFocus\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }],\n      displayName: \"TelInput\",\n      props: {\n        className: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        disabled: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        readonly: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        fieldName: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        fieldId: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        value: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        placeholder: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        handleInputChange: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        handleOnBlur: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        handleOnFocus: {\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        autoFocus: {\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        autoComplete: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        inputProps: {\n          type: {\n            name: \"object\"\n          },\n          required: !1,\n          description: \"\"\n        },\n        refCallback: {\n          type: {\n            name: \"func\"\n          },\n          required: !0,\n          description: \"\"\n        },\n        cursorPosition: {\n          type: {\n            name: \"number\"\n          },\n          required: !1,\n          description: \"\"\n        }\n      }\n    };\n    r(4);\n\n    function z(e) {\n      return (z = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function W(e) {\n      return (W = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function G(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function J(e, t, n) {\n      return t && G(e.prototype, t), n && G(e, n), e;\n    }\n\n    function Y(e, t) {\n      return (Y = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    function Z(e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }\n\n    function $(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    var Q = /Android.+Mobile|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i,\n        X = function (e) {\n      function o(e) {\n        var p, t, n;\n        return function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, o), t = this, n = W(o).call(this, e), $(Z(Z(p = !n || \"object\" !== z(n) && \"function\" != typeof n ? Z(t) : n)), \"updateFlagOnDefaultCountryChange\", function (e) {\n          p.setFlag(e, !1);\n        }), $(Z(Z(p)), \"getTempCountry\", function (e) {\n          if (\"auto\" === e) return \"auto\";\n          var t = m.getCountryData(p.countries, e);\n          return t.iso2 || (t = 0 < p.props.preferredCountries.length ? m.getCountryData(p.countries, p.props.preferredCountries[0]) : c.getCountries()[0]), t.iso2;\n        }), $(Z(Z(p)), \"setNumber\", function (e, t) {\n          p.updateFlagFromNumber(e), p.updateValFromNumber(e, !t);\n        }), $(Z(Z(p)), \"setFlagDropdownRef\", function (e) {\n          p.flagDropDown = e;\n        }), $(Z(Z(p)), \"setTelRef\", function (e) {\n          p.tel = e;\n        }), $(Z(Z(p)), \"setFlag\", function (o, r) {\n          var a = p.selectedCountryData && p.selectedCountryData.iso2 ? p.selectedCountryData : {};\n          p.selectedCountryData = o ? m.getCountryData(p.countries, o, !1, !1, p.props.noCountryDataHandler) : {}, p.selectedCountryData.iso2 && (p.defaultCountry = p.selectedCountryData.iso2);\n          var e = o ? \"\".concat(p.selectedCountryData.name, \": +\").concat(p.selectedCountryData.dialCode) : \"Unknown\",\n              t = p.state.dialCode;\n          p.props.separateDialCode && (t = p.selectedCountryData.dialCode ? \"+\".concat(p.selectedCountryData.dialCode) : \"\", a.dialCode && delete p.wrapperClass[\"iti-sdc-\".concat(a.dialCode.length + 1)], t && (p.wrapperClass[\"iti-sdc-\".concat(t.length)] = !0));\n          var n = 0;\n          o && \"auto\" !== o && -1 === (n = m.findIndex(p.preferredCountries, function (e) {\n            return e.iso2 === o;\n          })) && (-1 === (n = m.findIndex(p.countries, function (e) {\n            return e.iso2 === o;\n          })) && (n = 0), n += p.preferredCountries.length), p.tel && p.state.showDropdown && p.tel.focus();\n          var i = p.updateDialCode(p.selectedCountryData.dialCode, !r);\n          p.setState({\n            value: i,\n            showDropdown: !1,\n            highlightedCountry: n,\n            countryCode: o,\n            title: e,\n            dialCode: t\n          }, function () {\n            if (p.updatePlaceholder(p.props), p.wrapperClass.active = !1, !r && a.iso2 !== o && \"function\" == typeof p.props.onSelectFlag) {\n              var e = p.state.value,\n                  t = p.formatFullNumber(e),\n                  n = p.isValidNumber(t);\n              p.props.onSelectFlag(e, p.selectedCountryData, t, n);\n            }\n          });\n        }), $(Z(Z(p)), \"getExtension\", function (e) {\n          return window.intlTelInputUtils ? window.intlTelInputUtils.getExtension(p.getFullNumber(e), p.selectedCountryData.iso2) : \"\";\n        }), $(Z(Z(p)), \"getNumber\", function (e, t) {\n          return window.intlTelInputUtils ? window.intlTelInputUtils.formatNumber(p.getFullNumber(e), p.selectedCountryData.iso2, t) : \"\";\n        }), $(Z(Z(p)), \"getFullNumber\", function (e) {\n          return (p.props.separateDialCode ? \"+\".concat(p.selectedCountryData.dialCode) : \"\") + e;\n        }), $(Z(Z(p)), \"getDialCode\", function (e) {\n          var t = \"\";\n          if (\"+\" === e.charAt(0)) for (var n = \"\", o = 0, r = e.length; o < r; o++) {\n            var a = e.charAt(o);\n            if (m.isNumeric(a) && (n += a, p.countryCodes[n] && (t = e.substr(0, o + 1)), 4 === n.length)) break;\n          }\n          return t;\n        }), $(Z(Z(p)), \"isUnknownNanp\", function (e, t) {\n          return \"+1\" === t && 4 <= m.getNumeric(e).length;\n        }), $(Z(Z(p)), \"addCountryCode\", function (e, t, n, o) {\n          n in e || (e[n] = []);\n          var r = o || 0;\n          return e[n][r] = t, e;\n        }), $(Z(Z(p)), \"processAllCountries\", function () {\n          p.props.onlyCountries.length ? p.filterCountries(p.props.onlyCountries, function (e) {\n            return -1 !== e;\n          }) : p.props.excludeCountries.length ? p.filterCountries(p.props.excludeCountries, function (e) {\n            return -1 === e;\n          }) : p.countries = c.getCountries();\n        }), $(Z(Z(p)), \"processCountryCodes\", function () {\n          p.countryCodes = {};\n\n          for (var e = 0; e < p.countries.length; e++) {\n            var t = p.countries[e];\n            if (p.addCountryCode(p.countryCodes, t.iso2, t.dialCode, t.priority), t.areaCodes) for (var n = 0; n < t.areaCodes.length; n++) {\n              p.addCountryCode(p.countryCodes, t.iso2, t.dialCode + t.areaCodes[n]);\n            }\n          }\n        }), $(Z(Z(p)), \"processPreferredCountries\", function () {\n          p.preferredCountries = [];\n\n          for (var e = 0, t = p.props.preferredCountries.length; e < t; e++) {\n            var n = p.props.preferredCountries[e].toLowerCase(),\n                o = m.getCountryData(p.countries, n, !0);\n            o && p.preferredCountries.push(o);\n          }\n        }), $(Z(Z(p)), \"setInitialState\", function () {\n          var e = p.props.value || p.props.defaultValue || \"\";\n          p.getDialCode(e) ? p.updateFlagFromNumber(e, !0) : \"auto\" !== p.tempCountry && (p.tempCountry ? p.setFlag(p.tempCountry, !0) : (p.defaultCountry = p.preferredCountries.length ? p.preferredCountries[0].iso2 : p.countries[0].iso2, e || p.setFlag(p.defaultCountry, !0)), e || p.nationalMode || p.autoHideDialCode || p.props.separateDialCode || p.setState({\n            value: \"+\".concat(p.selectedCountryData.dialCode)\n          }));\n          e && p.updateValFromNumber(e, p.props.formatOnInit, !0);\n        }), $(Z(Z(p)), \"initRequests\", function () {\n          Promise.resolve().then(r.t.bind(null, 6, 7)).then(function () {\n            p.loadUtils(), p.utilsScriptDeferred.resolve();\n          }).catch(function () {\n            return \"An error occurred while loading the component\";\n          }), \"auto\" === p.tempCountry ? p.loadAutoCountry() : p.autoCountryDeferred.resolve();\n        }), $(Z(Z(p)), \"loadAutoCountry\", function () {\n          var e = void 0 !== window.localStorage ? window.localStorage.getItem(\"itiAutoCountry\") : \"\";\n          e && (p.autoCountry = e), p.autoCountry ? p.autoCountryLoaded() : p.startedLoadingAutoCountry || (p.startedLoadingAutoCountry = !0, \"function\" == typeof p.props.geoIpLookup && p.props.geoIpLookup(function (e) {\n            p.autoCountry = e.toLowerCase(), void 0 !== window.localStorage && window.localStorage.setItem(\"itiAutoCountry\", p.autoCountry), p.autoCountryLoaded();\n          }));\n        }), $(Z(Z(p)), \"cap\", function (e) {\n          var t = p.tel ? p.tel.getAttribute(\"maxlength\") : e;\n          return t && e.length > t ? e.substr(0, t) : e;\n        }), $(Z(Z(p)), \"removeEmptyDialCode\", function () {\n          var e = p.state.value;\n\n          if (\"+\" === e.charAt(0)) {\n            var t = m.getNumeric(e);\n            t && p.selectedCountryData.dialCode !== t || p.setState({\n              value: \"\"\n            });\n          }\n        }), $(Z(Z(p)), \"handleUpDownKey\", function (e) {\n          var t = p.flagDropDown.querySelectorAll(\".highlight\")[0],\n              n = t ? t.previousElementSibling : void 0,\n              o = t ? t.nextElementSibling : void 0,\n              r = e === p.keys.UP ? n : o;\n\n          if (r) {\n            -1 < r.getAttribute(\"class\").indexOf(\"divider\") && (r = e === p.keys.UP ? r.previousElementSibling : r.nextElementSibling), p.scrollTo(r);\n            var a = m.retrieveLiIndex(r);\n            p.setState({\n              showDropdown: !0,\n              highlightedCountry: a\n            });\n          }\n        }), $(Z(Z(p)), \"handleEnterKey\", function () {\n          var e = p.flagDropDown.querySelectorAll(\".highlight\")[0];\n\n          if (e) {\n            var t = m.retrieveLiIndex(e),\n                n = e.getAttribute(\"data-country-code\");\n            p.setState({\n              showDropdown: !1,\n              highlightedCountry: t,\n              countryCode: n\n            }, function () {\n              p.setFlag(p.state.countryCode), p.unbindDocumentClick();\n            });\n          }\n        }), $(Z(Z(p)), \"searchForCountry\", function (e) {\n          for (var t = 0, n = p.countries.length; t < n; t++) {\n            if (m.startsWith(p.countries[t].name, e)) {\n              var o = p.flagDropDown.querySelector('.country-list [data-country-code=\"'.concat(p.countries[t].iso2, '\"]:not(.preferred)')),\n                  r = m.retrieveLiIndex(o);\n              p.setState({\n                showDropdown: !0,\n                highlightedCountry: r\n              }), p.scrollTo(o, !0);\n              break;\n            }\n          }\n        }), $(Z(Z(p)), \"formatNumber\", function (e) {\n          if (window.intlTelInputUtils && p.selectedCountryData) {\n            var t = window.intlTelInputUtils.numberFormat.INTERNATIONAL;\n            (!p.props.separateDialCode && p.nationalMode || \"+\" !== e.charAt(0)) && (t = window.intlTelInputUtils.numberFormat.NATIONAL), e = window.intlTelInputUtils.formatNumber(e, p.selectedCountryData.iso2, t);\n          }\n\n          return e;\n        }), $(Z(Z(p)), \"updateValFromNumber\", function (e, t) {\n          var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];\n\n          if (t && window.intlTelInputUtils && p.selectedCountryData) {\n            var o = p.props.separateDialCode || !p.nationalMode && \"+\" === e.charAt(0) ? window.intlTelInputUtils.numberFormat.INTERNATIONAL : window.intlTelInputUtils.numberFormat.NATIONAL;\n            e = window.intlTelInputUtils.formatNumber(e, p.selectedCountryData.iso2, o);\n          }\n\n          e = p.beforeSetNumber(e), p.setState({\n            showDropdown: !1,\n            value: e\n          }, function () {\n            n && p.notifyPhoneNumberChange(e), p.unbindDocumentClick();\n          });\n        }), $(Z(Z(p)), \"updateFlagFromNumber\", function (e, t) {\n          e && p.nationalMode && p.selectedCountryData && \"1\" === p.selectedCountryData.dialCode && \"+\" !== e.charAt(0) && (\"1\" !== e.charAt(0) && (e = \"1\".concat(e)), e = \"+\".concat(e));\n          var n = p.getDialCode(e),\n              o = null;\n\n          if (n) {\n            var r = p.countryCodes[m.getNumeric(n)];\n            if (!(p.selectedCountryData && -1 !== r.indexOf(p.selectedCountryData.iso2)) || p.isUnknownNanp(e, n)) for (var a = 0; a < r.length; a++) {\n              if (r[a]) {\n                o = r[a];\n                break;\n              }\n            }\n          } else \"+\" === e.charAt(0) && m.getNumeric(e).length && (o = null);\n\n          null !== o && p.setFlag(o, t);\n        }), $(Z(Z(p)), \"filterCountries\", function (e, t) {\n          var n;\n\n          for (n = 0; n < e.length; n++) {\n            e[n] = e[n].toLowerCase();\n          }\n\n          for (p.countries = [], n = 0; n < c.getCountries().length; n++) {\n            t(e.indexOf(c.getCountries()[n].iso2)) && p.countries.push(c.getCountries()[n]);\n          }\n        }), $(Z(Z(p)), \"processCountryData\", function () {\n          c.initialize(p.props.countriesData), p.processAllCountries.call(Z(Z(p))), p.processCountryCodes.call(Z(Z(p))), p.processPreferredCountries.call(Z(Z(p)));\n        }), $(Z(Z(p)), \"handleOnBlur\", function (e) {\n          if (p.removeEmptyDialCode(), \"function\" == typeof p.props.onPhoneNumberBlur) {\n            var t = p.state.value,\n                n = p.formatFullNumber(t),\n                o = p.isValidNumber(n);\n            p.props.onPhoneNumberBlur(o, t, p.selectedCountryData, n, p.getExtension(t), e);\n          }\n        }), $(Z(Z(p)), \"handleOnFocus\", function (e) {\n          if (\"function\" == typeof p.props.onPhoneNumberFocus) {\n            var t = p.state.value,\n                n = p.formatFullNumber(t),\n                o = p.isValidNumber(n);\n            p.props.onPhoneNumberFocus(o, t, p.selectedCountryData, n, p.getExtension(t), e);\n          }\n        }), $(Z(Z(p)), \"bindDocumentClick\", function () {\n          p.isOpening = !0, document.querySelector(\"html\").addEventListener(\"click\", p.handleDocumentClick);\n        }), $(Z(Z(p)), \"unbindDocumentClick\", function () {\n          document.querySelector(\"html\").removeEventListener(\"click\", p.handleDocumentClick);\n        }), $(Z(Z(p)), \"clickSelectedFlag\", function (e) {\n          var t = p.props,\n              n = t.allowDropdown,\n              o = t.onFlagClick,\n              r = p.state,\n              a = r.showDropdown,\n              i = r.disabled,\n              l = r.readonly;\n          a || i || l || !n ? a && p.toggleDropdown(!1) : p.setState({\n            showDropdown: !0,\n            offsetTop: m.offset(p.tel).top,\n            outerHeight: m.getOuterHeight(p.tel)\n          }, function () {\n            var e = p.flagDropDown.querySelector(\".highlight\");\n            e && p.scrollTo(e, !0);\n          }), \"function\" == typeof o && o(e);\n        }), $(Z(Z(p)), \"updatePlaceholder\", function () {\n          var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : p.props;\n\n          if (window.intlTelInputUtils && e.autoPlaceholder && p.selectedCountryData) {\n            var t = window.intlTelInputUtils.numberType[e.numberType],\n                n = p.selectedCountryData.iso2 ? window.intlTelInputUtils.getExampleNumber(p.selectedCountryData.iso2, p.nationalMode, t) : \"\";\n            n = p.beforeSetNumber(n, e), \"function\" == typeof e.customPlaceholder && (n = e.customPlaceholder(n, p.selectedCountryData)), p.setState({\n              placeholder: n\n            });\n          }\n        }), $(Z(Z(p)), \"toggleDropdown\", function (e) {\n          p.setState({\n            showDropdown: !!e\n          }, function () {\n            p.state.showDropdown || p.unbindDocumentClick();\n          });\n        }), $(Z(Z(p)), \"scrollTo\", function (e, t) {\n          try {\n            var n = p.flagDropDown.querySelector(\".country-list\"),\n                o = parseFloat(window.getComputedStyle(n).getPropertyValue(\"height\")),\n                r = m.offset(n).top,\n                a = r + o,\n                i = m.getOuterHeight(e),\n                l = m.offset(e).top,\n                u = l + i,\n                s = o / 2 - i / 2,\n                d = l - r + n.scrollTop;\n            if (l < r) t && (d -= s), n.scrollTop = d;else if (a < u) {\n              t && (d += s);\n              var c = o - i;\n              n.scrollTop = d - c;\n            }\n          } catch (e) {}\n        }), $(Z(Z(p)), \"updateDialCode\", function (e, t) {\n          var n = p.state.value;\n          if (!e) return n;\n          var o = n;\n\n          if (e = \"+\".concat(e), \"+\" === n.charAt(0)) {\n            var r = p.getDialCode(n);\n            o = r ? n.replace(r, e) : e;\n          } else p.nationalMode || p.props.separateDialCode || (n ? o = e + n : !t && p.autoHideDialCode || (o = e));\n\n          return o !== n && p.notifyPhoneNumberChange(o), o;\n        }), $(Z(Z(p)), \"generateMarkup\", function () {\n          p.wrapperClass[\"separate-dial-code\"] = p.props.separateDialCode, p.isMobile && p.props.useMobileFullscreenDropdown && (m.addClass(document.querySelector(\"body\"), \"iti-mobile\"), p.dropdownContainer = \"body\", window.addEventListener(\"scroll\", p.handleWindowScroll));\n        }), $(Z(Z(p)), \"handleSelectedFlagKeydown\", function (e) {\n          p.state.showDropdown || e.which !== p.keys.UP && e.which !== p.keys.DOWN && e.which !== p.keys.SPACE && e.which !== p.keys.ENTER || (e.preventDefault(), e.stopPropagation(), p.toggleDropdown(!0)), e.which === p.keys.TAB && p.toggleDropdown(!1);\n        }), $(Z(Z(p)), \"isValidNumber\", function (e) {\n          var t = m.trim(e),\n              n = p.nationalMode || p.props.separateDialCode ? p.selectedCountryData.iso2 : \"\";\n          return !!window.intlTelInputUtils && window.intlTelInputUtils.isValidNumber(t, n);\n        }), $(Z(Z(p)), \"formatFullNumber\", function (e) {\n          return window.intlTelInputUtils ? p.getNumber(e, window.intlTelInputUtils.numberFormat.INTERNATIONAL) : e;\n        }), $(Z(Z(p)), \"notifyPhoneNumberChange\", function (e) {\n          if (\"function\" == typeof p.props.onPhoneNumberChange) {\n            var t = p.formatFullNumber(e),\n                n = p.isValidNumber(t);\n            p.props.onPhoneNumberChange(n, e, p.selectedCountryData, t, p.getExtension(e));\n          }\n        }), $(Z(Z(p)), \"beforeSetNumber\", function (e) {\n          if ((1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : p.props).separateDialCode) {\n            var t = p.getDialCode(e);\n\n            if (t) {\n              null !== p.selectedCountryData.areaCodes && (t = \"+\".concat(p.selectedCountryData.dialCode));\n              var n = \" \" === e[t.length] || \"-\" === e[t.length] ? t.length + 1 : t.length;\n              e = e.substr(n);\n            }\n          }\n\n          return p.cap(e);\n        }), $(Z(Z(p)), \"handleWindowScroll\", function () {\n          p.setState({\n            showDropdown: !1\n          }, function () {\n            window.removeEventListener(\"scroll\", p.handleWindowScroll);\n          });\n        }), $(Z(Z(p)), \"handleDocumentKeyDown\", function (e) {\n          var t;\n          e.preventDefault(), e.which === p.keys.UP || e.which === p.keys.DOWN ? p.handleUpDownKey(e.which) : e.which === p.keys.ENTER ? p.handleEnterKey() : e.which === p.keys.ESC ? p.setState({\n            showDropdown: !1\n          }) : (e.which >= p.keys.A && e.which <= p.keys.Z || e.which === p.keys.SPACE) && (t && clearTimeout(t), p.query || (p.query = \"\"), p.query += String.fromCharCode(e.which), p.searchForCountry(p.query), t = setTimeout(function () {\n            p.query = \"\";\n          }, 1e3));\n        }), $(Z(Z(p)), \"handleDocumentClick\", function (e) {\n          var t = e.target.getAttribute(\"class\");\n          (null === t || t && -1 === t.indexOf(\"country\") && -1 === t.indexOf(\"selected-flag\") && -1 === t.indexOf(\"iti-flag\") && -1 === t.indexOf(\"iti-arrow\")) && (p.isOpening = !1), p.isOpening || p.toggleDropdown(!1), p.isOpening = !1;\n        }), $(Z(Z(p)), \"handleInputChange\", function (e) {\n          var t = e.target.selectionStart,\n              n = e.target.value,\n              o = \"\" === n ? n : n.substring(0, t),\n              r = p.props.format ? p.formatNumber(e.target.value) : e.target.value;\n          t = m.getCursorPositionAfterFormating(o, n, r), void 0 !== p.props.value ? p.setState({\n            cursorPosition: t\n          }, function () {\n            p.updateFlagFromNumber(r), p.notifyPhoneNumberChange(r);\n          }) : p.setState({\n            value: r,\n            cursorPosition: t\n          }, function () {\n            p.updateFlagFromNumber(r), p.notifyPhoneNumberChange(r);\n          });\n        }), $(Z(Z(p)), \"changeHighlightCountry\", function (e, t) {\n          p.setState({\n            showDropdown: e,\n            highlightedCountry: t\n          });\n        }), $(Z(Z(p)), \"loadUtils\", function () {\n          window.intlTelInputUtils && p.utilsScriptDeferred.resolve();\n        }), $(Z(Z(p)), \"autoCountryLoaded\", function () {\n          \"auto\" === p.tempCountry && (p.tempCountry = p.autoCountry, p.autoCountryDeferred.resolve());\n        }), p.wrapperClass = {}, p.autoCountry = \"\", p.tempCountry = \"\", p.startedLoadingAutoCountry = !1, p.deferreds = [], p.autoCountryDeferred = new l.a.Deferred(), p.utilsScriptDeferred = new l.a.Deferred(), p.isOpening = !1, p.isMobile = \"undefined\" != typeof navigator && Q.test(navigator.userAgent), p.preferredCountries = [], p.countries = [], p.countryCodes = {}, p.windowLoaded = !1, p.keys = {\n          UP: 38,\n          DOWN: 40,\n          ENTER: 13,\n          ESC: 27,\n          PLUS: 43,\n          A: 65,\n          Z: 90,\n          SPACE: 32,\n          TAB: 9\n        }, p.query = \"\", p.selectedCountryData = {}, p.state = {\n          showDropdown: !1,\n          highlightedCountry: 0,\n          value: e.value || e.defaultValue,\n          disabled: e.disabled,\n          readonly: !1,\n          offsetTop: 0,\n          outerHeight: 0,\n          placeholder: \"\",\n          title: \"\",\n          countryCode: \"us\",\n          dialCode: \"\",\n          cursorPosition: (e.value || e.defaultValue).length\n        }, p;\n      }\n\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && Y(e, t);\n      }(o, a[\"Component\"]), J(o, null, [{\n        key: \"getDerivedStateFromProps\",\n        value: function value(e, t) {\n          var n = null;\n          return void 0 !== e.value && t.value !== e.value && (n = {\n            value: e.value\n          }), t.disabled !== e.disabled && (n = {\n            disabled: e.disabled\n          }), n;\n        }\n      }]), J(o, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var e = this;\n          this.autoHideDialCode = this.props.autoHideDialCode, this.allowDropdown = this.props.allowDropdown, this.nationalMode = this.props.nationalMode, this.dropdownContainer = \"\", this.nationalMode && (this.autoHideDialCode = !1), this.props.separateDialCode && (this.autoHideDialCode = !1, this.nationalMode = !1, this.allowDropdown = !0), this.processCountryData.call(this), this.tempCountry = this.getTempCountry(this.props.defaultCountry), \"complete\" === document.readyState ? this.windowLoaded = !0 : window.addEventListener(\"load\", function () {\n            e.windowLoaded = !0;\n          }), this.generateMarkup(), this.setInitialState(), this.initRequests(), this.deferreds.push(this.autoCountryDeferred.promise()), this.deferreds.push(this.utilsScriptDeferred.promise()), l.a.when(this.deferreds).done(function () {\n            e.setInitialState();\n          }), document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function value(e, t) {\n          return t.showDropdown ? (document.addEventListener(\"keydown\", this.handleDocumentKeyDown), this.bindDocumentClick()) : (document.removeEventListener(\"keydown\", this.handleDocumentKeyDown), this.unbindDocumentClick()), !0;\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value(e) {\n          this.props.value !== e.value && this.updateFlagFromNumber(this.props.value), \"function\" == typeof this.props.customPlaceholder && e.customPlaceholder !== this.props.customPlaceholder && this.updatePlaceholder(this.props), this.props.allowDropdown !== e.allowDropdown && (this.allowDropdown = this.props.allowDropdown), this.props.defaultCountry !== e.defaultCountry && this.updateFlagOnDefaultCountryChange(this.props.defaultCountry);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          document.removeEventListener(\"keydown\", this.handleDocumentKeyDown), window.removeEventListener(\"scroll\", this.handleWindowScroll), this.unbindDocumentClick();\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          this.wrapperClass[this.props.containerClassName] = !0;\n          var e = this.props.inputClassName,\n              t = Object.assign({}, this.props.style || {});\n          this.wrapperClass[\"allow-dropdown\"] = this.allowDropdown, this.wrapperClass.expanded = this.state.showDropdown;\n          var n = s()(this.wrapperClass),\n              o = this.selectedCountryData ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\",\n              r = void 0 !== this.props.value ? this.props.value : this.state.value;\n          return f.a.createElement(\"div\", {\n            className: n,\n            style: t\n          }, f.a.createElement(x, {\n            refCallback: this.setFlagDropdownRef,\n            allowDropdown: this.allowDropdown,\n            dropdownContainer: this.dropdownContainer,\n            separateDialCode: this.props.separateDialCode,\n            dialCode: this.state.dialCode,\n            clickSelectedFlag: this.clickSelectedFlag,\n            setFlag: this.setFlag,\n            countryCode: this.state.countryCode,\n            isMobile: this.isMobile,\n            handleSelectedFlagKeydown: this.handleSelectedFlagKeydown,\n            changeHighlightCountry: this.changeHighlightCountry,\n            countries: this.countries,\n            showDropdown: this.state.showDropdown,\n            inputTop: this.state.offsetTop,\n            inputOuterHeight: this.state.outerHeight,\n            preferredCountries: this.preferredCountries,\n            highlightedCountry: this.state.highlightedCountry,\n            titleTip: o\n          }), f.a.createElement(K, {\n            refCallback: this.setTelRef,\n            handleInputChange: this.handleInputChange,\n            handleOnBlur: this.handleOnBlur,\n            handleOnFocus: this.handleOnFocus,\n            className: e,\n            disabled: this.state.disabled,\n            readonly: this.state.readonly,\n            fieldName: this.props.fieldName,\n            fieldId: this.props.fieldId,\n            value: r,\n            placeholder: void 0 !== this.props.placeholder ? this.props.placeholder : this.state.placeholder,\n            autoFocus: this.props.autoFocus,\n            autoComplete: this.props.autoComplete,\n            inputProps: this.props.telInputProps,\n            cursorPosition: this.state.cursorPosition\n          }));\n        }\n      }]), o;\n    }();\n\n    X.defaultProps = {\n      containerClassName: \"intl-tel-input\",\n      inputClassName: \"\",\n      fieldName: \"\",\n      fieldId: \"\",\n      defaultValue: \"\",\n      countriesData: null,\n      allowDropdown: !0,\n      autoHideDialCode: !0,\n      autoPlaceholder: !0,\n      customPlaceholder: null,\n      excludeCountries: [],\n      formatOnInit: !0,\n      separateDialCode: !1,\n      defaultCountry: \"\",\n      geoIpLookup: null,\n      nationalMode: !0,\n      numberType: \"MOBILE\",\n      noCountryDataHandler: null,\n      onlyCountries: [],\n      preferredCountries: [\"us\", \"gb\"],\n      onPhoneNumberChange: null,\n      onPhoneNumberBlur: null,\n      onPhoneNumberFocus: null,\n      onSelectFlag: null,\n      disabled: !1,\n      autoFocus: !1,\n      useMobileFullscreenDropdown: !0,\n      autoComplete: \"off\",\n      telInputProps: {},\n      format: !1,\n      onFlagClick: null\n    };\n    t.default = X;\n    X.__docgenInfo = {\n      description: \"\",\n      methods: [{\n        name: \"getDerivedStateFromProps\",\n        docblock: null,\n        modifiers: [\"static\"],\n        params: [{\n          name: \"nextProps\",\n          type: null\n        }, {\n          name: \"prevState\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"updateFlagOnDefaultCountryChange\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countryCode\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"getTempCountry\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countryCode\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"setNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"preventFormat\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"setFlagDropdownRef\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"ref\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"setTelRef\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"ref\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"setFlag\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countryCode\",\n          type: null\n        }, {\n          name: \"isInit\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"getExtension\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"getNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"format\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"getFullNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"getDialCode\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"isUnknownNanp\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"dialCode\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"addCountryCode\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countryCodes\",\n          type: null\n        }, {\n          name: \"iso2\",\n          type: null\n        }, {\n          name: \"dialCode\",\n          type: null\n        }, {\n          name: \"priority\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"processAllCountries\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"processCountryCodes\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"processPreferredCountries\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"setInitialState\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"initRequests\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"loadAutoCountry\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"cap\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"removeEmptyDialCode\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"handleUpDownKey\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"key\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleEnterKey\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"searchForCountry\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"query\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"formatNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"updateValFromNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"doFormat\",\n          type: null\n        }, {\n          name: \"doNotify\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"updateFlagFromNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"isInit\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"filterCountries\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"countryArray\",\n          type: null\n        }, {\n          name: \"processFunc\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"processCountryData\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"handleOnBlur\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleOnFocus\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"bindDocumentClick\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"unbindDocumentClick\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"clickSelectedFlag\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"updatePlaceholder\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"props\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"toggleDropdown\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"status\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"scrollTo\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"element\",\n          type: null\n        }, {\n          name: \"middle\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"updateDialCode\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"newDialCode\",\n          type: null\n        }, {\n          name: \"hasSelectedListItem\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"generateMarkup\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"handleSelectedFlagKeydown\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"isValidNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"formatFullNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"notifyPhoneNumberChange\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"newNumber\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"beforeSetNumber\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"number\",\n          type: null\n        }, {\n          name: \"props\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleWindowScroll\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"handleDocumentKeyDown\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleDocumentClick\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"handleInputChange\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"e\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"changeHighlightCountry\",\n        docblock: null,\n        modifiers: [],\n        params: [{\n          name: \"showDropdown\",\n          type: null\n        }, {\n          name: \"selectedIndex\",\n          type: null\n        }],\n        returns: null\n      }, {\n        name: \"loadUtils\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }, {\n        name: \"autoCountryLoaded\",\n        docblock: null,\n        modifiers: [],\n        params: [],\n        returns: null\n      }],\n      displayName: \"IntlTelInput\",\n      props: {\n        containerClassName: {\n          defaultValue: {\n            value: \"'intl-tel-input'\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Container CSS class name.\"\n        },\n        inputClassName: {\n          defaultValue: {\n            value: \"''\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Text input CSS class name.\"\n        },\n        fieldName: {\n          defaultValue: {\n            value: \"''\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"It's used as `input` field `name` attribute.\"\n        },\n        fieldId: {\n          defaultValue: {\n            value: \"''\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"It's used as `input` field `id` attribute.\"\n        },\n        defaultValue: {\n          defaultValue: {\n            value: \"''\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"The value used to initialize input. This will only work on uncontrolled component.\"\n        },\n        countriesData: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"array\"\n            }\n          },\n          required: !1,\n          description: \"Countries data can be configured, it defaults to data defined in `AllCountries`.\"\n        },\n        allowDropdown: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Whether or not to allow the dropdown. If disabled, there is no dropdown arrow, and the selected flag is not clickable.\\nAlso we display the selected flag on the right instead because it is just a marker of state.\"\n        },\n        autoHideDialCode: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"If there is just a dial code in the input: remove it on blur, and re-add it on focus.\"\n        },\n        autoPlaceholder: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Add or remove input placeholder with an example number for the selected country.\"\n        },\n        customPlaceholder: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Change the placeholder generated by autoPlaceholder. Must return a string.\"\n        },\n        excludeCountries: {\n          defaultValue: {\n            value: \"[]\",\n            computed: !1\n          },\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"string\"\n            }\n          },\n          required: !1,\n          description: \"Don't display the countries you specify. (Array)\"\n        },\n        formatOnInit: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Format the input value during initialisation.\"\n        },\n        separateDialCode: {\n          defaultValue: {\n            value: \"false\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Display the country dial code next to the selected flag so it's not part of the typed number.\\nNote that this will disable nationalMode because technically we are dealing with international numbers,\\nbut with the dial code separated.\"\n        },\n        defaultCountry: {\n          defaultValue: {\n            value: \"''\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Default country.\"\n        },\n        geoIpLookup: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"GeoIp lookup function.\"\n        },\n        nationalMode: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Don't insert international dial codes.\"\n        },\n        numberType: {\n          defaultValue: {\n            value: \"'MOBILE'\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Number type to use for placeholders.\"\n        },\n        noCountryDataHandler: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: 'The function which can catch the \"no this default country\" exception.'\n        },\n        onlyCountries: {\n          defaultValue: {\n            value: \"[]\",\n            computed: !1\n          },\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"string\"\n            }\n          },\n          required: !1,\n          description: \"Display only these countries.\"\n        },\n        preferredCountries: {\n          defaultValue: {\n            value: \"['us', 'gb']\",\n            computed: !1\n          },\n          type: {\n            name: \"arrayOf\",\n            value: {\n              name: \"string\"\n            }\n          },\n          required: !1,\n          description: \"The countries at the top of the list. defaults to United States and United Kingdom.\"\n        },\n        onPhoneNumberChange: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Optional validation callback function. It returns validation status, input box value and selected country data.\"\n        },\n        onPhoneNumberBlur: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Optional validation callback function. It returns validation status, input box value and selected country data.\"\n        },\n        onPhoneNumberFocus: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Optional validation callback function. It returns validation status, input box value and selected country data.\"\n        },\n        onSelectFlag: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Allow main app to do things when a country is selected.\"\n        },\n        disabled: {\n          defaultValue: {\n            value: \"false\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Disable this component.\"\n        },\n        autoFocus: {\n          defaultValue: {\n            value: \"false\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Enable auto focus\"\n        },\n        useMobileFullscreenDropdown: {\n          defaultValue: {\n            value: \"true\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Render fullscreen flag dropdown when mobile useragent is detected. The dropdown element is rendered as a direct child of document.body\"\n        },\n        autoComplete: {\n          defaultValue: {\n            value: \"'off'\",\n            computed: !1\n          },\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Set the value of the autoComplete attribute on the input. For example, set it to phone to tell the browser where to auto complete phone numbers.\"\n        },\n        telInputProps: {\n          defaultValue: {\n            value: \"{}\",\n            computed: !1\n          },\n          type: {\n            name: \"object\"\n          },\n          required: !1,\n          description: \"Pass through arbitrary props to the tel input element.\"\n        },\n        format: {\n          defaultValue: {\n            value: \"false\",\n            computed: !1\n          },\n          type: {\n            name: \"bool\"\n          },\n          required: !1,\n          description: \"Format the number.\"\n        },\n        onFlagClick: {\n          defaultValue: {\n            value: \"null\",\n            computed: !1\n          },\n          type: {\n            name: \"func\"\n          },\n          required: !1,\n          description: \"Allow main app to do things when flag icon is clicked.\"\n        },\n        value: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"The value of the input field. Useful for making input value controlled from outside the component.\"\n        },\n        placeholder: {\n          type: {\n            name: \"string\"\n          },\n          required: !1,\n          description: \"Static placeholder for input controller. When defined it takes priority over autoPlaceholder.\"\n        },\n        style: {\n          type: {\n            name: \"custom\",\n            raw: \"StylePropTypes\"\n          },\n          required: !1,\n          description: \"Style object for the wrapper div. Useful for setting 100% width on the wrapper, etc.\"\n        }\n      }\n    };\n  }, function (e, t) {\n    e.exports = r;\n  }]);\n});","(function () {\n  var aa = this;\n\n  function k(a) {\n    return \"string\" == typeof a;\n  }\n\n  function m(a, b) {\n    a = a.split(\".\");\n    var c = aa;\n    a[0] in c || \"undefined\" == typeof c.execScript || c.execScript(\"var \" + a[0]);\n\n    for (var d; a.length && (d = a.shift());) {\n      a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;\n    }\n  }\n\n  function n(a, b) {\n    function c() {}\n\n    c.prototype = b.prototype;\n    a.o = b.prototype;\n    a.prototype = new c();\n    a.prototype.constructor = a;\n\n    a.aa = function (a, c, f) {\n      for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {\n        d[e - 2] = arguments[e];\n      }\n\n      return b.prototype[c].apply(a, d);\n    };\n  }\n\n  ;\n  var p = Array.prototype.indexOf ? function (a, b, c) {\n    return Array.prototype.indexOf.call(a, b, c);\n  } : function (a, b, c) {\n    c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\n    if (k(a)) return k(b) && 1 == b.length ? a.indexOf(b, c) : -1;\n\n    for (; c < a.length; c++) {\n      if (c in a && a[c] === b) return c;\n    }\n\n    return -1;\n  };\n\n  function q(a, b) {\n    a.sort(b || ba);\n  }\n\n  function ba(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  ;\n\n  function ca(a) {\n    var b = [],\n        c = 0,\n        d;\n\n    for (d in a) {\n      b[c++] = a[d];\n    }\n\n    return b;\n  }\n\n  ;\n\n  function da(a, b) {\n    this.a = a;\n    this.h = !!b.i;\n    this.c = b.b;\n    this.m = b.type;\n    this.l = !1;\n\n    switch (this.c) {\n      case ea:\n      case fa:\n      case ha:\n      case ia:\n      case ja:\n      case ka:\n      case la:\n        this.l = !0;\n    }\n\n    this.g = b.defaultValue;\n  }\n\n  var la = 1,\n      ka = 2,\n      ea = 3,\n      fa = 4,\n      ha = 6,\n      ia = 16,\n      ja = 18;\n\n  function ma(a, b) {\n    this.c = a;\n    this.a = {};\n\n    for (a = 0; a < b.length; a++) {\n      var c = b[a];\n      this.a[c.a] = c;\n    }\n  }\n\n  function na(a) {\n    a = ca(a.a);\n    q(a, function (a, c) {\n      return a.a - c.a;\n    });\n    return a;\n  }\n\n  ;\n\n  function r() {\n    this.a = {};\n    this.g = this.f().a;\n    this.c = this.h = null;\n  }\n\n  r.prototype.has = function (a) {\n    return null != this.a[a.a];\n  };\n\n  r.prototype.get = function (a, b) {\n    return t(this, a.a, b);\n  };\n\n  r.prototype.set = function (a, b) {\n    u(this, a.a, b);\n  };\n\n  r.prototype.add = function (a, b) {\n    v(this, a.a, b);\n  };\n\n  function oa(a, b) {\n    for (var c = na(a.f()), d = 0; d < c.length; d++) {\n      var e = c[d],\n          f = e.a;\n\n      if (null != b.a[f]) {\n        a.c && delete a.c[e.a];\n        var g = 11 == e.c || 10 == e.c;\n\n        if (e.h) {\n          e = w(b, f);\n\n          for (var h = 0; h < e.length; h++) {\n            v(a, f, g ? e[h].clone() : e[h]);\n          }\n        } else e = x(b, f), g ? (g = x(a, f)) ? oa(g, e) : u(a, f, e.clone()) : u(a, f, e);\n      }\n    }\n  }\n\n  r.prototype.clone = function () {\n    var a = new this.constructor();\n    a != this && (a.a = {}, a.c && (a.c = {}), oa(a, this));\n    return a;\n  };\n\n  function x(a, b) {\n    var c = a.a[b];\n    if (null == c) return null;\n\n    if (a.h) {\n      if (!(b in a.c)) {\n        var d = a.h,\n            e = a.g[b];\n        if (null != c) if (e.h) {\n          for (var f = [], g = 0; g < c.length; g++) {\n            f[g] = d.c(e, c[g]);\n          }\n\n          c = f;\n        } else c = d.c(e, c);\n        return a.c[b] = c;\n      }\n\n      return a.c[b];\n    }\n\n    return c;\n  }\n\n  function t(a, b, c) {\n    var d = x(a, b);\n    return a.g[b].h ? d[c || 0] : d;\n  }\n\n  function y(a, b) {\n    if (null != a.a[b]) a = t(a, b, void 0);else a: {\n      a = a.g[b];\n      if (void 0 === a.g) if (b = a.m, b === Boolean) a.g = !1;else if (b === Number) a.g = 0;else if (b === String) a.g = a.l ? \"0\" : \"\";else {\n        a = new b();\n        break a;\n      }\n      a = a.g;\n    }\n    return a;\n  }\n\n  function w(a, b) {\n    return x(a, b) || [];\n  }\n\n  function A(a, b) {\n    return a.g[b].h ? null != a.a[b] ? a.a[b].length : 0 : null != a.a[b] ? 1 : 0;\n  }\n\n  function u(a, b, c) {\n    a.a[b] = c;\n    a.c && (a.c[b] = c);\n  }\n\n  function v(a, b, c) {\n    a.a[b] || (a.a[b] = []);\n    a.a[b].push(c);\n    a.c && delete a.c[b];\n  }\n\n  function B(a, b) {\n    var c = [],\n        d;\n\n    for (d in b) {\n      0 != d && c.push(new da(d, b[d]));\n    }\n\n    return new ma(a, c);\n  }\n\n  ;\n\n  function C() {}\n\n  C.prototype.a = function (a) {\n    new a.c();\n    throw Error(\"Unimplemented\");\n  };\n\n  C.prototype.c = function (a, b) {\n    if (11 == a.c || 10 == a.c) return b instanceof r ? b : this.a(a.m.prototype.f(), b);\n    if (14 == a.c) return k(b) && pa.test(b) && (a = Number(b), 0 < a) ? a : b;\n    if (!a.l) return b;\n    a = a.m;\n\n    if (a === String) {\n      if (\"number\" == typeof b) return String(b);\n    } else if (a === Number && k(b) && (\"Infinity\" === b || \"-Infinity\" === b || \"NaN\" === b || pa.test(b))) return Number(b);\n\n    return b;\n  };\n\n  var pa = /^-?[0-9]+$/;\n\n  function D() {}\n\n  n(D, C);\n\n  D.prototype.a = function (a, b) {\n    a = new a.c();\n    a.h = this;\n    a.a = b;\n    a.c = {};\n    return a;\n  };\n\n  function E() {}\n\n  n(E, D);\n\n  E.prototype.c = function (a, b) {\n    return 8 == a.c ? !!b : C.prototype.c.apply(this, arguments);\n  };\n\n  E.prototype.a = function (a, b) {\n    return E.o.a.call(this, a, b);\n  };\n\n  function F(a, b) {\n    null != a && this.a.apply(this, arguments);\n  }\n\n  F.prototype.c = \"\";\n\n  F.prototype.set = function (a) {\n    this.c = \"\" + a;\n  };\n\n  F.prototype.a = function (a, b, c) {\n    this.c += String(a);\n    if (null != b) for (var d = 1; d < arguments.length; d++) {\n      this.c += arguments[d];\n    }\n    return this;\n  };\n\n  F.prototype.toString = function () {\n    return this.c;\n  };\n  /*\n  Protocol Buffer 2 Copyright 2008 Google Inc.\n  All other code copyright its respective owners.\n  Copyright (C) 2010 The Libphonenumber Authors\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n\n  function G() {\n    r.call(this);\n  }\n\n  n(G, r);\n  var qa = null;\n\n  function H() {\n    r.call(this);\n  }\n\n  n(H, r);\n  var ra = null;\n\n  function I() {\n    r.call(this);\n  }\n\n  n(I, r);\n  var sa = null;\n\n  G.prototype.f = function () {\n    var a = qa;\n    a || (qa = a = B(G, {\n      0: {\n        name: \"NumberFormat\",\n        j: \"i18n.phonenumbers.NumberFormat\"\n      },\n      1: {\n        name: \"pattern\",\n        required: !0,\n        b: 9,\n        type: String\n      },\n      2: {\n        name: \"format\",\n        required: !0,\n        b: 9,\n        type: String\n      },\n      3: {\n        name: \"leading_digits_pattern\",\n        i: !0,\n        b: 9,\n        type: String\n      },\n      4: {\n        name: \"national_prefix_formatting_rule\",\n        b: 9,\n        type: String\n      },\n      6: {\n        name: \"national_prefix_optional_when_formatting\",\n        b: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      5: {\n        name: \"domestic_carrier_code_formatting_rule\",\n        b: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n\n  G.f = G.prototype.f;\n\n  H.prototype.f = function () {\n    var a = ra;\n    a || (ra = a = B(H, {\n      0: {\n        name: \"PhoneNumberDesc\",\n        j: \"i18n.phonenumbers.PhoneNumberDesc\"\n      },\n      2: {\n        name: \"national_number_pattern\",\n        b: 9,\n        type: String\n      },\n      9: {\n        name: \"possible_length\",\n        i: !0,\n        b: 5,\n        type: Number\n      },\n      10: {\n        name: \"possible_length_local_only\",\n        i: !0,\n        b: 5,\n        type: Number\n      },\n      6: {\n        name: \"example_number\",\n        b: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n\n  H.f = H.prototype.f;\n\n  I.prototype.f = function () {\n    var a = sa;\n    a || (sa = a = B(I, {\n      0: {\n        name: \"PhoneMetadata\",\n        j: \"i18n.phonenumbers.PhoneMetadata\"\n      },\n      1: {\n        name: \"general_desc\",\n        b: 11,\n        type: H\n      },\n      2: {\n        name: \"fixed_line\",\n        b: 11,\n        type: H\n      },\n      3: {\n        name: \"mobile\",\n        b: 11,\n        type: H\n      },\n      4: {\n        name: \"toll_free\",\n        b: 11,\n        type: H\n      },\n      5: {\n        name: \"premium_rate\",\n        b: 11,\n        type: H\n      },\n      6: {\n        name: \"shared_cost\",\n        b: 11,\n        type: H\n      },\n      7: {\n        name: \"personal_number\",\n        b: 11,\n        type: H\n      },\n      8: {\n        name: \"voip\",\n        b: 11,\n        type: H\n      },\n      21: {\n        name: \"pager\",\n        b: 11,\n        type: H\n      },\n      25: {\n        name: \"uan\",\n        b: 11,\n        type: H\n      },\n      27: {\n        name: \"emergency\",\n        b: 11,\n        type: H\n      },\n      28: {\n        name: \"voicemail\",\n        b: 11,\n        type: H\n      },\n      29: {\n        name: \"short_code\",\n        b: 11,\n        type: H\n      },\n      30: {\n        name: \"standard_rate\",\n        b: 11,\n        type: H\n      },\n      31: {\n        name: \"carrier_specific\",\n        b: 11,\n        type: H\n      },\n      33: {\n        name: \"sms_services\",\n        b: 11,\n        type: H\n      },\n      24: {\n        name: \"no_international_dialling\",\n        b: 11,\n        type: H\n      },\n      9: {\n        name: \"id\",\n        required: !0,\n        b: 9,\n        type: String\n      },\n      10: {\n        name: \"country_code\",\n        b: 5,\n        type: Number\n      },\n      11: {\n        name: \"international_prefix\",\n        b: 9,\n        type: String\n      },\n      17: {\n        name: \"preferred_international_prefix\",\n        b: 9,\n        type: String\n      },\n      12: {\n        name: \"national_prefix\",\n        b: 9,\n        type: String\n      },\n      13: {\n        name: \"preferred_extn_prefix\",\n        b: 9,\n        type: String\n      },\n      15: {\n        name: \"national_prefix_for_parsing\",\n        b: 9,\n        type: String\n      },\n      16: {\n        name: \"national_prefix_transform_rule\",\n        b: 9,\n        type: String\n      },\n      18: {\n        name: \"same_mobile_and_fixed_line_pattern\",\n        b: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      19: {\n        name: \"number_format\",\n        i: !0,\n        b: 11,\n        type: G\n      },\n      20: {\n        name: \"intl_number_format\",\n        i: !0,\n        b: 11,\n        type: G\n      },\n      22: {\n        name: \"main_country_for_code\",\n        b: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      23: {\n        name: \"leading_digits\",\n        b: 9,\n        type: String\n      },\n      26: {\n        name: \"leading_zero_possible\",\n        b: 8,\n        defaultValue: !1,\n        type: Boolean\n      }\n    }));\n    return a;\n  };\n\n  I.f = I.prototype.f;\n\n  function J() {\n    r.call(this);\n  }\n\n  n(J, r);\n  var ta = null,\n      ua = {\n    $: 0,\n    w: 1,\n    v: 5,\n    u: 10,\n    s: 20\n  };\n\n  J.prototype.f = function () {\n    var a = ta;\n    a || (ta = a = B(J, {\n      0: {\n        name: \"PhoneNumber\",\n        j: \"i18n.phonenumbers.PhoneNumber\"\n      },\n      1: {\n        name: \"country_code\",\n        required: !0,\n        b: 5,\n        type: Number\n      },\n      2: {\n        name: \"national_number\",\n        required: !0,\n        b: 4,\n        type: Number\n      },\n      3: {\n        name: \"extension\",\n        b: 9,\n        type: String\n      },\n      4: {\n        name: \"italian_leading_zero\",\n        b: 8,\n        type: Boolean\n      },\n      8: {\n        name: \"number_of_leading_zeros\",\n        b: 5,\n        defaultValue: 1,\n        type: Number\n      },\n      5: {\n        name: \"raw_input\",\n        b: 9,\n        type: String\n      },\n      6: {\n        name: \"country_code_source\",\n        b: 14,\n        defaultValue: 0,\n        type: ua\n      },\n      7: {\n        name: \"preferred_domestic_carrier_code\",\n        b: 9,\n        type: String\n      }\n    }));\n    return a;\n  };\n\n  J.ctor = J;\n  J.ctor.f = J.prototype.f;\n  /*\n  Copyright (C) 2010 The Libphonenumber Authors\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  var K = {\n    1: \"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \"),\n    7: [\"RU\", \"KZ\"],\n    20: [\"EG\"],\n    27: [\"ZA\"],\n    30: [\"GR\"],\n    31: [\"NL\"],\n    32: [\"BE\"],\n    33: [\"FR\"],\n    34: [\"ES\"],\n    36: [\"HU\"],\n    39: [\"IT\", \"VA\"],\n    40: [\"RO\"],\n    41: [\"CH\"],\n    43: [\"AT\"],\n    44: [\"GB\", \"GG\", \"IM\", \"JE\"],\n    45: [\"DK\"],\n    46: [\"SE\"],\n    47: [\"NO\", \"SJ\"],\n    48: [\"PL\"],\n    49: [\"DE\"],\n    51: [\"PE\"],\n    52: [\"MX\"],\n    53: [\"CU\"],\n    54: [\"AR\"],\n    55: [\"BR\"],\n    56: [\"CL\"],\n    57: [\"CO\"],\n    58: [\"VE\"],\n    60: [\"MY\"],\n    61: [\"AU\", \"CC\", \"CX\"],\n    62: [\"ID\"],\n    63: [\"PH\"],\n    64: [\"NZ\"],\n    65: [\"SG\"],\n    66: [\"TH\"],\n    81: [\"JP\"],\n    82: [\"KR\"],\n    84: [\"VN\"],\n    86: [\"CN\"],\n    90: [\"TR\"],\n    91: [\"IN\"],\n    92: [\"PK\"],\n    93: [\"AF\"],\n    94: [\"LK\"],\n    95: [\"MM\"],\n    98: [\"IR\"],\n    211: [\"SS\"],\n    212: [\"MA\", \"EH\"],\n    213: [\"DZ\"],\n    216: [\"TN\"],\n    218: [\"LY\"],\n    220: [\"GM\"],\n    221: [\"SN\"],\n    222: [\"MR\"],\n    223: [\"ML\"],\n    224: [\"GN\"],\n    225: [\"CI\"],\n    226: [\"BF\"],\n    227: [\"NE\"],\n    228: [\"TG\"],\n    229: [\"BJ\"],\n    230: [\"MU\"],\n    231: [\"LR\"],\n    232: [\"SL\"],\n    233: [\"GH\"],\n    234: [\"NG\"],\n    235: [\"TD\"],\n    236: [\"CF\"],\n    237: [\"CM\"],\n    238: [\"CV\"],\n    239: [\"ST\"],\n    240: [\"GQ\"],\n    241: [\"GA\"],\n    242: [\"CG\"],\n    243: [\"CD\"],\n    244: [\"AO\"],\n    245: [\"GW\"],\n    246: [\"IO\"],\n    247: [\"AC\"],\n    248: [\"SC\"],\n    249: [\"SD\"],\n    250: [\"RW\"],\n    251: [\"ET\"],\n    252: [\"SO\"],\n    253: [\"DJ\"],\n    254: [\"KE\"],\n    255: [\"TZ\"],\n    256: [\"UG\"],\n    257: [\"BI\"],\n    258: [\"MZ\"],\n    260: [\"ZM\"],\n    261: [\"MG\"],\n    262: [\"RE\", \"YT\"],\n    263: [\"ZW\"],\n    264: [\"NA\"],\n    265: [\"MW\"],\n    266: [\"LS\"],\n    267: [\"BW\"],\n    268: [\"SZ\"],\n    269: [\"KM\"],\n    290: [\"SH\", \"TA\"],\n    291: [\"ER\"],\n    297: [\"AW\"],\n    298: [\"FO\"],\n    299: [\"GL\"],\n    350: [\"GI\"],\n    351: [\"PT\"],\n    352: [\"LU\"],\n    353: [\"IE\"],\n    354: [\"IS\"],\n    355: [\"AL\"],\n    356: [\"MT\"],\n    357: [\"CY\"],\n    358: [\"FI\", \"AX\"],\n    359: [\"BG\"],\n    370: [\"LT\"],\n    371: [\"LV\"],\n    372: [\"EE\"],\n    373: [\"MD\"],\n    374: [\"AM\"],\n    375: [\"BY\"],\n    376: [\"AD\"],\n    377: [\"MC\"],\n    378: [\"SM\"],\n    380: [\"UA\"],\n    381: [\"RS\"],\n    382: [\"ME\"],\n    383: [\"XK\"],\n    385: [\"HR\"],\n    386: [\"SI\"],\n    387: [\"BA\"],\n    389: [\"MK\"],\n    420: [\"CZ\"],\n    421: [\"SK\"],\n    423: [\"LI\"],\n    500: [\"FK\"],\n    501: [\"BZ\"],\n    502: [\"GT\"],\n    503: [\"SV\"],\n    504: [\"HN\"],\n    505: [\"NI\"],\n    506: [\"CR\"],\n    507: [\"PA\"],\n    508: [\"PM\"],\n    509: [\"HT\"],\n    590: [\"GP\", \"BL\", \"MF\"],\n    591: [\"BO\"],\n    592: [\"GY\"],\n    593: [\"EC\"],\n    594: [\"GF\"],\n    595: [\"PY\"],\n    596: [\"MQ\"],\n    597: [\"SR\"],\n    598: [\"UY\"],\n    599: [\"CW\", \"BQ\"],\n    670: [\"TL\"],\n    672: [\"NF\"],\n    673: [\"BN\"],\n    674: [\"NR\"],\n    675: [\"PG\"],\n    676: [\"TO\"],\n    677: [\"SB\"],\n    678: [\"VU\"],\n    679: [\"FJ\"],\n    680: [\"PW\"],\n    681: [\"WF\"],\n    682: [\"CK\"],\n    683: [\"NU\"],\n    685: [\"WS\"],\n    686: [\"KI\"],\n    687: [\"NC\"],\n    688: [\"TV\"],\n    689: [\"PF\"],\n    690: [\"TK\"],\n    691: [\"FM\"],\n    692: [\"MH\"],\n    800: [\"001\"],\n    808: [\"001\"],\n    850: [\"KP\"],\n    852: [\"HK\"],\n    853: [\"MO\"],\n    855: [\"KH\"],\n    856: [\"LA\"],\n    870: [\"001\"],\n    878: [\"001\"],\n    880: [\"BD\"],\n    881: [\"001\"],\n    882: [\"001\"],\n    883: [\"001\"],\n    886: [\"TW\"],\n    888: [\"001\"],\n    960: [\"MV\"],\n    961: [\"LB\"],\n    962: [\"JO\"],\n    963: [\"SY\"],\n    964: [\"IQ\"],\n    965: [\"KW\"],\n    966: [\"SA\"],\n    967: [\"YE\"],\n    968: [\"OM\"],\n    970: [\"PS\"],\n    971: [\"AE\"],\n    972: [\"IL\"],\n    973: [\"BH\"],\n    974: [\"QA\"],\n    975: [\"BT\"],\n    976: [\"MN\"],\n    977: [\"NP\"],\n    979: [\"001\"],\n    992: [\"TJ\"],\n    993: [\"TM\"],\n    994: [\"AZ\"],\n    995: [\"GE\"],\n    996: [\"KG\"],\n    998: [\"UZ\"]\n  },\n      wa = {\n    AC: [, [,, \"(?:[01589]\\\\d|[46])\\\\d{4}\",,,,,,, [5, 6]], [,, \"6[2-467]\\\\d{3}\",,,, \"62889\",,, [5]], [,, \"4\\\\d{4}\",,,, \"40123\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AC\", 247, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"[01589]\\\\d{5}\",,,, \"542011\",,, [6]],,, [,,,,,,,,, [-1]]],\n    AD: [, [,, \"(?:1|6\\\\d)\\\\d{7}|[136-9]\\\\d{5}\",,,,,,, [6, 8, 9]], [,, \"[78]\\\\d{5}\",,,, \"712345\",,, [6]], [,, \"690\\\\d{6}|[36]\\\\d{5}\",,,, \"312345\",,, [6, 9]], [,, \"180[02]\\\\d{4}\",,,, \"18001234\",,, [8]], [,, \"[19]\\\\d{5}\",,,, \"912345\",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AD\", 376, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[136-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]],, [,,,,,,,,, [-1]],,, [,, \"1800\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AE: [, [,, \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, \"[2-4679][2-8]\\\\d{6}\",,,, \"22345678\",,, [8], [7]], [,, \"5[024-68]\\\\d{7}\",,,, \"501234567\",,, [9]], [,, \"400\\\\d{6}|800\\\\d{2,9}\",,,, \"800123456\"], [,, \"900[02]\\\\d{5}\",,,, \"900234567\",,, [9]], [,, \"700[05]\\\\d{5}\",,,, \"700012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AE\", 971, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"600[25]\\\\d{5}\",,,, \"600212345\",,, [9]],,, [,,,,,,,,, [-1]]],\n    AF: [, [,, \"[2-7]\\\\d{8}\",,,,,,, [9], [7]], [,, \"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\",,,, \"234567890\",,,, [7]], [,, \"7(?:[014-9]\\\\d|2[89]|3[01])\\\\d{6}\",,,, \"701234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AF\", 93, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AG: [, [,, \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\",,,, \"2684601234\",,,, [7]], [,, \"268(?:464|7(?:1[3-9]|2\\\\d|3[246]|64|[78][0-689]))\\\\d{4}\",,,, \"2684641234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"26848[01]\\\\d{4}\",,,, \"2684801234\",,,, [7]], \"AG\", 1, \"011\", \"1\",,, \"1|([457]\\\\d{6})$\", \"268$1\",,,,, [,, \"26840[69]\\\\d{4}\",,,, \"2684061234\",,,, [7]],, \"268\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AI: [, [,, \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"2644(?:6[12]|9[78])\\\\d{4}\",,,, \"2644612345\",,,, [7]], [,, \"264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\",,,, \"2642351234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"AI\", 1, \"011\", \"1\",,, \"1|([2457]\\\\d{6})$\", \"264$1\",,,,, [,,,,,,,,, [-1]],, \"264\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AL: [, [,, \"(?:(?:[2-58]|6\\\\d)\\\\d\\\\d|700)\\\\d{5}|(?:8\\\\d{2,3}|900)\\\\d{3}\",,,,,,, [6, 7, 8, 9], [5]], [,, \"(?:[2358](?:[16-9]\\\\d[2-9]|[2-5][2-9]\\\\d)|4(?:[2-57-9][2-9]|6\\\\d)\\\\d)\\\\d{4}\",,,, \"22345678\",,, [8], [5, 6, 7]], [,, \"6(?:[689][2-9]|7[2-6])\\\\d{6}\",,,, \"662123456\",,, [9]], [,, \"800\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"900[1-9]\\\\d\\\\d\",,,, \"900123\",,, [6]], [,, \"808[1-9]\\\\d\\\\d\",,,, \"808123\",,, [6]], [,, \"700[2-9]\\\\d{4}\",,,, \"70021234\",,, [8]], [,,,,,,,,, [-1]], \"AL\", 355, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AM: [, [,, \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",,,,,,, [8], [5, 6]], [,, \"(?:(?:1[0-2]|47)\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\\\d{5}\",,,, \"10123456\",,,, [5, 6]], [,, \"(?:4[1349]|55|77|88|9[13-9])\\\\d{6}\",,,, \"77123456\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"90[016]\\\\d{5}\",,,, \"90012345\"], [,, \"80[1-4]\\\\d{5}\",,,, \"80112345\"], [,,,,,,,,, [-1]], [,, \"60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\\\d|90)\\\\d{4}\",,,, \"60271234\"], \"AM\", 374, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AO: [, [,, \"[29]\\\\d{8}\",,,,,,, [9]], [,, \"2\\\\d(?:[0134][25-9]|[25-9]\\\\d)\\\\d{5}\",,,, \"222123456\"], [,, \"9[1-49]\\\\d{7}\",,,, \"923123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AO\", 244, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AR: [, [,, \"(?:11|(?:[2368]|9\\\\d)\\\\d)\\\\d{8}\",,,,,,, [10, 11], [6, 7, 8]], [,, \"(?:(?:11[2-7]|670)\\\\d\\\\d|2(?:2(?:0(?:2[4-6]|[45]\\\\d)|(?:1[2-6]|3[3-6])\\\\d|2(?:14|[3467][4-6]|[59][45])|4(?:[156][4-6]|[23]4|4[45])|5(?:2[45]|[45][4-6]|7[3-6])|6(?:[145]4|2[2-6]|[6-8][4-6])|7[1-4]4|8(?:1[3-6]|[356]4|4[2-7])|9(?:1[4-6]|[267]4))|3(?:0(?:2[2-6]|4\\\\d)|1(?:[47][4-6]|64)|2(?:[03][2-6]|4[3-6]|5[4-6]|6[45])|3[13-8]4|4(?:[24][45]|34|5[4-6]|6[3-6])|5(?:[25][4-6]|[346-8]4)|(?:64|7[45])\\\\d|9(?:2[3-6]|[3-5]4|6[4-6]))|4(?:7(?:3[45]|[48][4-6]|54|7[2-6])|94\\\\d)|6(?:(?:04|1[2-7]|[36][45])\\\\d|2(?:2[2-6]|[46]4|5[4-6])|4(?:[45]\\\\d|6[0-46-9]|[78]4)|5(?:[1568]4|7[2-7]))|80[45]\\\\d|9(?:0(?:1[3-6]|2[45]|34)|(?:1[4-6]|9[3-6])\\\\d|2(?:0[2-7]|[1457-9]4|[26][45]|3[3-6])|3(?:[1356]4|2[4-6]|4[45])|4(?:[08]4|2[2-6]|4\\\\d|5[02-69]|6[45])|5(?:[23]4|4[2-8])|6(?:[23]4|4[3-6]|6[2-7])|7(?:2[45]|[4-6]\\\\d)|8(?:24|3[2-6]|[45]\\\\d)))|3(?:3(?:2(?:7[45]|9[3-6])|64\\\\d|8[2578][4-6])|4(?:0[0-24-9][4-6]|(?:1[2-7]|2[4-6])\\\\d|3(?:4\\\\d|5[0-7]|6[1-69]|[78][4-6])|4(?:2[3-6]|[457][4-6]|6[2-6])|5(?:4[0-4679]|[56][024-6]|8[4-6])|6(?:[03-9][4-6]|2[2-6])|7(?:1[3-6]|2[4-6]|6[2-6])|8(?:[27][2-7]|3[4-6]|4\\\\d|9[2-6])|9(?:[136-8][4-6]|2[2-7]))|5(?:1[2-8]\\\\d|2(?:[124][4-6]|5[3-6])|3(?:[23][4-6]|[4-6]\\\\d|7[3-6])|4(?:1[2-6]|[2689][4-6]|[347][3-6])|6(?:[23][4-6]|4[2-6])|7(?:1[3-6]|[2-6][4-6])|8(?:[23][4-6]|[46]\\\\d|5[013-7]))|6(?:2[45]|44)\\\\d|7(?:[069][45]\\\\d|1(?:[15][46]|6[4-6]|8[3-6])|(?:2[15]|3[145]|4[13])[4-6]|5(?:[17][3-6]|[468][4-6]|5[2-7])|7(?:[2-5][4-6]|7[2-8])|8(?:1[46]|[26][4-6]))|8(?:(?:0[45]|1[2-6])\\\\d|2(?:1[46]|[5-7][4-6])|3(?:[278][4-6]|4\\\\d|5[124-6])|4(?:[16][46]|[3-5][4-6])|5(?:[34]\\\\d|5[0-46-9]|6[0-246-9]|[78][4-6])|6(?:[1-378][4-6]|5[2-8]|9[46])|7(?:[24-6]\\\\d|3[2-6]|7[4-6]|8[2-7])|8(?:[3-5]\\\\d|6[0-68]|7[4-6]|8[3-6])|9(?:[12][46]|4[4-6]))))\\\\d{5}\",,,, \"1123456789\",,, [10], [6, 7, 8]], [,, \"(?:675\\\\d\\\\d|9(?:11[2-7]\\\\d\\\\d|2(?:2(?:0(?:2[4-6]|[45]\\\\d)|(?:1[2-6]|3[3-6])\\\\d|2(?:14|[3467][4-6]|[59][45])|4(?:[156][4-6]|[23]4|4[45])|5(?:2[45]|[45][4-6]|7[3-6])|6(?:[145]4|2[2-6]|[6-8][4-6])|7[1-4]4|8(?:1[3-6]|[356]4|4[2-7])|9(?:1[4-6]|[267]4))|3(?:0(?:2[2-6]|4\\\\d)|1(?:[47][4-6]|64)|2(?:[03][2-6]|4[3-6]|5[4-6]|6[45])|3[13-8]4|4(?:[24][45]|34|5[4-6]|6[3-6])|5(?:[25][4-6]|[346-8]4)|(?:64|7[45])\\\\d|9(?:2[3-6]|[3-5]4|6[4-6]))|4(?:7(?:3[45]|[48][4-6]|54|7[2-6])|94\\\\d)|6(?:(?:04|1[2-7]|[36][45])\\\\d|2(?:2[2-6]|[46]4|5[4-6])|4(?:[45]\\\\d|6[0-46-9]|[78]4)|5(?:[1568]4|7[2-7]))|80[45]\\\\d|9(?:0(?:1[3-6]|2[45]|34)|(?:1[4-6]|9[3-6])\\\\d|2(?:0[2-7]|[1457-9]4|[26][45]|3[3-6])|3(?:[1356]4|2[4-6]|4[45])|4(?:[08]4|2[2-6]|4\\\\d|5[02-69]|6[45])|5(?:[23]4|4[2-8])|6(?:[23]4|4[3-6]|6[2-7])|7(?:2[45]|[4-6]\\\\d)|8(?:24|3[2-6]|[45]\\\\d)))|3(?:3(?:2(?:7[45]|9[3-6])|64\\\\d|8[2578][4-6])|4(?:0[0-24-9][4-6]|(?:1[2-7]|2[4-6])\\\\d|3(?:4\\\\d|5[0-7]|6[1-69]|[78][4-6])|4(?:2[3-6]|[457][4-6]|6[2-6])|5(?:4[0-4679]|[56][024-6]|8[4-6])|6(?:[03-9][4-6]|2[2-6])|7(?:1[3-6]|2[4-6]|6[2-6])|8(?:[27][2-7]|3[4-6]|4\\\\d|9[2-6])|9(?:[136-8][4-6]|2[2-7]))|5(?:1[2-8]\\\\d|2(?:[124][4-6]|5[3-6])|3(?:[23][4-6]|[4-6]\\\\d|7[3-6])|4(?:1[2-6]|[2689][4-6]|[347][3-6])|6(?:[23][4-6]|4[2-6])|7(?:1[3-6]|[2-6][4-6])|8(?:[23][4-6]|[46]\\\\d|5[013-7]))|6(?:2[45]|44)\\\\d|7(?:[069][45]\\\\d|1(?:[15][46]|6[4-6]|8[3-6])|(?:2[15]|3[145]|4[13])[4-6]|5(?:[17][3-6]|[468][4-6]|5[2-7])|7(?:[2-5][4-6]|7[2-8])|8(?:1[46]|[26][4-6]))|8(?:(?:0[45]|1[2-6])\\\\d|2(?:1[46]|[5-7][4-6])|3(?:[278][4-6]|4\\\\d|5[124-6])|4(?:[16][46]|[3-5][4-6])|5(?:[34]\\\\d|5[0-46-9]|6[0-246-9]|[78][4-6])|6(?:[1-378][4-6]|5[2-8]|9[46])|7(?:[24-6]\\\\d|3[2-6]|7[4-6]|8[2-7])|8(?:[3-5]\\\\d|6[0-68]|7[4-6]|8[3-6])|9(?:[12][46]|4[4-6])))))\\\\d{5}\",,,, \"91123456789\",,,, [6, 7, 8]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"60[04579]\\\\d{7}\",,,, \"6001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AR\", 54, \"00\", \"0\",,, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\",,, [[, \"(\\\\d{3})\", \"$1\", [\"[09]|1(?:[02]|1[02-5])\"]], [, \"(\\\\d{2})(\\\\d{4})\", \"$1-$2\", [\"[2-7]|8[0-7]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-7]|8[013-8]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"2[0-8]|[3-7]\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:[56][4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|[45][4-6]))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4[4-6]|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78])))\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|6[4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78])))\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:[56][4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|[45][4-6]))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4[4-6]|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78]))))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|6[4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78]))))\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\"]], [[, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:[56][4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|[45][4-6]))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4[4-6]|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78])))\", \"2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|6[4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78])))\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:[56][4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|[45][4-6]))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4[4-6]|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78]))))\", \"9(?:2(?:2(?:02|[24-9])|3(?:02|[1-59])|47|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5(?:[24-6]|3[2-5]))|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|6[4-6]|[78])|5(?:4[46]|[56][4-6]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3(?:[278]|5[4-6])|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7(?:[378]|6[4-6])|8(?:5[4-6]|6[3-6]|[78]))))\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"91\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9\"]]], [,,,,,,,,, [-1]],,, [,, \"810\\\\d{7}\",,,,,,, [10]], [,, \"810\\\\d{7}\",,,, \"8101234567\",,, [10]],,, [,,,,,,,,, [-1]]],\n    AS: [, [,, \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\",,,, \"6846221234\",,,, [7]], [,, \"684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\\\d{4}\",,,, \"6847331234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"AS\", 1, \"011\", \"1\",,, \"1|([267]\\\\d{6})$\", \"684$1\",,,,, [,,,,,,,,, [-1]],, \"684\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AT: [, [,, \"[1-35-9]\\\\d{8,12}|4(?:[0-24-9]\\\\d{4,11}|3(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7}))|[1-35-8]\\\\d{7}|[1-35-7]\\\\d{6}|[135-7]\\\\d{5}|[15]\\\\d{4}|1\\\\d{3}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [3]], [,, \"(?:1(?:11|[2-9]\\\\d{2,10})|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{3,9}|4(?:(?:2[1-8]|35|7[1368]|8[2457])\\\\d{3,9}|63\\\\d{2,9})|5(?:12\\\\d{2,9}|(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])\\\\d{3,9})|6(?:(?:13|2[1-47]|4[135-8]|5[468])\\\\d{3,9}|62\\\\d{2,9}))\\\\d|(?:316|732)\\\\d{3}\",,,, \"1234567890\",,,, [3]], [,, \"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\",,,, \"664123456\",,, [7, 8, 9, 10, 11, 12, 13]], [,, \"800\\\\d{6,10}\",,,, \"800123456\",,, [9, 10, 11, 12, 13]], [,, \"9(?:0[01]|3[019])\\\\d{6,10}\",,,, \"900123456\",,, [9, 10, 11, 12, 13]], [,, \"8(?:10|2[018])\\\\d{6,10}|828\\\\d{5}\",,,, \"810123456\",,, [8, 9, 10, 11, 12, 13]], [,,,,,,,,, [-1]], [,, \"5(?:0[1-9]|17|[79]\\\\d)\\\\d{2,10}|7[28]0\\\\d{6,10}\",,,, \"780123456\",,, [5, 6, 7, 8, 9, 10, 11, 12, 13]], \"AT\", 43, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AU: [, [,, \"1\\\\d{4,9}|(?:[2-478]\\\\d\\\\d|550)\\\\d{6}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"(?:[237]\\\\d{5}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|(?:[6-8]\\\\d{3}|9(?:[02-9]\\\\d\\\\d|1(?:[0-57-9]\\\\d|6[0135-9])))\\\\d))\\\\d{3}\",,,, \"212345678\",,, [9], [8]], [,, \"4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, \"(?:14(?:5\\\\d|71)|550\\\\d)\\\\d{5}\",,,, \"550123456\",,, [9]], \"AU\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"0\",, \"0011\",, [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"13\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"180\", \"1802\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"19\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|[45]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|[45]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], [,, \"16\\\\d{3,7}\",,,, \"1612345\",,, [5, 6, 7, 8, 9]], 1,, [,, \"1[38]00\\\\d{6}|1(?:345[0-4]|802)\\\\d{3}|13\\\\d{4}\",,,,,,, [6, 7, 8, 10]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AW: [, [,, \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",,,,,,, [7]], [,, \"5(?:2\\\\d|8[1-9])\\\\d{4}\",,,, \"5212345\"], [,, \"(?:290|5[69]\\\\d|6(?:[03]0|22|4[0-2]|[69]\\\\d)|7(?:[34]\\\\d|7[07])|9(?:6[45]|9[4-8]))\\\\d{4}\",,,, \"5601234\"], [,, \"800\\\\d{4}\",,,, \"8001234\"], [,, \"900\\\\d{4}\",,,, \"9001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:28\\\\d|501)\\\\d{4}\",,,, \"5011234\"], \"AW\", 297, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    AX: [, [,, \"(?:(?:[1247]\\\\d|3[0-46-9]|[56]0)\\\\d\\\\d|800)\\\\d{4,6}|(?:[1-47]\\\\d|50)\\\\d{4,5}|2\\\\d{4}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"18[1-8]\\\\d{3,6}\",,,, \"181234567\",,, [6, 7, 8, 9]], [,, \"(?:4[0-8]|50)\\\\d{4,8}\",,,, \"412345678\",,, [6, 7, 8, 9, 10]], [,, \"800\\\\d{4,6}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"[67]00\\\\d{5,6}\",,,, \"600123456\",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AX\", 358, \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"0\",,, \"0\",, \"00\",,,, [,,,,,,,,, [-1]],, \"18\", [,,,,,,,,, [-1]], [,, \"(?:10|[23][09])\\\\d{4,8}|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:(?:1|3\\\\d)\\\\d{7}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d\",,,, \"10112345\"],,, [,,,,,,,,, [-1]]],\n    AZ: [, [,, \"(?:(?:(?:[12457]\\\\d|60|88)\\\\d|365)\\\\d{3}|900200)\\\\d{3}\",,,,,,, [9], [7]], [,, \"(?:(?:1[28]\\\\d|2(?:[045]2|1[24]|2[2-4]|33|6[23]))\\\\d\\\\d|365(?:[0-46-9]\\\\d|5[0-35-9]))\\\\d{4}\",,,, \"123123456\",,,, [7]], [,, \"(?:36554|(?:4[04]|5[015]|60|7[07])\\\\d{3})\\\\d{4}\",,,, \"401234567\"], [,, \"88\\\\d{7}\",,,, \"881234567\"], [,, \"900200\\\\d{3}\",,,, \"900200123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"AZ\", 994, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[12]|365\", \"[12]|365\", \"[12]|365(?:[0-46-9]|5[0-35-9])\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[3-8]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[12]|365\", \"[12]|365\", \"[12]|365(?:[0-46-9]|5[0-35-9])\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[3-8]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BA: [, [,, \"(?:[3589]\\\\d|49|6\\\\d\\\\d?|70)\\\\d{6}\",,,,,,, [8, 9], [6]], [,, \"(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\\\d{5}\",,,, \"30212345\",,, [8], [6]], [,, \"6(?:0(?:3\\\\d|40)|[1-356]\\\\d|44[0-6]|71[137])\\\\d{5}\",,,, \"61123456\"], [,, \"8[08]\\\\d{6}\",,,, \"80123456\",,, [8]], [,, \"9[0246]\\\\d{6}\",,,, \"90123456\",,, [8]], [,, \"8[12]\\\\d{6}\",,,, \"82123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BA\", 387, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-356]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-356]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"70(?:3[0146]|[56]0)\\\\d{4}\",,,, \"70341234\",,, [8]],,, [,,,,,,,,, [-1]]],\n    BB: [, [,, \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7[35]7|9(?:1[89]|63))\\\\d{4}\",,,, \"2464123456\",,,, [7]], [,, \"246(?:2(?:[356]\\\\d|4[0-57-9]|8[0-79])|45\\\\d|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d{4}\",,,, \"2462501234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"(?:246976|900[2-9]\\\\d\\\\d)\\\\d{4}\",,,, \"9002123456\",,,, [7]], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"24631\\\\d{5}\",,,, \"2463101234\",,,, [7]], \"BB\", 1, \"011\", \"1\",,, \"1|([2-9]\\\\d{6})$\", \"246$1\",,,,, [,,,,,,,,, [-1]],, \"246\", [,,,,,,,,, [-1]], [,, \"246(?:292|367|4(?:1[7-9]|3[01]|44|67)|7(?:36|53))\\\\d{4}\",,,, \"2464301234\",,,, [7]],,, [,,,,,,,,, [-1]]],\n    BD: [, [,, \"[13469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-7]\\\\d{8}|[2-9]\\\\d{7}|[3-689]\\\\d{6}|[57-9]\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10]], [,, \"(?:(?:2(?:[45]\\\\d{3}|7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|[13][1-6]|2[0157-9]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[01367]|7[15]|8[0146-9]))|7(?:02|21\\\\d|[3-589]1|6[12]|72[24])\\\\d|8(?:(?:[01]|217|3[12])\\\\d|4[12]|[5-7](?:1\\\\d|2)))\\\\d|3(?:(?:0(?:2[348]\\\\d|3[2-6])|(?:1(?:2[5-7]|[5-7])|3(?:1|24)|[5-7]1)\\\\d)\\\\d|2(?:1\\\\d\\\\d|2(?:[35]\\\\d\\\\d|4))|4(?:1\\\\d\\\\d|2(?:[25]\\\\d\\\\d|[47]))|8(?:1\\\\d\\\\d|2(?:(?:2\\\\d|4)\\\\d|3)))|4(?:0(?:2(?:[09]\\\\d|7)|33\\\\d\\\\d)|(?:1\\\\d|4(?:2[2-46]|5[25])|8(?:23|54))\\\\d\\\\d|2(?:1\\\\d\\\\d|2(?:[25]|[67]\\\\d\\\\d))|3(?:1\\\\d\\\\d(?:\\\\d{2})?|(?:2[236-9]|32)\\\\d\\\\d)|525|6(?:(?:[18]|2[3-6]|62)\\\\d\\\\d|5(?:[38]|[5-7]\\\\d\\\\d))|9(?:(?:[18]|2[2-5])\\\\d\\\\d|53\\\\d\\\\d?))|5(?:(?:02[03489]|1|22[2457]|32[35-79]|42[46]|[58]26|724)\\\\d\\\\d|6(?:(?:[18]|53)\\\\d\\\\d|2))|6(?:(?:(?:[04]2[34]|32[3478]|52[47]|[78]2[2-5]|92[2-6])\\\\d|6(?:[18]\\\\d|6(?:2(?:2|[34]\\\\d)|5[245]\\\\d)))\\\\d|2(?:(?:2[2-5]|8)\\\\d\\\\d|5(?:[3-5]\\\\d\\\\d|7)))|9(?:[24]1\\\\d\\\\d|[35]1))\\\\d{3}|(?:3(?:0(?:2[02-9]\\\\d|3[56])|(?:22[1-5]|32[2-6]|422)\\\\d|529)|(?:4(?:22[2-8]|32[02-9]|(?:[48][18]|71)\\\\d|5(?:1\\\\d|23)|6(?:2[467]|5[3-57]))|5(?:[2-47-9]1\\\\d|5(?:1\\\\d|26))|6(?:0(?:1\\\\d|24)|[3-589]1\\\\d|665[35])|81|9(?:[024]2|1\\\\d|81))\\\\d|732)\\\\d{3}|(?:4[46]23|5(?:222|32[37]))\\\\d{3}\",,,, \"27111234\"], [,, \"(?:1[13-9]\\\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\\\d{7}\",,,, \"1812345678\",,, [10]], [,, \"80[03]\\\\d{7}\",,,, \"8001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\\\d{6}\",,,, \"9604123456\",,, [10]], \"BD\", 880, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-7]|[459]1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[2-5]1|[67]|8[013-9])|4(?:[235]1|4[01346-9]|6[168]|7|[89][18])|5(?:[2-578]1|6[128]|9)|6(?:[0389]1|28|4[14]|5|6[01346-9])|7(?:[2-589]|61)|8(?:0[014-9]|[12]|[3-7]1)|9(?:[24]1|[358])\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BE: [, [,, \"4\\\\d{8}|[1-9]\\\\d{7}\",,,,,,, [8, 9]], [,, \"(?:(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|9[2-4])\\\\d|8(?:0[2-8]|[1-79]\\\\d))\\\\d{5}\",,,, \"12345678\",,, [8]], [,, \"4(?:5[56]|6[0135-8]|[79]\\\\d|8[3-9])\\\\d{6}\",,,, \"470123456\",,, [9]], [,, \"800[1-9]\\\\d{4}\",,,, \"80012345\",,, [8]], [,, \"(?:70(?:2[0-57]|3[0457]|44|69|7[0579])|90(?:0[0-35-8]|1[36]|2[0-3568]|3[0135689]|4[2-68]|5[1-68]|6[0-378]|7[23568]|9[34679]))\\\\d{4}\",,,, \"90012345\",,, [8]], [,, \"7879\\\\d{4}\",,,, \"78791234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BE\", 32, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"78(?:0[57]|1[0458]|2[25]|3[5-8]|48|[56]0|7[078])\\\\d{4}\",,,, \"78102345\",,, [8]],,, [,,,,,,,,, [-1]]],\n    BF: [, [,, \"[25-7]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:0(?:49|5[23]|6[56]|9[016-9])|4(?:4[569]|5[4-6]|6[56]|7[0179])|5(?:[34]\\\\d|50|6[5-7]))\\\\d{4}\",,,, \"20491234\"], [,, \"(?:5[124-8]|[67]\\\\d)\\\\d{6}\",,,, \"70123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BF\", 226, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[25-7]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BG: [, [,, \"[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",,,,,,, [6, 7, 8, 9], [4, 5]], [,, \"(?:(?:[236]\\\\d|5[1-9]|8[1-6]|9[1-7])\\\\d|4(?:[124-7]\\\\d|3[1-6])|7(?:0[1-9]|[1-9]\\\\d))\\\\d{4,5}|2\\\\d{5}\",,,, \"2123456\",,, [6, 7, 8], [4, 5]], [,, \"(?:4(?:3[07-9]|8\\\\d)|(?:8[7-9]\\\\d|9(?:8\\\\d|9[69]))\\\\d)\\\\d{5}\",,,, \"48123456\",,, [8, 9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"90\\\\d{6}\",,,, \"90123456\",,, [8]], [,,,,,,,,, [-1]], [,, \"700\\\\d{5}\",,,, \"70012345\",,, [8]], [,,,,,,,,, [-1]], \"BG\", 359, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BH: [, [,, \"[136-9]\\\\d{7}\",,,,,,, [8]], [,, \"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\\\d\\\\d))\\\\d{4}\",,,, \"17001234\"], [,, \"(?:3(?:[1-4679]\\\\d|5[013-69]|8[0-47-9])\\\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\\\d|7[0-6])))\\\\d{4}\",,,, \"36001234\"], [,, \"80\\\\d{6}\",,,, \"80123456\"], [,, \"(?:87|9[014578])\\\\d{6}\",,,, \"90123456\"], [,, \"84\\\\d{6}\",,,, \"84123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BH\", 973, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[047]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BI: [, [,, \"(?:[267]\\\\d|31)\\\\d{6}\",,,,,,, [8]], [,, \"22\\\\d{6}\",,,, \"22201234\"], [,, \"(?:29|31|6[189]|7[125-9])\\\\d{6}\",,,, \"79561234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BI\", 257, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BJ: [, [,, \"[2689]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:02|1[037]|2[45]|3[68])\\\\d{5}\",,,, \"20211234\"], [,, \"(?:6\\\\d|9[03-9])\\\\d{6}\",,,, \"90011234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"857[58]\\\\d{4}\",,,, \"85751234\"], \"BJ\", 229, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2689]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"81\\\\d{6}\",,,, \"81123456\"],,, [,,,,,,,,, [-1]]],\n    BL: [, [,, \"(?:590|69\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"590(?:2[7-9]|5[12]|87)\\\\d{4}\",,,, \"590271234\"], [,, \"69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}\",,,, \"690001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BL\", 590, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BM: [, [,, \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"441(?:2(?:02|23|[3479]\\\\d|61)|[46]\\\\d\\\\d|5(?:4\\\\d|60|89)|824)\\\\d{4}\",,,, \"4412345678\",,,, [7]], [,, \"441(?:[37]\\\\d|5[0-39])\\\\d{5}\",,,, \"4413701234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"BM\", 1, \"011\", \"1\",,, \"1|([2-8]\\\\d{6})$\", \"441$1\",,,,, [,,,,,,,,, [-1]],, \"441\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BN: [, [,, \"[2-578]\\\\d{6}\",,,,,,, [7]], [,, \"(?:2(?:[013-9]\\\\d|2[0-7])|[3-5]\\\\d\\\\d)\\\\d{4}\",,,, \"2345678\"], [,, \"(?:22[89]|[78]\\\\d\\\\d)\\\\d{4}\",,,, \"7123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BN\", 673, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BO: [, [,, \"(?:[2-467]\\\\d{3}|80017)\\\\d{4}\",,,,,,, [8, 9], [7]], [,, \"(?:2(?:2\\\\d\\\\d|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d\\\\d|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\\\d\\\\d|6(?:11|[24689]\\\\d|72)))\\\\d{4}\",,,, \"22123456\",,, [8], [7]], [,, \"[67]\\\\d{7}\",,,, \"71234567\",,, [8]], [,, \"80017\\\\d{4}\",,,, \"800171234\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BO\", 591, \"00(?:1\\\\d)?\", \"0\",,, \"0(1\\\\d)?\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[23]|4[46]\"],, \"0$CC $1\"], [, \"(\\\\d{8})\", \"$1\", [\"[67]\"],, \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"],, \"0$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BQ: [, [,, \"(?:[34]1|7\\\\d)\\\\d{5}\",,,,,,, [7]], [,, \"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\\\d)\\\\d{3}\",,,, \"7151234\"], [,, \"(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\",,,, \"3181234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BQ\", 599, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"[347]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BR: [, [,, \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-24679]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",,,,,,, [8, 9, 10, 11]], [,, \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\\\d{7}\",,,, \"1123456789\",,, [10], [8]], [,, \"(?:[14689][1-9]9\\\\d|2[12478](?:7|9\\\\d)|(?:3[1-578]|5[13-5]|7[13-579])(?:[6-8]|9\\\\d?))\\\\d{7}|(?:[189][1-9]7|[46][1-9][6-9])\\\\d{7}\",,,, \"11961234567\",,, [10, 11], [8, 9]], [,, \"800\\\\d{6,7}\",,,, \"800123456\",,, [9, 10]], [,, \"(?:300|[59]00\\\\d?)\\\\d{6}\",,,, \"300123456\",,, [9, 10]], [,, \"(?:300\\\\d(?:\\\\d{2})?|4(?:0(?:0\\\\d|20)|370))\\\\d{4}\",,,, \"40041234\",,, [8, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BR\", 55, \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"0\",,, \"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\",,, [[, \"(\\\\d{3,5})\", \"$1\", [\"1(?:1[25-8]|2[357-9]|3[02-68]|4[12568]|5|6[0-8]|8[015]|9[0-47-9])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"300|4(?:0(?:0|20)|370)\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\", \"[235-9]|4(?:[0-24-9]|3(?:[0-689]|7[1-9]))\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"9\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[189][1-9]|2[12478])[2-57]|[3-7]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"1[1-9]|[2-9]\"], \"($1)\", \"0 $CC ($1)\"]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"300|4(?:0(?:0|20)|370)\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[189][1-9]|2[12478])[2-57]|[3-7]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"1[1-9]|[2-9]\"], \"($1)\", \"0 $CC ($1)\"]], [,,,,,,,,, [-1]],,, [,, \"(?:300\\\\d|40(?:0\\\\d|20))\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BS: [, [,, \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\",,,, \"2423456789\",,,, [7]], [,, \"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|[89]9))\\\\d{4}\",,,, \"2423591234\",,,, [7]], [,, \"(?:242300|8(?:00|33|44|55|66|77|88)[2-9]\\\\d\\\\d)\\\\d{4}\",,,, \"8002123456\",,,, [7]], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"BS\", 1, \"011\", \"1\",,, \"1|([3-8]\\\\d{6})$\", \"242$1\",,,,, [,,,,,,,,, [-1]],, \"242\", [,,,,,,,,, [-1]], [,, \"242225[0-46-9]\\\\d{3}\",,,, \"2422250123\"],,, [,,,,,,,,, [-1]]],\n    BT: [, [,, \"[17]\\\\d{7}|[2-8]\\\\d{6}\",,,,,,, [7, 8], [6]], [,, \"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\",,,, \"2345678\",,, [7], [6]], [,, \"(?:1[67]|77)\\\\d{6}\",,,, \"17123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BT\", 975, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[2-7]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BW: [, [,, \"(?:(?:[2-6]|7\\\\d)\\\\d|90)\\\\d{5}\",,,,,,, [7, 8]], [,, \"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\\\d{4}\",,,, \"2401234\",,, [7]], [,, \"7(?:[1-6]\\\\d{3}|7(?:[014-8]\\\\d\\\\d|200))\\\\d{3}\",,,, \"71123456\",,, [8]], [,,,,,,,,, [-1]], [,, \"90\\\\d{5}\",,,, \"9012345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"79(?:1(?:[01]\\\\d|20)|2[0-2]\\\\d)\\\\d{3}\",,,, \"79101234\",,, [8]], \"BW\", 267, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-6]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BY: [, [,, \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 11], [5]], [,, \"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d\\\\d)|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\",,,, \"152450911\",,, [9], [5, 6, 7]], [,, \"(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\\\d)\\\\d{6}\",,,, \"294911911\",,, [9]], [,, \"8(?:0[013]|20\\\\d)\\\\d{7}|800\\\\d{3,6}\",,,, \"8011234567\"], [,, \"(?:810|902)\\\\d{7}\",,,, \"9021234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"249\\\\d{6}\",,,, \"249123456\",,, [9]], \"BY\", 375, \"810\", \"8\",,, \"0|80?\",, \"8~10\",, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]],, [,,,,,,,,, [-1]],,, [,, \"(?:8(?:0[013]|10|20\\\\d)|902)\\\\d{7}|800\\\\d{3,6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    BZ: [, [,, \"(?:0800\\\\d|[2-8])\\\\d{6}\",,,,,,, [7, 11]], [,, \"(?:2(?:[02]\\\\d|36)|[3-58][02]\\\\d|7(?:[02]\\\\d|32))\\\\d{4}\",,,, \"2221234\",,, [7]], [,, \"6[0-35-7]\\\\d{5}\",,,, \"6221234\",,, [7]], [,, \"0800\\\\d{7}\",,,, \"08001234123\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"BZ\", 501, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CA: [, [,, \"(?:[2-8]\\\\d|90)\\\\d{8}\",,,,,,, [10], [7]], [,, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",,,, \"5062345678\",,,, [7]], [,, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",,,, \"5062345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"600[2-9]\\\\d{6}\",,,, \"6002012345\"], \"CA\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CC: [, [,, \"1\\\\d{5,9}|(?:[48]\\\\d\\\\d|550)\\\\d{6}\",,,,,,, [6, 7, 8, 9, 10]], [,, \"8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",,,, \"891621234\",,, [9], [8]], [,, \"4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, \"(?:14(?:5\\\\d|71)|550\\\\d)\\\\d{5}\",,,, \"550123456\",,, [9]], \"CC\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"0|([59]\\\\d{7})$\", \"8$1\", \"0011\",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CD: [, [,, \"[189]\\\\d{8}|[1-68]\\\\d{6}\",,,,,,, [7, 9]], [,, \"12\\\\d{7}|[1-6]\\\\d{6}\",,,, \"1234567\"], [,, \"(?:8(?:[0-2459]\\\\d\\\\d|8)|9[017-9]\\\\d\\\\d)\\\\d{5}\",,,, \"991234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CD\", 243, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CF: [, [,, \"(?:[27]\\\\d{3}|8776)\\\\d{4}\",,,,,,, [8]], [,, \"2[12]\\\\d{6}\",,,, \"21612345\"], [,, \"7[0257]\\\\d{6}\",,,, \"70012345\"], [,,,,,,,,, [-1]], [,, \"8776\\\\d{4}\",,,, \"87761234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CF\", 236, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CG: [, [,, \"(?:(?:0\\\\d|80)\\\\d|222)\\\\d{6}\",,,,,,, [9]], [,, \"222[1-589]\\\\d{5}\",,,, \"222123456\"], [,, \"0[14-6]\\\\d{7}\",,,, \"061234567\"], [,,,,,,,,, [-1]], [,, \"80(?:0\\\\d\\\\d|11[0-4])\\\\d{4}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CG\", 242, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"801\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CH: [, [,, \"8\\\\d{11}|[2-9]\\\\d{8}\",,,,,,, [9, 12]], [,, \"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\",,,, \"212345678\",,, [9]], [,, \"7[35-9]\\\\d{7}\",,,, \"781234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"90[016]\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"84[0248]\\\\d{6}\",,,, \"840123456\",,, [9]], [,, \"878\\\\d{6}\",,,, \"878123456\",,, [9]], [,,,,,,,,, [-1]], \"CH\", 41, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]],, [,, \"74[0248]\\\\d{6}\",,,, \"740123456\",,, [9]],,, [,,,,,,,,, [-1]], [,, \"5[18]\\\\d{7}\",,,, \"581234567\",,, [9]],,, [,, \"860\\\\d{9}\",,,, \"860123456789\",,, [12]]],\n    CI: [, [,, \"[02-8]\\\\d{7}\",,,,,,, [8]], [,, \"(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\\\d{5}\",,,, \"21234567\"], [,, \"(?:[07][1-9]|[45]\\\\d|6[014-9]|8[4-9])\\\\d{6}\",,,, \"01234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CI\", 225, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[02-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CK: [, [,, \"[2-8]\\\\d{4}\",,,,,,, [5]], [,, \"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\",,,, \"21234\"], [,, \"[5-8]\\\\d{4}\",,,, \"71234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CK\", 682, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CL: [, [,, \"(?:1230|[2-57-9]\\\\d|6\\\\d{1,3})\\\\d{7}\",,,,,,, [9, 10, 11]], [,, \"(?:2(?:1962|(?:2\\\\d\\\\d|32[0-46-8])\\\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\\\d|8(?:0[1-9]|[1-9]\\\\d))\\\\d\\\\d)\\\\d{4}\",,,, \"221234567\",,, [9]], [,, \"(?:2(?:1962|(?:2\\\\d\\\\d|32[0-46-8])\\\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\\\d|8(?:0[1-9]|[1-9]\\\\d))\\\\d\\\\d)\\\\d{4}\",,,, \"221234567\",,, [9]], [,, \"(?:1230\\\\d|800)\\\\d{6}\",,,, \"800123456\",,, [9, 11]], [,,,,,,,,, [-1]], [,, \"600\\\\d{7,8}\",,,, \"6001234567\",,, [10, 11]], [,,,,,,,,, [-1]], [,, \"44\\\\d{7}\",,,, \"441234567\",,, [9]], \"CL\", 56, \"(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0\",,,,,,, 1, [[, \"(\\\\d{4})\", \"$1\", [\"1(?:[03-589]|21)|[29]0|78\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"21\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]], [[, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"21\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]], [,,,,,,,,, [-1]],,, [,, \"600\\\\d{7,8}\",,,,,,, [10, 11]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CM: [, [,, \"(?:[26]\\\\d\\\\d|88)\\\\d{6}\",,,,,,, [8, 9]], [,, \"2(?:22|33|4[23])\\\\d{6}\",,,, \"222123456\",,, [9]], [,, \"6[5-9]\\\\d{7}\",,,, \"671234567\",,, [9]], [,, \"88\\\\d{6}\",,,, \"88012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CM\", 237, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CN: [, [,, \"(?:(?:(?:1[03-68]|2\\\\d)\\\\d\\\\d|[3-79])\\\\d|8[0-57-9])\\\\d{7}|[1-579]\\\\d{10}|8[0-57-9]\\\\d{8,9}|[1-79]\\\\d{9}|[1-9]\\\\d{7}|[12]\\\\d{6}\",,,,,,, [7, 8, 9, 10, 11, 12], [5, 6]], [,, \"21(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8})|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{7})\",,,, \"1012345678\",,,, [5, 6]], [,, \"1(?:[38]\\\\d{3}|4[57]\\\\d{2}|5[0-35-9]\\\\d{2}|6[25-7]\\\\d{2}|7(?:[0-35-8]\\\\d{2}|40[0-5])|9[189]\\\\d{2})\\\\d{6}\",,,, \"13123456789\",,, [11]], [,, \"(?:10)?800\\\\d{7}\",,,, \"8001234567\",,, [10, 12]], [,, \"16[08]\\\\d{5}\",,,, \"16812345\",,, [8]], [,, \"400\\\\d{7}|950\\\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\",,,, \"4001234567\",,, [7, 8, 9, 10, 11], [5, 6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CN\", 86, \"(?:1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))?00\", \"0\",,, \"0|(1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))\",, \"00\",, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{5,6})\", \"$1\", [\"100|95\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d\\\\d[19]\", \"[3-9]\\\\d\\\\d(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3,4})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[3-57-9]|6[25-7])\"],, \"$CC $1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d\\\\d[19]\", \"[3-9]\\\\d\\\\d(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[3-57-9]|6[25-7])\"],, \"$CC $1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [,,,,,,,,, [-1]],,, [,, \"(?:4|(?:10)?8)00\\\\d{7}|950\\\\d{7,8}\",,,,,,, [10, 11, 12]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CO: [, [,, \"(?:1\\\\d|3)\\\\d{9}|[124-8]\\\\d{7}\",,,,,,, [8, 10, 11], [7]], [,, \"[124-8][2-9]\\\\d{6}\",,,, \"12345678\",,, [8], [7]], [,, \"3(?:0[0-5]|1\\\\d|2[0-3]|5[01])\\\\d{7}\",,,, \"3211234567\",,, [10]], [,, \"1800\\\\d{7}\",,,, \"18001234567\",,, [11]], [,, \"19(?:0[01]|4[78])\\\\d{7}\",,,, \"19001234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CO\", 57, \"00(?:4(?:[14]4|56)|[579])\", \"0\",,, \"0([3579]|4(?:[14]4|56))?\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:[2-79]|8[2-9])|[25-8]|4[2-9]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"],, \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1(?:80|9)\", \"1(?:800|9)\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:[2-79]|8[2-9])|[25-8]|4[2-9]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"],, \"0$CC $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1 $2 $3\", [\"1(?:80|9)\", \"1(?:800|9)\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CR: [, [,, \"(?:8\\\\d|90)\\\\d{8}|[24-8]\\\\d{7}\",,,,,,, [8, 10]], [,, \"2(?:[024-7]\\\\d\\\\d|1(?:0[7-9]|[1-9]\\\\d))\\\\d{4}\",,,, \"22123456\",,, [8]], [,, \"(?:(?:5(?:0[01]|7[0-3])|(?:7[0-3]|8[3-9])\\\\d)\\\\d\\\\d|6(?:[0-4]\\\\d{3}|500[01]))\\\\d{3}\",,,, \"83123456\",,, [8]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"90[059]\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:210[0-6]|4\\\\d{3}|5100)\\\\d{4}\",,,, \"40001234\",,, [8]], \"CR\", 506, \"00\",,,, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\",,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24-7]|8[3-9]\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CU: [, [,, \"[2-57]\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\",,,,,,, [6, 7, 8], [4, 5]], [,, \"(?:2[1-4]|7\\\\d)\\\\d{5,6}|(?:3[1-3]|4[1-35-8])\\\\d{6}|3[23]\\\\d{4,5}|4[12578]\\\\d{5}|4[78]\\\\d{4}\",,,, \"71234567\",,,, [4, 5]], [,, \"5\\\\d{7}\",,,, \"51234567\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CU\", 53, \"119\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"[2-4]\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"5\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CV: [, [,, \"[2-59]\\\\d{6}\",,,,,,, [7]], [,, \"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\",,,, \"2211234\"], [,, \"(?:[34][36]|5[1-389]|9\\\\d)\\\\d{5}\",,,, \"9911234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CV\", 238, \"0\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-59]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CW: [, [,, \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",,,,,,, [7, 8]], [,, \"9(?:4(?:3[0-5]|4[14]|6\\\\d)|50\\\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\\\d|7[01]|8[57-9]))\\\\d{4}\",,,, \"94351234\"], [,, \"9(?:5(?:[12467]\\\\d|3[01])|6[5-9]\\\\d)\\\\d{4}\",,,, \"95181234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"60[0-2]\\\\d{4}\",,,, \"6001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"CW\", 599, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]],, [,, \"955\\\\d{5}\",,,, \"95581234\",,, [8]], 1, \"[69]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CX: [, [,, \"1\\\\d{5,9}|(?:[48]\\\\d\\\\d|550)\\\\d{6}\",,,,,,, [6, 7, 8, 9, 10]], [,, \"8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",,,, \"891641234\",,, [9], [8]], [,, \"4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\\\d{6}\",,,, \"412345678\",,, [9]], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"190[0-26]\\\\d{6}\",,,, \"1900123456\",,, [10]], [,, \"13(?:00\\\\d{3}|45[0-4])\\\\d{3}|13\\\\d{4}\",,,, \"1300123456\",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, \"(?:14(?:5\\\\d|71)|550\\\\d)\\\\d{5}\",,,, \"550123456\",,, [9]], \"CX\", 61, \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"0\",,, \"0|([59]\\\\d{7})$\", \"8$1\", \"0011\",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    CY: [, [,, \"(?:[279]\\\\d|[58]0)\\\\d{6}\",,,,,,, [8]], [,, \"2[2-6]\\\\d{6}\",,,, \"22345678\"], [,, \"9[4-79]\\\\d{6}\",,,, \"96123456\"], [,, \"800\\\\d{5}\",,,, \"80001234\"], [,, \"90[09]\\\\d{5}\",,,, \"90012345\"], [,, \"80[1-9]\\\\d{5}\",,,, \"80112345\"], [,, \"700\\\\d{5}\",,,, \"70012345\"], [,,,,,,,,, [-1]], \"CY\", 357, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:50|77)\\\\d{6}\",,,, \"77123456\"],,, [,,,,,,,,, [-1]]],\n    CZ: [, [,, \"(?:[2-578]\\\\d|60|9\\\\d{1,4})\\\\d{7}\",,,,,,, [9, 10, 11, 12]], [,, \"(?:2\\\\d|3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\",,,, \"212345678\",,, [9]], [,, \"(?:60[1-8]|7(?:0[2-5]|[2379]\\\\d))\\\\d{6}\",,,, \"601123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"9(?:0[05689]|76)\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"8[134]\\\\d{7}\",,,, \"811234567\",,, [9]], [,, \"70[01]\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"9[17]0\\\\d{6}\",,,, \"910123456\",,, [9]], \"CZ\", 420, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"9(?:5\\\\d|7[2-4])\\\\d{6}\",,,, \"972123456\",,, [9]],,, [,, \"9(?:3\\\\d{9}|6\\\\d{7,10})\",,,, \"93123456789\"]],\n    DE: [, [,, \"(?:1|[235-9]\\\\d{11}|4(?:[0-8]\\\\d{2,10}|9(?:[05]\\\\d{7}|[46][1-8]\\\\d{2,6})))\\\\d{3}|[1-35-9]\\\\d{6,13}|49(?:(?:[0-25]\\\\d|3[1-689])\\\\d{4,8}|4[1-8]\\\\d{4}|6[0-8]\\\\d{3,4}|7[1-7]\\\\d{5,8})|497[0-7]\\\\d{4}|49(?:[0-2579]\\\\d|[34][1-9])\\\\d{3}|[1-9]\\\\d{5}|[13468]\\\\d{4}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3]], [,, \"(?:2(?:0[1-689]|[1-3569]\\\\d|4[0-8]|7[1-7]|8[0-7])|5(?:0[2-8]|[124-6]\\\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-3589]\\\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|[29]\\\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\\\d|[589][0-7]|6[0-8]|7[0-467]))\\\\d{4,12}|3(?:(?:[03569]\\\\d|4[0-79]|7[1-7]|8[1-8])\\\\d{4,12}|2\\\\d{9})|4(?:(?:[02-48]\\\\d|1[02-9]|5[0-6]|6[0-8]|7[0-79])\\\\d{4,12}|9(?:[0-37]\\\\d{4,9}|[4-6]\\\\d{4,10}))|(?:2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:0\\\\d?|[35-9][15]|4[015])|4(?:0\\\\d?|[2-9]1)|[57][1-9]1|[68](?:[1-8]1|9\\\\d?)|9(?:06|[1-9]1))\\\\d{3}\",,,, \"30123456\",,, [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3, 4]], [,, \"1(?:5[0-25-9]\\\\d{8}|(?:6[023]|7\\\\d)\\\\d{7,8})\",,,, \"15123456789\",,, [10, 11]], [,, \"800\\\\d{7,12}\",,,, \"8001234567890\",,, [10, 11, 12, 13, 14, 15]], [,, \"(?:137[7-9]|900(?:[135]|9\\\\d))\\\\d{6}\",,,, \"9001234567\",,, [10, 11]], [,, \"1(?:3(?:7[1-6]\\\\d\\\\d|8)|80\\\\d{1,7})\\\\d{4}\",,,, \"18012345\",,, [7, 8, 9, 10, 11, 12, 13, 14]], [,, \"700\\\\d{8}\",,,, \"70012345678\",,, [11]], [,,,,,,,,, [-1]], \"DE\", 49, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|(?:4[2-9]|[57][1-9]|[68][1-8])1|9(?:06|[1-9]1)\", \"2(?:0[1-389]|1(?:[14]|2[0-8])|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|(?:4[2-9]|[57][1-9]|[68][1-8])1|9(?:06|[1-9]1)\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|7(?:0[2-8]|[1-9])|8(?:0[2-9]|[1-8])|9(?:0[7-9]|[1-9])\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[13468]|8[13568])|6(?:0[1356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|7(?:0[2-8]|[1-9])|8(?:0[2-9]|[1-8])|9(?:0[7-9]|[1-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{3,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]],, [,, \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\",,,, \"16412345\",,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]], [,, \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\",,,, \"18500123456\",,, [8, 9, 10, 11, 12, 13, 14]],,, [,, \"1(?:5(?:(?:[03-68]00|113)\\\\d|2\\\\d55|7\\\\d99|9\\\\d33)|(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\\\d?)\\\\d{7}\",,,, \"177991234567\",,, [12, 13]]],\n    DJ: [, [,, \"(?:2\\\\d|77)\\\\d{6}\",,,,,,, [8]], [,, \"2(?:1[2-5]|7[45])\\\\d{5}\",,,, \"21360003\"], [,, \"77\\\\d{6}\",,,, \"77831001\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"DJ\", 253, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    DK: [, [,, \"[2-9]\\\\d{7}\",,,,,,, [8]], [,, \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\",,,, \"32123456\"], [,, \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\",,,, \"32123456\"], [,, \"80\\\\d{6}\",,,, \"80123456\"], [,, \"90\\\\d{6}\",,,, \"90123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"DK\", 45, \"00\",,,,,,, 1, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    DM: [, [,, \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\\\d{4}\",,,, \"7674201234\",,,, [7]], [,, \"767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-7])\\\\d{4}\",,,, \"7672251234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"DM\", 1, \"011\", \"1\",,, \"1|([2-7]\\\\d{6})$\", \"767$1\",,,,, [,,,,,,,,, [-1]],, \"767\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    DO: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"8(?:[04]9[2-9]\\\\d\\\\d|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d\\\\d|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\\\d{4}\",,,, \"8092345678\",,,, [7]], [,, \"8[024]9[2-9]\\\\d{6}\",,,, \"8092345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"DO\", 1, \"011\", \"1\",,, \"1\",,,,,, [,,,,,,,,, [-1]],, \"8[024]9\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    DZ: [, [,, \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",,,,,,, [8, 9]], [,, \"(?:(?:1\\\\d|2[013-79]|3[0-8]|4[0135689])\\\\d|9619)\\\\d{5}\",,,, \"12345678\"], [,, \"(?:(?:5[4-6]|7[7-9])\\\\d|6(?:[569]\\\\d|7[0-6]))\\\\d{6}\",,,, \"551234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"80[3-689]1\\\\d{5}\",,,, \"808123456\",,, [9]], [,, \"80[12]1\\\\d{5}\",,,, \"801123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"98[23]\\\\d{6}\",,,, \"983123456\",,, [9]], \"DZ\", 213, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    EC: [, [,, \"1800\\\\d{6,7}|(?:[2-7]|9\\\\d)\\\\d{7}\",,,,,,, [8, 9, 10, 11], [7]], [,, \"[2-7][2-7]\\\\d{6}\",,,, \"22123456\",,, [8], [7]], [,, \"9(?:(?:39|[57][89]|[89]\\\\d)\\\\d|6(?:[0-27-9]\\\\d|30))\\\\d{5}\",,,, \"991234567\",,, [9]], [,, \"1800\\\\d{6,7}\",,,, \"18001234567\",,, [10, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"[2-7]890\\\\d{4}\",,,, \"28901234\",,, [8]], \"EC\", 593, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-7]\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-7]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    EE: [, [,, \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d\\\\d|900)\\\\d{4}\",,,,,,, [7, 8, 10]], [,, \"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\",,,, \"3212345\",,, [7]], [,, \"(?:5\\\\d|8[1-4])\\\\d{6}|5(?:(?:[02]\\\\d|5[0-478])\\\\d|1(?:[0-8]\\\\d|95)|6(?:4[0-4]|5[1-589]))\\\\d{3}\",,,, \"51234567\",,, [7, 8]], [,, \"800(?:(?:0\\\\d\\\\d|1)\\\\d|[2-9])\\\\d{3}\",,,, \"80012345\"], [,, \"(?:40\\\\d\\\\d|900)\\\\d{4}\",,,, \"9001234\",,, [7, 8]], [,,,,,,,,, [-1]], [,, \"70[0-2]\\\\d{5}\",,,, \"70012345\",,, [8]], [,,,,,,,,, [-1]], \"EE\", 372, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"]], [, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-4])\", \"[45]|8(?:00[1-9]|[1-4])\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"80\"]]],, [,,,,,,,,, [-1]],,, [,, \"800[2-9]\\\\d{3}\",,,,,,, [7]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    EG: [, [,, \"(?:[189]\\\\d?|[24-6])\\\\d{8}|[135]\\\\d{7}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"1(?:3[23]\\\\d{6}|5\\\\d{6,7})|(?:(?:2[2-4]|3)\\\\d|4(?:0[2-5]|[578][23]|64)|6[24-689]3|8(?:2[2-57]|4[26]|6[237]|8[2-4])|9(?:2[27]|3[24]|52|6[2356]|7[2-4]))\\\\d{6}|5(?:(?:0[2-7]|5\\\\d)\\\\d{6}|7[23]\\\\d{5,6})\",,,, \"234567890\",,, [8, 9], [6, 7]], [,, \"1[0-25]\\\\d{8}\",,,, \"1001234567\",,, [10]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"900\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"EG\", 20, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[189]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    EH: [, [,, \"[5-8]\\\\d{8}\",,,,,,, [9]], [,, \"528[89]\\\\d{5}\",,,, \"528812345\"], [,, \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\\\d{6}\",,,, \"650123456\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,, \"89\\\\d{7}\",,,, \"891234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5924[01]\\\\d{4}\",,,, \"592401234\"], \"EH\", 212, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],, \"528[89]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ER: [, [,, \"[178]\\\\d{6}\",,,,,,, [7], [6]], [,, \"(?:1(?:1[12568]|[24]0|55|6[146])|8\\\\d\\\\d)\\\\d{4}\",,,, \"8370362\",,,, [6]], [,, \"(?:17[1-3]|7\\\\d\\\\d)\\\\d{4}\",,,, \"7123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ER\", 291, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ES: [, [,, \"(?:51|[6-9]\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"(?:8(?:[1356]\\\\d|[28][0-8]|[47][1-9])\\\\d{4}|9(?:(?:(?:[135]\\\\d|[28][0-8]|4[1-9])\\\\d\\\\d|7(?:[124-9]\\\\d\\\\d|3(?:[0-8]\\\\d|9[1-9])))\\\\d\\\\d|6(?:[0-8]\\\\d{4}|9(?:0(?:[0-57-9]\\\\d\\\\d|6(?:0[0-8]|1[1-9]|[2-9]\\\\d))|[1-9]\\\\d{3}))))\\\\d\\\\d\",,,, \"810123456\"], [,, \"(?:(?:6\\\\d|7[1-48])\\\\d{5}|9(?:6906(?:09|10)|7390\\\\d\\\\d))\\\\d\\\\d\",,,, \"612345678\"], [,, \"[89]00\\\\d{6}\",,,, \"800123456\"], [,, \"80[367]\\\\d{6}\",,,, \"803123456\"], [,, \"90[12]\\\\d{6}\",,,, \"901123456\"], [,, \"70\\\\d{7}\",,,, \"701234567\"], [,,,,,,,,, [-1]], \"ES\", 34, \"00\",,,,,,,, [[, \"(\\\\d{4})\", \"$1\", [\"905\"]], [, \"(\\\\d{6})\", \"$1\", [\"[79]9\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"51\\\\d{7}\",,,, \"511234567\"],,, [,,,,,,,,, [-1]]],\n    ET: [, [,, \"(?:11|[2-59]\\\\d)\\\\d{7}\",,,,,,, [9], [7]], [,, \"(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\",,,, \"111112345\",,,, [7]], [,, \"9\\\\d{8}\",,,, \"911234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ET\", 251, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-59]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    FI: [, [,, \"(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}|[1-35689]\\\\d{4}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"(?:1[3-79][1-8]|[235689][1-8]\\\\d)\\\\d{2,6}\",,,, \"131234567\",,, [5, 6, 7, 8, 9]], [,, \"(?:4[0-8]|50)\\\\d{4,8}\",,,, \"412345678\",,, [6, 7, 8, 9, 10]], [,, \"800\\\\d{4,6}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"[67]00\\\\d{5,6}\",,,, \"600123456\",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FI\", 358, \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{5})\", \"$1\", [\"75[12]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [, \"(\\\\d{6})\", \"$1\", [\"11\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[12]0|7)0|[368]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[12457]\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[12]0|7)0|[368]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[12457]\"], \"0$1\"]], [,,,,,,,,, [-1]], 1, \"1[03-79]|[2-9]\", [,, \"[13]00\\\\d{3,7}|20(?:0\\\\d{3,7}|(?:2[023]|9[89])\\\\d{1,6})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:(?:1|3\\\\d)\\\\d{7}|5[03-9]\\\\d{3,7})\"], [,, \"(?:10|[23][09])\\\\d{4,8}|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:(?:1|3\\\\d)\\\\d{7}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d\",,,, \"10112345\"],,, [,,,,,,,,, [-1]]],\n    FJ: [, [,, \"(?:(?:0800\\\\d|[235-9])\\\\d|45)\\\\d{5}\",,,,,,, [7, 11]], [,, \"(?:(?:3[0-5]|8[58])\\\\d|6(?:03|[25-7]\\\\d))\\\\d{4}\",,,, \"3212345\",,, [7]], [,, \"(?:[279]\\\\d|45|5[01568]|8[034679])\\\\d{5}\",,,, \"7012345\",,, [7]], [,, \"0800\\\\d{7}\",,,, \"08001234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FJ\", 679, \"0(?:0|52)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    FK: [, [,, \"[2-7]\\\\d{4}\",,,,,,, [5]], [,, \"[2-47]\\\\d{4}\",,,, \"31234\"], [,, \"[56]\\\\d{4}\",,,, \"51234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FK\", 500, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    FM: [, [,, \"[39]\\\\d{6}\",,,,,,, [7]], [,, \"(?:3[2357]0[1-9]|9[2-6]\\\\d\\\\d)\\\\d{3}\",,,, \"3201234\"], [,, \"(?:3[2357]0[1-9]|9[2-7]\\\\d\\\\d)\\\\d{3}\",,,, \"3501234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"FM\", 691, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[39]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    FO: [, [,, \"(?:[2-8]\\\\d|90)\\\\d{4}\",,,,,,, [6]], [,, \"(?:20|[34]\\\\d|8[19])\\\\d{4}\",,,, \"201234\"], [,, \"(?:[27][1-9]|5\\\\d)\\\\d{4}\",,,, \"211234\"], [,, \"80[257-9]\\\\d{3}\",,,, \"802123\"], [,, \"90(?:[13-5][15-7]|2[125-7]|99)\\\\d\\\\d\",,,, \"901123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:6[0-36]|88)\\\\d{4}\",,,, \"601234\"], \"FO\", 298, \"00\",,,, \"(10(?:01|[12]0|88))\",,,, [[, \"(\\\\d{6})\", \"$1\", [\"[2-9]\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    FR: [, [,, \"[1-9]\\\\d{8}\",,,,,,, [9]], [,, \"[1-5]\\\\d{8}\",,,, \"123456789\"], [,, \"(?:6\\\\d\\\\d|7(?:00|[3-9]\\\\d))\\\\d{6}\",,,, \"612345678\"], [,, \"80[0-5]\\\\d{6}\",,,, \"801234567\"], [,, \"8[129]\\\\d{7}\",,,, \"891123456\"], [,, \"884\\\\d{6}\",,,, \"884012345\"], [,,,,,,,,, [-1]], [,, \"9\\\\d{8}\",,,, \"912345678\"], \"FR\", 33, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})\", \"$1\", [\"10\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"80[6-9]\\\\d{6}\",,,, \"806123456\"],,, [,,,,,,,,, [-1]]],\n    GA: [, [,, \"(?:0\\\\d|[2-7])\\\\d{6}\",,,,,,, [7, 8]], [,, \"01\\\\d{6}\",,,, \"01441234\",,, [8]], [,, \"(?:0[2-7]|[2-7])\\\\d{6}\",,,, \"06031234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GA\", 241, \"00\",,,,,,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GB: [, [,, \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",,,,,,, [7, 9, 10], [4, 5, 6, 8]], [,, \"(?:1(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|2(?:0[024-9]|1[0-7]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))|2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d)\\\\d{6}|1(?:(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d|7(?:(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))\\\\d|6888[2-46-8]))\\\\d\\\\d\",,,, \"1212345678\",,, [9, 10], [4, 5, 6, 7, 8]], [,, \"7(?:(?:[1-3]\\\\d\\\\d|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|8(?:[014-9]\\\\d|[23][0-8]))\\\\d|4(?:[0-46-9]\\\\d\\\\d|5(?:[0-689]\\\\d|7[0-57-9]))|7(?:0(?:0[01]|[1-9]\\\\d)|(?:[1-7]\\\\d|8[02-9]|9[0-689])\\\\d)|9(?:(?:[024-9]\\\\d|3[0-689])\\\\d|1(?:[02-9]\\\\d|1[028])))\\\\d{5}\",,,, \"7400123456\",,, [10]], [,, \"80[08]\\\\d{7}|800\\\\d{6}|8001111\",,,, \"8001234567\"], [,, \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",,,, \"9012345678\",,, [7, 10]], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], [,, \"56\\\\d{8}\",,,, \"5612345678\",,, [10]], \"GB\", 44, \"00\", \"0\", \" x\",, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[024-9])\", \"[25]|7(?:0|6(?:[04-9]|2[356]))\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]],, [,, \"76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",,,, \"7640123456\",,, [10]], 1,, [,,,,,,,,, [-1]], [,, \"(?:3[0347]|55)\\\\d{8}\",,,, \"5512345678\",,, [10]],,, [,,,,,,,,, [-1]]],\n    GD: [, [,, \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\",,,, \"4732691234\",,,, [7]], [,, \"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\\\d{4}\",,,, \"4734031234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"GD\", 1, \"011\", \"1\",,, \"1|([2-9]\\\\d{6})$\", \"473$1\",,,,, [,,,,,,,,, [-1]],, \"473\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GE: [, [,, \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",,,,,,, [9], [6]], [,, \"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\",,,, \"322123456\",,,, [6]], [,, \"(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\\\d{6}\",,,, \"555123456\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"706\\\\d{6}\",,,, \"706123456\"], \"GE\", 995, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"706\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GF: [, [,, \"[56]94\\\\d{6}\",,,,,,, [9]], [,, \"594(?:[023]\\\\d|1[01]|4[03-9]|5[6-9]|6[0-3]|80|9[014])\\\\d{4}\",,,, \"594101234\"], [,, \"694(?:[0-249]\\\\d|3[0-48])\\\\d{4}\",,,, \"694201234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GF\", 594, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[56]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GG: [, [,, \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",,,,,,, [7, 9, 10], [6]], [,, \"1481[25-9]\\\\d{5}\",,,, \"1481256789\",,, [10], [6]], [,, \"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",,,, \"7781123456\",,, [10]], [,, \"80[08]\\\\d{7}|800\\\\d{6}|8001111\",,,, \"8001234567\"], [,, \"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",,,, \"9012345678\",,, [7, 10]], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], [,, \"56\\\\d{8}\",,,, \"5612345678\",,, [10]], \"GG\", 44, \"00\", \"0\",,, \"0|([25-9]\\\\d{5})$\", \"1481$1\",,,,, [,, \"76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",,,, \"7640123456\",,, [10]],,, [,,,,,,,,, [-1]], [,, \"(?:3[0347]|55)\\\\d{8}\",,,, \"5512345678\",,, [10]],,, [,,,,,,,,, [-1]]],\n    GH: [, [,, \"(?:[235]\\\\d{3}|800)\\\\d{5}\",,,,,,, [8, 9], [7]], [,, \"3(?:0(?:[237]\\\\d|80)|[167](?:2[0-6]|7\\\\d|80)|2(?:2[0-5]|7\\\\d|80)|3(?:2[0-3]|7\\\\d|80)|4(?:2[013-9]|3[01]|7\\\\d|80)|5(?:2[0-7]|7\\\\d|80)|8(?:2[0-2]|7\\\\d|80)|9(?:[28]0|7\\\\d))\\\\d{5}\",,,, \"302345678\",,, [9], [7]], [,, \"(?:2[0346-8]\\\\d|5(?:[0457]\\\\d|6[01]))\\\\d{6}\",,,, \"231234567\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GH\", 233, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[237]|80\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,, \"800\\\\d{5}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GI: [, [,, \"(?:[25]\\\\d\\\\d|629)\\\\d{5}\",,,,,,, [8]], [,, \"2(?:(?:00\\\\d|2(?:2[2457]|50))\\\\d|1(?:6[24-7]\\\\d|90[0-2]))\\\\d{3}\",,,, \"20012345\"], [,, \"(?:5[46-8]\\\\d|629)\\\\d{5}\",,,, \"57123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GI\", 350, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GL: [, [,, \"(?:19|[2-689]\\\\d)\\\\d{4}\",,,,,,, [6]], [,, \"(?:19|3[1-7]|6[14689]|8[14-79]|9\\\\d)\\\\d{4}\",,,, \"321000\"], [,, \"(?:[25][1-9]|4[2-9])\\\\d{4}\",,,, \"221234\"], [,, \"80\\\\d{4}\",,,, \"801234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3[89]\\\\d{4}\",,,, \"381234\"], \"GL\", 299, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-689]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GM: [, [,, \"[2-9]\\\\d{6}\",,,,,,, [7]], [,, \"(?:4(?:[23]\\\\d\\\\d|4(?:1[024679]|[6-9]\\\\d))|5(?:54[0-7]|6[67]\\\\d|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\",,,, \"5661234\"], [,, \"(?:[23679]\\\\d|5[01])\\\\d{5}\",,,, \"3012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GM\", 220, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GN: [, [,, \"(?:30|6\\\\d\\\\d|722)\\\\d{6}\",,,,,,, [8, 9]], [,, \"30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\\\d{4}\",,,, \"30241234\",,, [8]], [,, \"6[02356]\\\\d{7}\",,,, \"601123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"722\\\\d{6}\",,,, \"722123456\",,, [9]], \"GN\", 224, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GP: [, [,, \"(?:590|69\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\",,,, \"590201234\"], [,, \"69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}\",,,, \"690001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GP\", 590, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[56]\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GQ: [, [,, \"(?:222|(?:3\\\\d|55|[89]0)\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"3(?:3(?:[0-24-9]\\\\d[46]|3\\\\d[7-9])|5\\\\d\\\\d[7-9])\\\\d{4}\",,,, \"333091234\"], [,, \"(?:222|55[015])\\\\d{6}\",,,, \"222123456\"], [,, \"80\\\\d[1-9]\\\\d{5}\",,,, \"800123456\"], [,, \"90\\\\d[1-9]\\\\d{5}\",,,, \"900123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GQ\", 240, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GR: [, [,, \"(?:[268]\\\\d|[79]0)\\\\d{8}\",,,,,,, [10]], [,, \"2(?:1\\\\d\\\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\",,,, \"2123456789\"], [,, \"6(?:8[57-9]|9\\\\d)\\\\d{7}\",,,, \"6912345678\"], [,, \"800\\\\d{7}\",,,, \"8001234567\"], [,, \"90[19]\\\\d{7}\",,,, \"9091234567\"], [,, \"8(?:0[16]|12|25)\\\\d{7}\",,,, \"8011234567\"], [,, \"70\\\\d{8}\",,,, \"7012345678\"], [,,,,,,,,, [-1]], \"GR\", 30, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GT: [, [,, \"(?:1\\\\d{3}|[2-7])\\\\d{7}\",,,,,,, [8, 11]], [,, \"[267][2-9]\\\\d{6}\",,,, \"22456789\",,, [8]], [,, \"[3-5]\\\\d{7}\",,,, \"51234567\",,, [8]], [,, \"18[01]\\\\d{8}\",,,, \"18001112222\",,, [11]], [,, \"19\\\\d{9}\",,,, \"19001112222\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GT\", 502, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GU: [, [,, \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\",,,, \"6713001234\",,,, [7]], [,, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\",,,, \"6713001234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"GU\", 1, \"011\", \"1\",,, \"1|([3-9]\\\\d{6})$\", \"671$1\",, 1,,, [,,,,,,,,, [-1]],, \"671\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GW: [, [,, \"[49]\\\\d{8}|4\\\\d{6}\",,,,,,, [7, 9]], [,, \"443\\\\d{6}\",,,, \"443201234\",,, [9]], [,, \"9(?:5\\\\d|6[569]|77)\\\\d{6}\",,,, \"955012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"40\\\\d{5}\",,,, \"4012345\",,, [7]], \"GW\", 245, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    GY: [, [,, \"(?:(?:(?:[2-46]\\\\d|77)\\\\d|862)\\\\d|9008)\\\\d{3}\",,,,,,, [7]], [,, \"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-24-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|77[1-57])\\\\d{4}\",,,, \"2201234\"], [,, \"6\\\\d{6}\",,,, \"6091234\"], [,, \"(?:289|862)\\\\d{4}\",,,, \"2891234\"], [,, \"9008\\\\d{3}\",,,, \"9008123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"GY\", 592, \"001\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    HK: [, [,, \"8[0-46-9]\\\\d{6,7}|9\\\\d{4}(?:\\\\d(?:\\\\d(?:\\\\d{4})?)?)?|(?:[235-79]\\\\d|46)\\\\d{6}\",,,,,,, [5, 6, 7, 8, 9, 11]], [,, \"(?:2(?:[13-8]\\\\d|2[013-9]|9[0-24-9])\\\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\\\d|8(?:4[04]|9\\\\d))|58(?:0[1-8]|1[2-9]))\\\\d{4}\",,,, \"21234567\",,, [8]], [,, \"(?:46(?:0[0-6]|1[0-2]|4[0-57-9])|5(?:(?:[1-59][0-46-9]|6[0-4689])\\\\d|7(?:[0-2469]\\\\d|30))|6(?:(?:0[1-9]|[13-59]\\\\d|[68][0-57-9]|7[0-79])\\\\d|2(?:[0-57-9]\\\\d|6[01]))|707[1-5]|848[01]|9(?:(?:0[1-9]|1[02-9]|[358][0-8]|[467]\\\\d)\\\\d|2(?:[0-8]\\\\d|9[03-9])))\\\\d{4}\",,,, \"51234567\",,, [8]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\",,,, \"90012345678\",,, [5, 6, 7, 8, 11]], [,,,,,,,,, [-1]], [,, \"8(?:1[0-4679]\\\\d|2(?:[0-36]\\\\d|7[0-4])|3(?:[034]\\\\d|2[09]|70))\\\\d{4}\",,,, \"81123456\",,, [8]], [,,,,,,,,, [-1]], \"HK\", 852, \"00(?:30|5[09]|[126-9]?)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]],, [,, \"7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[136])|2(?:[02389]\\\\d|1[18]|7[27-9])|3(?:[0-38]\\\\d|7[0-369]|9[2357-9])|47\\\\d|5(?:[178]\\\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\\\d)|7(?:[27]\\\\d|8[7-9])|8(?:[23689]\\\\d|7[1-9])|9(?:[025]\\\\d|6[0-246-8]|7[0-36-9]|8[238]))\\\\d{4}\",,,, \"71123456\",,, [8]],,, [,,,,,,,,, [-1]], [,, \"30(?:0[1-9]|[15-7]\\\\d|2[047]|89)\\\\d{4}\",,,, \"30161234\",,, [8]],,, [,,,,,,,,, [-1]]],\n    HN: [, [,, \"[237-9]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:2(?:0[019]|1[1-36]|[23]\\\\d|4[04-6]|5[57]|6[24]|7[0135689]|8[01346-9]|9[0-2])|4(?:07|2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:08|16|4[03-5]|5\\\\d|6[4-6]|74|80)|6(?:[056]\\\\d|17|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034])|8(?:79|8[0-357-9]|9[1-57-9]))\\\\d{4}\",,,, \"22123456\"], [,, \"[37-9]\\\\d{7}\",,,, \"91234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"HN\", 504, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    HR: [, [,, \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",,,,,,, [6, 7, 8, 9]], [,, \"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\",,,, \"12345678\",,, [8, 9], [6, 7]], [,, \"9(?:(?:01|[12589]\\\\d)\\\\d|7(?:[0679]\\\\d|51))\\\\d{5}|98\\\\d{6}\",,,, \"921234567\",,, [8, 9]], [,, \"80[01]\\\\d{4,6}\",,,, \"800123456\",,, [7, 8, 9]], [,, \"6[01459]\\\\d{6}|6[01]\\\\d{4,5}\",,,, \"611234\",,, [6, 7, 8]], [,,,,,,,,, [-1]], [,, \"7[45]\\\\d{6}\",,,, \"74123456\",,, [8]], [,,,,,,,,, [-1]], \"HR\", 385, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:62\\\\d?|72)\\\\d{6}\",,,, \"62123456\",,, [8, 9]],,, [,,,,,,,,, [-1]]],\n    HT: [, [,, \"[2-489]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:2\\\\d|5[1-5]|81|9[149])\\\\d{5}\",,,, \"22453300\"], [,, \"[34]\\\\d{7}\",,,, \"34101234\"], [,, \"8\\\\d{7}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"9(?:[67][0-4]|8[0-3589]|9\\\\d)\\\\d{5}\",,,, \"98901234\"], \"HT\", 509, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-489]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    HU: [, [,, \"[2357]\\\\d{8}|[1-9]\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"(?:1\\\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\\\d{6}\",,,, \"12345678\",,, [8], [6, 7]], [,, \"(?:[257]0|3[01])\\\\d{7}\",,,, \"201234567\",,, [9]], [,, \"[48]0\\\\d{6}\",,,, \"80123456\",,, [8]], [,, \"9[01]\\\\d{6}\",,,, \"90123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"21\\\\d{7}\",,,, \"211234567\",,, [9]], \"HU\", 36, \"00\", \"06\",,, \"06\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"($1)\"]],, [,,,,,,,,, [-1]],,, [,, \"[48]0\\\\d{6}\",,,,,,, [8]], [,, \"38\\\\d{7}\",,,, \"381234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n    ID: [, [,, \"(?:[1-36]|8\\\\d{5})\\\\d{6}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",,,,,,, [7, 8, 9, 10, 11, 12], [5, 6]], [,, \"2(?:[124]\\\\d{7,8}|(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])\\\\d{5,8})|(?:3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}|6(?:1(?:[0-8]\\\\d{4,7}|9\\\\d{4,8})|(?:[25]\\\\d|3[1-69]|4[1-6])\\\\d{5,8})|2(?:1(?:14|500)|2\\\\d{3})\\\\d{3}\",,,, \"218350123\",,, [7, 8, 9, 10, 11], [5, 6]], [,, \"8[1-35-9]\\\\d{7,10}\",,,, \"812345678\",,, [9, 10, 11, 12]], [,, \"(?:177\\\\d|800)\\\\d{5,7}\",,,, \"8001234567\",,, [8, 9, 10, 11]], [,, \"809\\\\d{7}\",,,, \"8091234567\",,, [10]], [,, \"804\\\\d{7}\",,,, \"8041234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ID\", 62, \"0(?:0[17-9]|10(?:00|1[67]))\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [, \"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"8071\\\\d{6}\",,,,,,, [10]], [,, \"(?:1500|8071\\\\d{3})\\\\d{3}\",,,, \"8071123456\",,, [7, 10]],,, [,,,,,,,,, [-1]]],\n    IE: [, [,, \"[148]\\\\d{9}|[124-9]\\\\d{8}|[124-69]\\\\d{7}|[24-69]\\\\d{6}\",,,,,,, [7, 8, 9, 10], [5, 6]], [,, \"(?:1\\\\d{2,3}|2(?:[13]\\\\d\\\\d|[24-9])|4(?:0[24]|(?:(?:[1-469]|8[0-46-9])\\\\d|5)\\\\d|7)|5(?:0[45]|(?:1|[23679]\\\\d)\\\\d|8)|6(?:[237-9]|[4-6]\\\\d\\\\d)|7[14]\\\\d\\\\d|9(?:[04]\\\\d\\\\d|[35-9]))\\\\d{5}|[269]1\\\\d{6}\",,,, \"2212345\",,,, [5, 6]], [,, \"8(?:22|[35-9]\\\\d)\\\\d{6}\",,,, \"850123456\",,, [9]], [,, \"1800\\\\d{6}\",,,, \"1800123456\",,, [10]], [,, \"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\",,,, \"1520123456\",,, [10]], [,, \"18[59]0\\\\d{6}\",,,, \"1850123456\",,, [10]], [,, \"700\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"76\\\\d{7}\",,,, \"761234567\",,, [9]], \"IE\", 353, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,, \"18[59]0\\\\d{6}\",,,,,,, [10]], [,, \"818\\\\d{6}\",,,, \"818123456\",,, [9]],,, [,, \"8[35-9]5\\\\d{7}\",,,, \"8551234567\",,, [10]]],\n    IL: [, [,, \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",,,,,,, [7, 8, 9, 10, 11, 12]], [,, \"(?:153\\\\d\\\\d?|[2-489])\\\\d{7}\",,,, \"21234567\",,, [8, 11, 12], [7]], [,, \"5(?:(?:[0-489][2-9]|6\\\\d)\\\\d|5(?:01|2[2-5]|3[23]|4[45]|5[05689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\\\d{5}\",,,, \"502345678\",,, [9]], [,, \"1(?:255|80[019]\\\\d{3})\\\\d{3}\",,,, \"1800123456\",,, [7, 10]], [,, \"1(?:2(?:00\\\\d\\\\d|12)|9(?:0[01]|19)\\\\d\\\\d)\\\\d{4}\",,,, \"1919123456\",,, [8, 10]], [,, \"1700\\\\d{6}\",,,, \"1700123456\",,, [10]], [,,,,,,,,, [-1]], [,, \"7(?:(?:18|2[23]|3[237]|47|6[58]|7\\\\d|9[2357-9])\\\\d|8(?:2\\\\d|33|55|77|81))\\\\d{5}\",,,, \"771234567\",,, [9]], \"IL\", 972, \"0(?:0|1[2-9])\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [, \"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]],, [,,,,,,,,, [-1]],,, [,, \"1700\\\\d{6}\",,,,,,, [10]], [,, \"1599\\\\d{6}\",,,, \"1599123456\",,, [10]],,, [,, \"151\\\\d{8,9}\",,,, \"15112340000\",,, [11, 12]]],\n    IM: [, [,, \"(?:1624|(?:[3578]\\\\d|90)\\\\d\\\\d)\\\\d{6}\",,,,,,, [10], [6]], [,, \"1624[5-8]\\\\d{5}\",,,, \"1624756789\",,,, [6]], [,, \"7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\",,,, \"7924123456\"], [,, \"808162\\\\d{4}\",,,, \"8081624567\"], [,, \"(?:8(?:4(?:40[49]06|5624\\\\d)|7(?:0624|2299)\\\\d)|90[0167]624\\\\d)\\\\d{3}\",,,, \"9016247890\"], [,,,,,,,,, [-1]], [,, \"70\\\\d{8}\",,,, \"7012345678\"], [,, \"56\\\\d{8}\",,,, \"5612345678\"], \"IM\", 44, \"00\", \"0\",,, \"0|([5-8]\\\\d{5})$\", \"1624$1\",,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:3(?:(?:08162|3\\\\d{4}|7(?:0624|2299))\\\\d|4(?:40[49]06|5624\\\\d))|55\\\\d{5})\\\\d{3}\",,,, \"5512345678\"],,, [,,,,,,,,, [-1]]],\n    IN: [, [,, \"(?:00800|1\\\\d{0,5}|[2-9]\\\\d\\\\d)\\\\d{7}\",,,,,,, [8, 9, 10, 11, 12, 13], [6, 7]], [,, \"(?:1(?:1[2-7]\\\\d\\\\d|2(?:[0-249][2-7]\\\\d|[35-8]\\\\d[2-7])|3(?:[0-25][2-7]\\\\d|[346-9]\\\\d[2-7])|4(?:[145][2-7]\\\\d|[236-9]\\\\d[2-7])|[59](?:[0235-9]\\\\d[2-7]|[14][2-7]\\\\d)|6(?:[014][2-7]\\\\d|[235-9]\\\\d[2-7])|7(?:(?:0[24]|[1257][2-7])\\\\d|[34689]\\\\d[2-7])|8(?:[01346][2-7]\\\\d|[257-9]\\\\d[2-7]))|2(?:[02][2-7]\\\\d\\\\d|1(?:[134689]\\\\d[2-7]|[257][2-7]\\\\d)|3(?:[013][2-7]\\\\d|[24-8]\\\\d[2-7])|4(?:[01][2-7]\\\\d|[2-8]\\\\d[2-7])|5(?:[0137][2-7]\\\\d|[25689]\\\\d[2-7])|6(?:[0158][2-7]\\\\d|[2-4679]\\\\d[2-7])|7(?:[13-79]\\\\d[2-7]|8[2-7]\\\\d)|8(?:(?:0[13468]|[1568][2-7])\\\\d|[2-479]\\\\d[2-7])|9(?:(?:0\\\\d|[14][2-7])\\\\d|[235-9]\\\\d[2-7]))|3(?:(?:01|1[79])\\\\d[2-7]|2(?:[1-5]\\\\d[2-7]|6[2-7]\\\\d)|3[2-7]\\\\d\\\\d|4(?:[13][2-7]\\\\d|2(?:[0189][2-7]|[2-7]\\\\d)|[5-8]\\\\d[2-7])|5(?:[125689]\\\\d[2-7]|[34][2-7]\\\\d)|6(?:[01489][2-7]\\\\d|[235-7]\\\\d[2-7])|7(?:[02-46][2-7]\\\\d|[157-9]\\\\d[2-7])|8(?:(?:0\\\\d|[159][2-7])\\\\d|[2-46-8]\\\\d[2-7]))|4(?:[04][2-7]\\\\d\\\\d|1(?:[14578]\\\\d[2-7]|[36][2-7]\\\\d)|2(?:(?:0[24]|[1-47][2-7])\\\\d|[5689]\\\\d[2-7])|3(?:[15][2-7]\\\\d|[2-467]\\\\d[2-7])|5(?:[12][2-7]\\\\d|[4-7]\\\\d[2-7])|6(?:[0-26-9][2-7]\\\\d|[35]\\\\d[2-7])|7(?:(?:[014-9][2-7]|2[2-8])\\\\d|3\\\\d[2-7])|8(?:[013-57][2-7]\\\\d|[2689]\\\\d[2-7])|9(?:[014-7][2-7]\\\\d|[2389]\\\\d[2-7]))|5(?:1(?:[025][2-7]\\\\d|[146-9]\\\\d[2-7])|2(?:[14-8]\\\\d[2-7]|2[2-7]\\\\d)|3(?:[1346]\\\\d[2-7]|[25][2-7]\\\\d)|4(?:[14-69]\\\\d[2-7]|[28][2-7]\\\\d)|5(?:(?:1[2-7]|2[1-7])\\\\d|[46]\\\\d[2-7])|6(?:[146-9]\\\\d[2-7]|[25][2-7]\\\\d)|7(?:1[2-7]\\\\d|[2-4]\\\\d[2-7])|8(?:1[2-7]\\\\d|[2-8]\\\\d[2-7])|9(?:[15][2-7]\\\\d|[246]\\\\d[2-7]))|6(?:1(?:[1358]\\\\d[2-7]|2[2-7]\\\\d)|2(?:1[2-7]\\\\d|[2457]\\\\d[2-7])|3(?:1[2-7]\\\\d|[2-4]\\\\d[2-7])|4(?:1[2-7]\\\\d|[235-7]\\\\d[2-7])|5(?:[17][2-7]\\\\d|[2-689]\\\\d[2-7])|6(?:[13][2-7]\\\\d|[24578]\\\\d[2-7])|7(?:1[2-7]\\\\d|[235689]\\\\d[2-7]|4(?:[0189][2-7]|[2-7]\\\\d))|8(?:0[2-7]\\\\d|[1-6]\\\\d[2-7]))|7(?:1(?:[013-9]\\\\d[2-7]|2[2-7]\\\\d)|2(?:[0235-9]\\\\d[2-7]|[14][2-7]\\\\d)|3(?:[134][2-7]\\\\d|[2679]\\\\d[2-7])|4(?:[1-35689]\\\\d[2-7]|[47][2-7]\\\\d)|5(?:[15][2-7]\\\\d|[2-46-9]\\\\d[2-7])|[67](?:[02-9]\\\\d[2-7]|1[2-7]\\\\d)|8(?:(?:[013-7]\\\\d|2[0-6])[2-7]|8(?:[0189][2-7]|[2-7]\\\\d))|9(?:[0189]\\\\d[2-7]|[2-7]\\\\d\\\\d))|8(?:0[2-7]\\\\d\\\\d|1(?:[1357-9]\\\\d[2-7]|6[2-7]\\\\d)|2(?:[014][2-7]\\\\d|[235-8]\\\\d[2-7])|3(?:[03-57-9]\\\\d[2-7]|[126][2-7]\\\\d)|(?:4[0-24-9]|5\\\\d)\\\\d[2-7]|6(?:[136][2-7]\\\\d|[2457-9]\\\\d[2-7])|7(?:[078][2-7]\\\\d|[1-6]\\\\d[2-7])|8(?:[1256]\\\\d[2-7]|[34][2-7]\\\\d)|9(?:1[2-7]\\\\d|[2-4]\\\\d[2-7])))\\\\d{5}\",,,, \"7410410123\",,, [10], [6, 7, 8]], [,, \"(?:6(?:(?:0(?:0[0-3569]|26|33)|2(?:[06]\\\\d|3[02589]|8[0-479]|9[0-79])|9(?:0[019]|13))\\\\d|1279|3(?:(?:0[0-79]|6[0-4679]|7[0-24-9]|[89]\\\\d)\\\\d|5(?:0[0-6]|[1-9]\\\\d)))|7(?:(?:0\\\\d\\\\d|19[0-5])\\\\d|2(?:(?:[0235-79]\\\\d|[14][017-9])\\\\d|8(?:[0-59]\\\\d|[6-8][089]))|3(?:(?:[05-8]\\\\d|3[017-9])\\\\d|1(?:[089]\\\\d|11|7[02-8])|2(?:[0-49][089]|[5-8]\\\\d)|4(?:[07-9]\\\\d|11)|9(?:[016-9]\\\\d|[2-5][089]))|4(?:0\\\\d\\\\d|1(?:[015-9]\\\\d|[2-4][089])|[29](?:[0-7][089]|[89]\\\\d)|3(?:[0-8][089]|9\\\\d)|[47](?:[089]\\\\d|11|7[02-8])|[56]\\\\d[089]|8(?:[0-24-7][089]|[389]\\\\d))|5(?:(?:[0346-8]\\\\d|5[017-9])\\\\d|1(?:[07-9]\\\\d|11)|2(?:[04-9]\\\\d|[1-3][089])|9(?:[0-6][089]|[7-9]\\\\d))|6(?:0(?:[0-47]\\\\d|[5689][089])|(?:1[0-257-9]|[6-9]\\\\d)\\\\d|2(?:[0-4]\\\\d|[5-9][089])|3(?:[02-8][089]|[19]\\\\d)|4\\\\d[089]|5(?:[0-367][089]|[4589]\\\\d))|7(?:0(?:0[02-9]|[13-7][089]|[289]\\\\d)|[1-9]\\\\d\\\\d)|8(?:[0-79]\\\\d\\\\d|8(?:[089]\\\\d|11|7[02-9]))|9(?:[089]\\\\d\\\\d|313|7(?:[02-8]\\\\d|9[07-9])))|8(?:0(?:(?:[01589]\\\\d|6[67])\\\\d|7(?:[02-8]\\\\d|9[04-9]))|1(?:[0-57-9]\\\\d\\\\d|6(?:[089]\\\\d|7[02-8]))|2(?:[014](?:[089]\\\\d|7[02-8])|[235-9]\\\\d\\\\d)|3(?:[03-57-9]\\\\d\\\\d|[126](?:[089]\\\\d|7[02-8]))|[45]\\\\d{3}|6(?:[02457-9]\\\\d\\\\d|[136](?:[089]\\\\d|7[02-8]))|7(?:(?:0[07-9]|[1-69]\\\\d)\\\\d|[78](?:[089]\\\\d|7[02-8]))|8(?:[0-25-9]\\\\d\\\\d|3(?:[089]\\\\d|7[02-8])|4(?:[0489]\\\\d|7[02-8]))|9(?:[02-9]\\\\d\\\\d|1(?:[0289]\\\\d|7[02-8])))|9\\\\d{4})\\\\d{5}\",,,, \"8123456789\",,, [10]], [,, \"(?:00800\\\\d|1(?:600|80[03]\\\\d{3}))\\\\d{6}|1800\\\\d{4,8}\",,,, \"1800123456\"], [,, \"186[12]\\\\d{9}\",,,, \"1861123456789\",,, [13]], [,, \"1860\\\\d{7}\",,,, \"18603451234\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IN\", 91, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{7})\", \"$1\", [\"575\"]], [, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],,, 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"],,, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\", \"1(?:2(?:[0-24]|9[2-7])|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6(?:[058]|1[2-7])|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12[2-7]|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1[2-7]|[34][2-6])|4[47][2-7]|61[346]|88[0-8])|8(?:(?:16|2[014]|3[126]|6[136])[2-7]|7(?:0[2-6]|[78][2-7])|8(?:3[2-7]|4[235-7])|91[3-7])\", \"1(?:2(?:[0-24]|9[2-7])|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6(?:[058]|1[2-7])|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12(?:[2-6]|7[0-8])|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1(?:[2-6]|71)|[34][2-6])|4[47](?:[2-6]|7[19])|61[346]|88(?:[01][2-7]|[2-7]|82))|8(?:(?:16|2[014]|3[126]|6[136])(?:[2-6]|7[19])|7(?:0[2-6]|[78](?:[2-6]|7[19]))|8(?:3(?:[2-6]|7[19])|4(?:[2356]|7[19]))|91(?:[3-6]|7[19]))\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|[4-8])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5(?:[013-9]|2[2-7])))|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|(?:28[6-8]|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7])[2-7]|3(?:179|(?:2[0-49]|9[2-57])[2-7]))|807(?:1|9[1-3])\"], \"0$1\",, 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"0\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"],,, 1]], [[, \"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],,, 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"],,, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\", \"1(?:2(?:[0-24]|9[2-7])|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6(?:[058]|1[2-7])|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12[2-7]|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1[2-7]|[34][2-6])|4[47][2-7]|61[346]|88[0-8])|8(?:(?:16|2[014]|3[126]|6[136])[2-7]|7(?:0[2-6]|[78][2-7])|8(?:3[2-7]|4[235-7])|91[3-7])\", \"1(?:2(?:[0-24]|9[2-7])|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6(?:[058]|1[2-7])|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12(?:[2-6]|7[0-8])|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1(?:[2-6]|71)|[34][2-6])|4[47](?:[2-6]|7[19])|61[346]|88(?:[01][2-7]|[2-7]|82))|8(?:(?:16|2[014]|3[126]|6[136])(?:[2-6]|7[19])|7(?:0[2-6]|[78](?:[2-6]|7[19]))|8(?:3(?:[2-6]|7[19])|4(?:[2356]|7[19]))|91(?:[3-6]|7[19]))\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|[4-8])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5(?:[013-9]|2[2-7])))|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|(?:28[6-8]|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7])[2-7]|3(?:179|(?:2[0-49]|9[2-57])[2-7]))|807(?:1|9[1-3])\"], \"0$1\",, 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"],,, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"],,, 1]], [,,,,,,,,, [-1]],,, [,, \"(?:00800\\\\d|1(?:600|8(?:0[03]\\\\d\\\\d|6(?:0|[12]\\\\d\\\\d))\\\\d))\\\\d{6}|1800\\\\d{4,8}\"], [,, \"140\\\\d{7}\",,,, \"1409305260\",,, [10]],,, [,,,,,,,,, [-1]]],\n    IO: [, [,, \"3\\\\d{6}\",,,,,,, [7]], [,, \"37\\\\d{5}\",,,, \"3709100\"], [,, \"38\\\\d{5}\",,,, \"3801234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IO\", 246, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    IQ: [, [,, \"(?:1|[2-6]\\\\d?|7\\\\d\\\\d)\\\\d{7}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\",,,, \"12345678\",,, [8, 9], [6, 7]], [,, \"7[3-9]\\\\d{8}\",,,, \"7912345678\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"IQ\", 964, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    IR: [, [,, \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",,,,,,, [4, 5, 6, 7, 10], [8]], [,, \"(?:(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])\\\\d{4}|94(?:(?:000|(?:11|2\\\\d)\\\\d|30[01])\\\\d|4(?:111|40\\\\d)))\\\\d{4}|(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[16]|[289]\\\\d?)\\\\d{3}\",,,, \"2123456789\",,, [6, 7, 10], [4, 5, 8]], [,, \"9(?:(?:0(?:[1-35]\\\\d|44)|(?:[13]\\\\d|2[0-2])\\\\d)\\\\d|9(?:(?:[01]\\\\d|44)\\\\d|510|8(?:1[01]|88)|9(?:0[013]|1[0134]|21|77|9[6-9])))\\\\d{5}\",,,, \"9123456789\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"993\\\\d{7}\",,,, \"9932123456\",,, [10]], \"IR\", 98, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"9(?:4(?:11[1-7]|440)\\\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))\",,,,,,, [4, 5, 10]], [,, \"96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])\",,,, \"9601\",,, [4, 5]],,, [,,,,,,,,, [-1]]],\n    IS: [, [,, \"(?:38\\\\d|[4-9])\\\\d{6}\",,,,,,, [7, 9]], [,, \"(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\\\d{4}\",,,, \"4101234\",,, [7]], [,, \"(?:38[589]\\\\d\\\\d|6(?:1[1-8]|2[0-6]|3[027-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\\\d)|7(?:5[057]|[6-8]\\\\d|9[0-3])|8(?:2[0-59]|[3469]\\\\d|5[1-9]|8[28]))\\\\d{4}\",,,, \"6111234\"], [,, \"800\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"90\\\\d{5}\",,,, \"9011234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"49\\\\d{5}\",,,, \"4921234\",,, [7]], \"IS\", 354, \"00|1(?:0(?:01|[12]0)|100)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"809\\\\d{4}\",,,, \"8091234\",,, [7]],,, [,, \"(?:689|8(?:7[0189]|80)|95[48])\\\\d{4}\",,,, \"6891234\",,, [7]]],\n    IT: [, [,, \"0\\\\d{6}(?:\\\\d{4})?|3[0-8]\\\\d{9}|(?:[0138]\\\\d?|55)\\\\d{8}|[08]\\\\d{5}(?:\\\\d{2})?\",,,,,,, [6, 7, 8, 9, 10, 11]], [,, \"0(?:(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d|6(?:[0-57-9]\\\\d\\\\d|6(?:[0-8]\\\\d|9[0-79])))\\\\d{1,6}\",,,, \"0212345678\"], [,, \"33\\\\d{9}|3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",,,, \"3123456789\",,, [9, 10, 11]], [,, \"80(?:0\\\\d{3}|3)\\\\d{3}\",,,, \"800123456\",,, [6, 9]], [,, \"(?:(?:0878|1(?:44|6[346])\\\\d)\\\\d\\\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\\\d\\\\d)\\\\d))\\\\d{3}|89[45][0-4]\\\\d\\\\d\",,,, \"899123456\",,, [6, 8, 9, 10]], [,, \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",,,, \"848123456\",,, [6, 9]], [,, \"1(?:78\\\\d|99)\\\\d{6}\",,,, \"1781234567\",,, [9, 10]], [,, \"55\\\\d{8}\",,,, \"5512345678\",,, [10]], \"IT\", 39, \"00\",,,,,,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"1(?:0|9[246])\", \"1(?:0|9(?:2[2-9]|[46]))\"]], [, \"(\\\\d{6})\", \"$1\", [\"1(?:1|92)\"]], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]], [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1[4679]|[38]\"]], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], [[, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]], [, \"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1[4679]|[38]\"]], [, \"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], [,,,,,,,,, [-1]], 1,, [,, \"848\\\\d{6}\",,,,,,, [9]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    JE: [, [,, \"(?:1534|(?:[3578]\\\\d|90)\\\\d\\\\d)\\\\d{6}\",,,,,,, [10], [6]], [,, \"1534[0-24-8]\\\\d{5}\",,,, \"1534456789\",,,, [6]], [,, \"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\",,,, \"7797712345\"], [,, \"80(?:07(?:35|81)|8901)\\\\d{4}\",,,, \"8007354567\"], [,, \"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",,,, \"9018105678\"], [,,,,,,,,, [-1]], [,, \"701511\\\\d{4}\",,,, \"7015115678\"], [,, \"56\\\\d{8}\",,,, \"5612345678\"], \"JE\", 44, \"00\", \"0\",,, \"0|([0-24-8]\\\\d{5})$\", \"1534$1\",,,,, [,, \"76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",,,, \"7640123456\"],,, [,,,,,,,,, [-1]], [,, \"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\",,,, \"5512345678\"],,, [,,,,,,,,, [-1]]],\n    JM: [, [,, \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"(?:658[2-9]\\\\d\\\\d|876(?:5(?:0[12]|1[0-46-8]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468])))\\\\d{4}\",,,, \"8765230123\",,,, [7]], [,, \"876(?:(?:2[14-9]|[348]\\\\d)\\\\d|5(?:0[3-9]|[2-57-9]\\\\d|6[0-24-9])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\\\d{4}\",,,, \"8762101234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"JM\", 1, \"011\", \"1\",,, \"1\",,,,,, [,,,,,,,,, [-1]],, \"658|876\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    JO: [, [,, \"(?:(?:(?:[268]|7\\\\d)\\\\d|32|53)\\\\d|900)\\\\d{5}\",,,,,,, [8, 9]], [,, \"(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:[029]0|7[08]))\\\\d{4}\",,,, \"62001234\",,, [8]], [,, \"7(?:55[0-49]|(?:7[025-9]|[89][0-25-9])\\\\d)\\\\d{5}\",,,, \"790123456\",,, [9]], [,, \"80\\\\d{6}\",,,, \"80012345\",,, [8]], [,, \"900\\\\d{5}\",,,, \"90012345\",,, [8]], [,, \"85\\\\d{6}\",,,, \"85012345\",,, [8]], [,, \"70\\\\d{7}\",,,, \"700123456\",,, [9]], [,,,,,,,,, [-1]], \"JO\", 962, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,, \"74(?:66|77)\\\\d{5}\",,,, \"746612345\",,, [9]],,, [,,,,,,,,, [-1]], [,, \"8(?:10|8\\\\d)\\\\d{5}\",,,, \"88101234\",,, [8]],,, [,,,,,,,,, [-1]]],\n    JP: [, [,, \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",,,,,,, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [,, \"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\",,,, \"312345678\",,, [9]], [,, \"[7-9]0[1-9]\\\\d{7}\",,,, \"9012345678\",,, [10]], [,, \"(?:00(?:(?:37|66)\\\\d{4,11}|777(?:[01]|(?:5|8\\\\d)\\\\d)|882[1245]\\\\d\\\\d)|(?:120|800\\\\d)\\\\d{4})\\\\d\\\\d\",,,, \"120123456\"], [,, \"990\\\\d{6}\",,,, \"990123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"60\\\\d{7}\",,,, \"601234567\",,, [9]], [,, \"50[1-9]\\\\d{7}\",,,, \"5012345678\",,, [10]], \"JP\", 81, \"010\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"007\", \"0077\", \"00777\", \"00777[01]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:[34]7|[56]9|74|9[14-79])|82[0367]|993\", \"2(?:[34]7|[56]9|74|9(?:1[02-689]|[4-79]))|82[0367]|993[0-25-9]\", \"2(?:[34]7|59(?:[02-8]|1[0-689]|9[0-8])|69|74|9(?:1[02-689]|[4-79]))|82[0367]|993[0-25-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:2[12]|3[0-269]|4[59]|5[0-468]|62|7[1-35]|8[16]|9[0238])|4(?:2[1-57]|3[0-57]|[45]|6[28]|7[259]|8[1-9]|9[29])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|9(?:4[15]|9[12489])\", \"2(?:2[12]|3[0-269]|4[59]|5(?:[04][01]|[1-3]|[68]1)|62|7[1-35]|8[16]|9(?:[028]|3[015-9]))|4(?:2(?:[13-57]|21)|3[0-57]|[45]|6[28]|7(?:2|[59][019])|8[1-9]|9[29])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|9(?:4[15]|9(?:[1289]|4[0178]))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|60|8(?:2[124589]|3[279]|49|6[0-24-689]|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93)\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|7[016-9])|49|6(?:[0-24]|5[0-3589]|[68][019]|9[01459])|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93[34])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9(?:[0169]|2[1-9]|4[1-3]))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|8[019]|9(?:[0145]|9[014-9]))|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93(?:31|4[357]))\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9(?:[019]|2[1-9]|4[1-3]|6(?:[0-47-9]|5[01346-9]|6[1-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|8[019]|9(?:[0145]|9[014-9]))|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93(?:31|4[357]))\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2[09]|7(?:0[019]|1))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3[3-8]|5[2-9])\", \"[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3(?:[3-6][2-9]|7|8[2-5])|5[2-9])\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\", \"$1-$2-$3\", [\"007\"]], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"008\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]|80\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\", \"$1-$2-$3\", [\"0\"]], [, \"(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\", \"$1-$2-$3\", [\"0\"]]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:[34]7|[56]9|74|9[14-79])|82[0367]|993\", \"2(?:[34]7|[56]9|74|9(?:1[02-689]|[4-79]))|82[0367]|993[0-25-9]\", \"2(?:[34]7|59(?:[02-8]|1[0-689]|9[0-8])|69|74|9(?:1[02-689]|[4-79]))|82[0367]|993[0-25-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:2[12]|3[0-269]|4[59]|5[0-468]|62|7[1-35]|8[16]|9[0238])|4(?:2[1-57]|3[0-57]|[45]|6[28]|7[259]|8[1-9]|9[29])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|9(?:4[15]|9[12489])\", \"2(?:2[12]|3[0-269]|4[59]|5(?:[04][01]|[1-3]|[68]1)|62|7[1-35]|8[16]|9(?:[028]|3[015-9]))|4(?:2(?:[13-57]|21)|3[0-57]|[45]|6[28]|7(?:2|[59][019])|8[1-9]|9[29])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|9(?:4[15]|9(?:[1289]|4[0178]))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|60|8(?:2[124589]|3[279]|49|6[0-24-689]|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93)\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|7[016-9])|49|6(?:[0-24]|5[0-3589]|[68][019]|9[01459])|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93[34])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9(?:[0169]|2[1-9]|4[1-3]))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|8[019]|9(?:[0145]|9[014-9]))|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93(?:31|4[357]))\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:3[014-9]|7)|5(?:5[0-69]|[68]0|7[015-9]|9)|64[016-9]|78[0189]|8(?:3[0134]|9[0-5])|917)|4(?:2(?:20|6|8[014-6]|9[178])|64|7[347])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9(?:[0-3]|[89][019]))|60|8(?:2(?:[1258]|4[0-39]|9(?:[019]|2[1-9]|4[1-3]|6(?:[0-47-9]|5[01346-9]|6[1-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|8[019]|9(?:[0145]|9[014-9]))|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|5[138]|6[1-3]|7[156]|8[189]|93(?:31|4[357]))\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2[09]|7(?:0[019]|1))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3[3-8]|5[2-9])\", \"[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3(?:[3-6][2-9]|7|8[2-5])|5[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]|80\"], \"0$1\"]], [,, \"20\\\\d{8}\",,,, \"2012345678\",,, [10]],,, [,, \"00(?:(?:37|66)\\\\d{4,11}|777(?:[01]|(?:5|8\\\\d)\\\\d)|882[1245]\\\\d\\\\d)\\\\d\\\\d\"], [,, \"570\\\\d{6}\",,,, \"570123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n    KE: [, [,, \"(?:(?:2|80)0\\\\d?|[4-7]\\\\d\\\\d|900)\\\\d{6}|[4-6]\\\\d{6,7}\",,,,,,, [7, 8, 9, 10]], [,, \"20\\\\d{6,7}|(?:4[0-6]|5\\\\d|6[0-24-9])\\\\d{7}|(?:4[0245]|6[014-9])\\\\d{6}|5[1-79]\\\\d{5,6}|(?:4[245]|6[01457-9])\\\\d{5}\",,,, \"202012345\",,, [7, 8, 9]], [,, \"7\\\\d{8}\",,,, \"712123456\",,, [9]], [,, \"800[24-8]\\\\d{5,6}\",,,, \"800223456\",,, [9, 10]], [,, \"900[02-9]\\\\d{5}\",,,, \"900223456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KE\", 254, \"000\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KG: [, [,, \"(?:[235-7]\\\\d|99)\\\\d{7}|800\\\\d{6,7}\",,,,,,, [9, 10], [5, 6]], [,, \"(?:3(?:1(?:[256]\\\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\",,,, \"312123456\",,, [9], [5, 6]], [,, \"(?:2(?:0[0-35]|2\\\\d)|5[0-24-7]\\\\d|7(?:[07]\\\\d|55)|99[69])\\\\d{6}\",,,, \"700123456\",,, [9]], [,, \"800\\\\d{6,7}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KG\", 996, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KH: [, [,, \"1\\\\d{9}|[1-9]\\\\d{7,8}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"(?:2(?:3(?:4(?:[2-4]|[56]\\\\d)|[568]\\\\d\\\\d)|[4-6](?:4[56]|[56]\\\\d)\\\\d)|(?:3[2-6]|4[2-4]|[5-7][2-5])(?:4[56]|[56]\\\\d)\\\\d)\\\\d{4}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])[236-9]\\\\d{5}\",,,, \"23756789\",,, [8, 9], [6, 7]], [,, \"(?:(?:(?:1[28]|9[67])\\\\d|8(?:[013-79]|8\\\\d))\\\\d|(?:2[3-6]|4[2-4]|[56][2-5])48|3(?:[18]\\\\d\\\\d|[2-6]48)|7(?:(?:[07-9]|[16]\\\\d)\\\\d|[2-5]48))\\\\d{5}|(?:1\\\\d|6[016-9]|9[0-57-9])\\\\d{6}\",,,, \"91234567\",,, [8, 9]], [,, \"1800(?:1\\\\d|2[019])\\\\d{4}\",,,, \"1800123456\",,, [10]], [,, \"1900(?:1\\\\d|2[09])\\\\d{4}\",,,, \"1900123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KH\", 855, \"00[14-9]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KI: [, [,, \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",,,,,,, [5, 8]], [,, \"(?:[24]\\\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\\\d\\\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\\\d{3}\",,,, \"31234\"], [,, \"(?:6(?:200[01]|30[01]\\\\d)|7(?:200[01]|3(?:0[0-5]\\\\d|140)))\\\\d{3}\",,,, \"72001234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"30(?:0[01]\\\\d\\\\d|12(?:11|20))\\\\d\\\\d\",,,, \"30010000\",,, [8]], \"KI\", 686, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KM: [, [,, \"[3478]\\\\d{6}\",,,,,,, [7]], [,, \"7[4-7]\\\\d{5}\",,,, \"7712345\"], [,, \"[34]\\\\d{6}\",,,, \"3212345\"], [,,,,,,,,, [-1]], [,, \"8\\\\d{6}\",,,, \"8001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KM\", 269, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KN: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\\\d{4}\",,,, \"8692361234\",,,, [7]], [,, \"869(?:5(?:5[6-8]|6[5-7])|66\\\\d|76[02-7])\\\\d{4}\",,,, \"8697652917\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"KN\", 1, \"011\", \"1\",,, \"1|([2-7]\\\\d{6})$\", \"869$1\",,,,, [,,,,,,,,, [-1]],, \"869\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KP: [, [,, \"(?:(?:19\\\\d|2)\\\\d|85)\\\\d{6}\",,,,,,, [8, 10], [6, 7]], [,, \"(?:2\\\\d|85)\\\\d{6}\",,,, \"21234567\",,, [8], [6, 7]], [,, \"19[1-3]\\\\d{7}\",,,, \"1921234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KP\", 850, \"00|99\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"2(?:[0-24-9]\\\\d\\\\d|3(?:[0-79]\\\\d|8[02-9]))\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KR: [, [,, \"(?:00[1-9]\\\\d{2,4}|[12]|5\\\\d{3})\\\\d{7}|(?:(?:00|[13-6])\\\\d|70)\\\\d{8}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}\",,,,,,, [5, 6, 8, 9, 10, 11, 12, 13, 14], [3, 4, 7]], [,, \"(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\\\d{2,3}\",,,, \"22123456\",,, [5, 6, 8, 9, 10], [3, 4, 7]], [,, \"1[0-26-9]\\\\d{7,8}\",,,, \"1000000000\",,, [9, 10]], [,, \"(?:00(?:3(?:08|68\\\\d)|798\\\\d{1,3})|80\\\\d)\\\\d{6}\",,,, \"801234567\",,, [9, 11, 12, 13, 14]], [,, \"60[2-9]\\\\d{6}\",,,, \"602345678\",,, [9]], [,,,,,,,,, [-1]], [,, \"50\\\\d{8,9}\",,,, \"5012345678\",,, [10, 11]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], \"KR\", 82, \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"0\",,, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\",,,, [[, \"(\\\\d{5})\", \"$1\", [\"1[016-9]1\", \"1[016-9]11\", \"1[016-9]114\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"003\", \"0030\"]], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [, \"(\\\\d{5})(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]], [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\", \"0$CC-$1\"]], [,, \"15\\\\d{7,8}\",,,, \"1523456789\",,, [9, 10]],,, [,, \"00(?:3(?:08|68\\\\d)|798\\\\d{1,3})\\\\d{6}\",,,,,,, [11, 12, 13, 14]], [,, \"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\\\\d{4}\",,,, \"15441234\",,, [8]],,, [,,,,,,,,, [-1]]],\n    KW: [, [,, \"(?:18|[2569]\\\\d\\\\d)\\\\d{5}\",,,,,,, [7, 8]], [,, \"2(?:[23]\\\\d\\\\d|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7]))\\\\d{4}\",,,, \"22345678\",,, [8]], [,, \"(?:5(?:(?:[05]\\\\d|1[0-7]|6[56])\\\\d|2(?:22|5[25]))|6(?:(?:0[034679]|5[015-9]|6\\\\d)\\\\d|222|7(?:0[013-9]|[67]\\\\d)|9(?:[069]\\\\d|3[039]))|9(?:(?:0[09]|22|4[01479]|55|6[0679]|8[057-9]|9\\\\d)\\\\d|11[01]|7(?:02|[1-9]\\\\d)))\\\\d{4}\",,,, \"50012345\",,, [8]], [,, \"18\\\\d{5}\",,,, \"1801234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"KW\", 965, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[25]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KY: [, [,, \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\\\d{4}\",,,, \"3452221234\",,,, [7]], [,, \"345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\\\d{4}\",,,, \"3453231234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"(?:345976|900[2-9]\\\\d\\\\d)\\\\d{4}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"KY\", 1, \"011\", \"1\",,, \"1|([2-9]\\\\d{6})$\", \"345$1\",,,,, [,, \"345849\\\\d{4}\",,,, \"3458491234\"],, \"345\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    KZ: [, [,, \"(?:33622|(?:7\\\\d|80)\\\\d{3})\\\\d{5}\",,,,,,, [10]], [,, \"(?:33622|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9])|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[2-4]\\\\d|5[139])|4(?:2\\\\d|3[1-35-9]|59)|5(?:[23]\\\\d|4[0-246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59))))\\\\d{5}\",,,, \"7123456789\"], [,, \"7(?:0[0-2578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\",,,, \"7710009998\"], [,, \"800\\\\d{7}\",,,, \"8001234567\"], [,, \"809\\\\d{7}\",,,, \"8091234567\"], [,,,,,,,,, [-1]], [,, \"808\\\\d{7}\",,,, \"8081234567\"], [,, \"751\\\\d{7}\",,,, \"7511234567\"], \"KZ\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",,,, [,,,,,,,,, [-1]],, \"33|7\", [,, \"751\\\\d{7}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LA: [, [,, \"(?:2\\\\d|3)\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",,,,,,, [8, 9, 10], [6]], [,, \"(?:2[13]|[35-7][14]|41|8[1468])\\\\d{6}\",,,, \"21212862\",,, [8], [6]], [,, \"20(?:[29]\\\\d|5[24-689]|7[6-8])\\\\d{6}\",,,, \"2023123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LA\", 856, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"3\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"30\\\\d{7}\",,,, \"301234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n    LB: [, [,, \"[7-9]\\\\d{7}|[13-9]\\\\d{6}\",,,,,,, [7, 8]], [,, \"(?:(?:[14-69]\\\\d|8[02-9])\\\\d|7(?:[2-57]\\\\d|62|8[0-7]|9[04-9]))\\\\d{4}\",,,, \"1123456\",,, [7]], [,, \"(?:(?:3|81)\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[1-3]))\\\\d{5}\",,,, \"71123456\"], [,,,,,,,,, [-1]], [,, \"9[01]\\\\d{6}\",,,, \"90123456\",,, [8]], [,, \"80\\\\d{6}\",,,, \"80123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LB\", 961, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LC: [, [,, \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"758(?:4(?:30|5\\\\d|6[2-9]|8[0-2])|57[0-2]|638)\\\\d{4}\",,,, \"7584305678\",,,, [7]], [,, \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[01]))\\\\d{4}\",,,, \"7582845678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"LC\", 1, \"011\", \"1\",,, \"1|([2-7]\\\\d{6})$\", \"758$1\",,,,, [,,,,,,,,, [-1]],, \"758\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LI: [, [,, \"(?:(?:[2378]|6\\\\d\\\\d)\\\\d|90)\\\\d{5}\",,,,,,, [7, 9]], [,, \"(?:2(?:01|1[27]|3\\\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\\\d{4}\",,,, \"2345678\",,, [7]], [,, \"(?:6(?:5(?:09|1\\\\d|20)|6(?:0[0-6]|10|2[06-9]|39))\\\\d|7(?:[37-9]\\\\d|42|56))\\\\d{4}\",,,, \"660234567\"], [,, \"80(?:02[28]|9\\\\d\\\\d)\\\\d\\\\d\",,,, \"8002222\",,, [7]], [,, \"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d\\\\d\",,,, \"9002222\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LI\", 423, \"00\", \"0\",,, \"0|(10(?:01|20|66))\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[237-9]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"870(?:28|87)\\\\d\\\\d\",,,, \"8702812\",,, [7]],,, [,, \"697(?:42|56|[78]\\\\d)\\\\d{4}\",,,, \"697861234\",,, [9]]],\n    LK: [, [,, \"(?:[1-7]\\\\d|[89]1)\\\\d{7}\",,,,,,, [9], [7]], [,, \"(?:[189]1|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\\\d{6}\",,,, \"112345678\",,,, [7]], [,, \"7[0-25-8]\\\\d{7}\",,,, \"712345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LK\", 94, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"1973\\\\d{5}\",,,, \"197312345\"],,, [,,,,,,,,, [-1]]],\n    LR: [, [,, \"(?:2|33|5\\\\d|77|88)\\\\d{7}|[45]\\\\d{6}\",,,,,,, [7, 8, 9]], [,, \"(?:2\\\\d{3}|33333)\\\\d{4}\",,,, \"21234567\",,, [8, 9]], [,, \"(?:(?:330|555|(?:77|88)\\\\d)\\\\d|4[67])\\\\d{5}|5\\\\d{6}\",,,, \"770123456\",,, [7, 9]], [,,,,,,,,, [-1]], [,, \"332(?:02|[34]\\\\d)\\\\d{4}\",,,, \"332021234\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LR\", 231, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LS: [, [,, \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",,,,,,, [8]], [,, \"2\\\\d{7}\",,,, \"22123456\"], [,, \"[56]\\\\d{7}\",,,, \"50123456\"], [,, \"800[256]\\\\d{4}\",,,, \"80021234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LS\", 266, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LT: [, [,, \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",,,,,,, [8]], [,, \"(?:3[1478]|4[124-6]|52)\\\\d{6}\",,,, \"31234567\"], [,, \"6\\\\d{7}\",,,, \"61234567\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"9(?:0[0239]|10)\\\\d{5}\",,,, \"90012345\"], [,, \"808\\\\d{5}\",,,, \"80812345\"], [,, \"700\\\\d{5}\",,,, \"70012345\"], [,,,,,,,,, [-1]], \"LT\", 370, \"00\", \"8\",,, \"[08]\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-79]\"], \"(8-$1)\",, 1], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\",, 1], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(8-$1)\",, 1], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(8-$1)\",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"70[67]\\\\d{5}\",,,, \"70712345\"],,, [,,,,,,,,, [-1]]],\n    LU: [, [,, \"[2457-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5(?:[013-9]\\\\d{1,8}|2\\\\d{1,3}))|6\\\\d{8}\",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11]], [,, \"(?:(?:2[2-9]|[457]\\\\d)\\\\d|3(?:[0-46-9]\\\\d|5[013-9])|8(?:0[2-9]|[13-9]\\\\d)|9(?:0[89]|[2-579]\\\\d))\\\\d{1,8}\",,,, \"27123456\"], [,, \"6(?:[269][18]|5[158]|7[189]|81)\\\\d{6}\",,,, \"628123456\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"90[015]\\\\d{5}\",,,, \"90012345\",,, [8]], [,, \"801\\\\d{5}\",,,, \"80112345\",,, [8]], [,,,,,,,,, [-1]], [,, \"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\",,,, \"20201234\",,, [4, 5, 6, 7, 8, 9, 10]], \"LU\", 352, \"00\",,,, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\",,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"2[2-9]|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"],, \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LV: [, [,, \"(?:[268]\\\\d|90)\\\\d{6}\",,,,,,, [8]], [,, \"6\\\\d{7}\",,,, \"63123456\"], [,, \"2\\\\d{7}\",,,, \"21234567\"], [,, \"80\\\\d{6}\",,,, \"80123456\"], [,, \"90\\\\d{6}\",,,, \"90123456\"], [,, \"81\\\\d{6}\",,,, \"81123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LV\", 371, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    LY: [, [,, \"(?:[2569]\\\\d|71)\\\\d{7}\",,,,,,, [9], [7]], [,, \"(?:2[13-5]|5[1347]|6[1-479]|71)\\\\d{7}\",,,, \"212345678\",,,, [7]], [,, \"9[1-6]\\\\d{7}\",,,, \"912345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"LY\", 218, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[25-79]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MA: [, [,, \"[5-8]\\\\d{8}\",,,,,,, [9]], [,, \"5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\",,,, \"520123456\"], [,, \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\\\d{6}\",,,, \"650123456\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,, \"89\\\\d{7}\",,,, \"891234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5924[01]\\\\d{4}\",,,, \"592401234\"], \"MA\", 212, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"5(?:29|38)\", \"5(?:29|38)[89]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|9)|892\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MC: [, [,, \"(?:(?:[349]|6\\\\d)\\\\d\\\\d|870)\\\\d{5}\",,,,,,, [8, 9]], [,, \"(?:870|9[2-47-9]\\\\d)\\\\d{5}\",,,, \"99123456\",,, [8]], [,, \"(?:(?:3|6\\\\d)\\\\d\\\\d|4(?:4\\\\d|5[1-9]))\\\\d{5}\",,,, \"612345678\"], [,, \"90\\\\d{6}\",,,, \"90123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MC\", 377, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[39]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[39]\"]], [, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,, \"870\\\\d{5}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MD: [, [,, \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",,,,,,, [8]], [,, \"(?:(?:2[1-9]|3[1-79])\\\\d|5(?:33|5[257]))\\\\d{5}\",,,, \"22212345\"], [,, \"(?:562|6\\\\d\\\\d|7(?:[189]\\\\d|6[07]|7[457-9]))\\\\d{5}\",,,, \"62112345\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"90[056]\\\\d{5}\",,,, \"90012345\"], [,, \"808\\\\d{5}\",,,, \"80812345\"], [,,,,,,,,, [-1]], [,, \"3[08]\\\\d{6}\",,,, \"30123456\"], \"MD\", 373, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"803\\\\d{5}\",,,, \"80312345\"],,, [,,,,,,,,, [-1]]],\n    ME: [, [,, \"(?:20|[3-79]\\\\d|80\\\\d?)\\\\d{6}\",,,,,,, [8, 9], [6]], [,, \"(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:[01][2467]|2[2-467]))\\\\d{5}\",,,, \"30234567\",,, [8], [6]], [,, \"6(?:00|3[024]|6[0-25]|[7-9]\\\\d)\\\\d{5}\",,,, \"67622901\",,, [8]], [,, \"80(?:[0-2578]|9\\\\d)\\\\d{5}\",,,, \"80080002\"], [,, \"9(?:4[1568]|5[178])\\\\d{5}\",,,, \"94515151\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"78[1-49]\\\\d{5}\",,,, \"78108780\",,, [8]], \"ME\", 382, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"77[1-9]\\\\d{5}\",,,, \"77273012\",,, [8]],,, [,,,,,,,,, [-1]]],\n    MF: [, [,, \"(?:590|69\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\",,,, \"590271234\"], [,, \"69(?:0\\\\d\\\\d|1(?:2[29]|3[0-5]))\\\\d{4}\",,,, \"690001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MF\", 590, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MG: [, [,, \"[23]\\\\d{8}\",,,,,,, [9], [7]], [,, \"20(?:(?:2\\\\d|4[47]|5[3467]|6[279]|8[268]|9[245])\\\\d|7(?:2[29]|[35]\\\\d))\\\\d{4}\",,,, \"202123456\",,,, [7]], [,, \"3[2-49]\\\\d{7}\",,,, \"321234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"22\\\\d{7}\",,,, \"221234567\"], \"MG\", 261, \"00\", \"0\",,, \"0|([24-9]\\\\d{6})$\", \"20$1\",,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MH: [, [,, \"(?:(?:[256]\\\\d|45)\\\\d|329)\\\\d{4}\",,,,,,, [7]], [,, \"(?:247|528|625)\\\\d{4}\",,,, \"2471234\"], [,, \"(?:(?:23|54)5|329|45[56])\\\\d{4}\",,,, \"2351234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"635\\\\d{4}\",,,, \"6351234\"], \"MH\", 692, \"011\", \"1\",,, \"1\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MK: [, [,, \"[2-578]\\\\d{7}\",,,,,,, [8], [6, 7]], [,, \"(?:2(?:[23]\\\\d|5[0-24578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\\\d{5}\",,,, \"22012345\",,,, [6, 7]], [,, \"7(?:(?:[0-25-8]\\\\d|3[2-4]|9[23])\\\\d|421)\\\\d{4}\",,,, \"72345678\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,, \"5[02-9]\\\\d{6}\",,,, \"50012345\"], [,, \"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\",,,, \"80123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MK\", 389, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ML: [, [,, \"(?:[246-9]\\\\d|50)\\\\d{6}\",,,,,,, [8]], [,, \"(?:2(?:0(?:2\\\\d|7[0-8])|1(?:2[67]|[4-689]\\\\d))|4(?:0[0-4]|4[1-39])\\\\d)\\\\d{4}\",,,, \"20212345\"], [,, \"(?:2(?:079|17\\\\d)|(?:50|[679]\\\\d|8[239])\\\\d\\\\d)\\\\d{4}\",,,, \"65012345\"], [,, \"80\\\\d{6}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ML\", 223, \"00\",,,,,,,, [[, \"(\\\\d{4})\", \"$1\", [\"67[057-9]|74[045]\", \"67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [,,,,,,,,, [-1]],,, [,, \"80\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MM: [, [,, \"(?:1|[24-7]\\\\d)\\\\d{5,7}|8\\\\d{6,9}|9(?:[0-46-9]\\\\d{6,8}|5\\\\d{6})|2\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10], [5]], [,, \"(?:1(?:(?:2\\\\d|3[56]|[89][0-6])\\\\d|4(?:2[2-469]|39|6[25]|7[01])|6)|2(?:2(?:00|8[34])|4(?:0\\\\d|2[246]|39|62|7[01])|51\\\\d\\\\d)|4(?:2(?:2\\\\d\\\\d|480)|3(?:20\\\\d|470|56)|420\\\\d|5470)|5(?:2(?:2\\\\d\\\\d?|470)|4(?:2(?:1|86)|470)|522\\\\d|7(?:20\\\\d|480)|[89](?:20\\\\d|470))|6(?:0(?:[23]|88\\\\d)|(?:124|42[04]|[56]2\\\\d)\\\\d|3(?:20\\\\d|470)|7(?:(?:3\\\\d|8[01459])\\\\d|4(?:39|[67]0)))|7(?:0470|1(?:20\\\\d?|470)|4(?:25\\\\d|470)|5(?:202|470|96\\\\d))|8(?:[13](?:2\\\\d\\\\d|470)|[25]2\\\\d\\\\d))\\\\d{4}|(?:(?:1[2-6]\\\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4]))\\\\d|25\\\\d{2,3}|8(?:[135]2\\\\d\\\\d|2(?:2\\\\d\\\\d|320)))\\\\d{3}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:1[2-689]|2[2-8]|3[24]|4[24-7]|5[245]|6[23]))\\\\d{4}\",,,, \"1234567\",,, [6, 7, 8, 9], [5]], [,, \"(?:17[01]|9(?:2(?:[0-4]|[56]\\\\d\\\\d)|(?:3(?:[0-36]|4\\\\d)|(?:6[89]|89)\\\\d|7(?:3|5[0-2]|[6-9]\\\\d))\\\\d|4(?:(?:[0245]\\\\d|[1379])\\\\d|88)|5[0-6]|9(?:[089]|[5-7]\\\\d\\\\d))\\\\d)\\\\d{4}|9[69]1\\\\d{6}|9[68]\\\\d{6}\",,,, \"92123456\",,, [7, 8, 9, 10]], [,, \"80080(?:[01][1-9]|2\\\\d)\\\\d{3}\",,,, \"8008001234\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:1(?:333|468)|2468)\\\\d{4}\",,,, \"13331234\",,, [8]], \"MM\", 95, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [, \"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MN: [, [,, \"[12]\\\\d{8,9}|[1257-9]\\\\d{7}\",,,,,,, [8, 9, 10], [4, 5, 6]], [,, \"(?:[12](?:1|2[1-37]|(?:3[2-8]|4[2-68]|5[1-4689])\\\\d?)|5[0568])\\\\d{6}|[12]2[1-3]\\\\d{5}\",,,, \"50123456\",,,, [4, 5, 6]], [,, \"(?:8(?:[05689]\\\\d|3[01])|9[013-9]\\\\d)\\\\d{5}\",,,, \"88123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"7[05-8]\\\\d{6}\",,,, \"75123456\",,, [8]], \"MN\", 976, \"001\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MO: [, [,, \"(?:28|[68]\\\\d)\\\\d{6}\",,,,,,, [8]], [,, \"(?:28[2-57-9]|8(?:11|[2-57-9]\\\\d))\\\\d{5}\",,,, \"28212345\"], [,, \"6(?:[2356]\\\\d\\\\d|8(?:[02][5-9]|[1478]\\\\d|[356][0-4]))\\\\d{4}\",,,, \"66123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MO\", 853, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MP: [, [,, \"(?:[58]\\\\d\\\\d|(?:67|90)0)\\\\d{7}\",,,,,,, [10], [7]], [,, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\",,,, \"6702345678\",,,, [7]], [,, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\",,,, \"6702345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"MP\", 1, \"011\", \"1\",,, \"1|([2-9]\\\\d{6})$\", \"670$1\",, 1,,, [,,,,,,,,, [-1]],, \"670\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MQ: [, [,, \"(?:596|69\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"596(?:0[0-7]|10|2[7-9]|3[05-9]|4[0-46-8]|[5-7]\\\\d|8[09]|9[4-8])\\\\d{4}\",,,, \"596301234\"], [,, \"69(?:6(?:[0-47-9]\\\\d|5[0-6]|6[0-4])|727)\\\\d{4}\",,,, \"696201234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MQ\", 596, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[56]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MR: [, [,, \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",,,,,,, [8]], [,, \"(?:25[08]|35\\\\d|45[1-7])\\\\d{5}\",,,, \"35123456\"], [,, \"[2-4][0-46-9]\\\\d{6}\",,,, \"22123456\"], [,, \"800\\\\d{5}\",,,, \"80012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MR\", 222, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MS: [, [,, \"(?:(?:[58]\\\\d\\\\d|900)\\\\d\\\\d|66449)\\\\d{5}\",,,,,,, [10], [7]], [,, \"664491\\\\d{4}\",,,, \"6644912345\",,,, [7]], [,, \"66449[2-6]\\\\d{4}\",,,, \"6644923456\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"MS\", 1, \"011\", \"1\",,, \"1|(4\\\\d{6})$\", \"664$1\",,,,, [,,,,,,,,, [-1]],, \"664\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MT: [, [,, \"(?:(?:[2579]\\\\d\\\\d|800)\\\\d|3550)\\\\d{4}\",,,,,,, [8]], [,, \"2(?:0(?:[169]\\\\d|3[1-4])|[1-357]\\\\d\\\\d)\\\\d{4}\",,,, \"21001234\"], [,, \"(?:7(?:210|[79]\\\\d\\\\d)|9(?:2(?:1[01]|31)|69[67]|8(?:1[1-3]|89|97)|9\\\\d\\\\d))\\\\d{4}\",,,, \"96961234\"], [,, \"800[3467]\\\\d{4}\",,,, \"80071234\"], [,, \"5(?:0(?:0(?:37|43)|(?:6\\\\d|70|9[0168])\\\\d)|[12]\\\\d0[1-5])\\\\d{3}\",,,, \"50037123\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3550\\\\d{4}\",,,, \"35501234\"], \"MT\", 356, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]],, [,, \"7117\\\\d{4}\",,,, \"71171234\"],,, [,,,,,,,,, [-1]], [,, \"501\\\\d{5}\",,,, \"50112345\"],,, [,,,,,,,,, [-1]]],\n    MU: [, [,, \"(?:[2-468]|5\\\\d)\\\\d{6}\",,,,,,, [7, 8]], [,, \"(?:2(?:[03478]\\\\d|1[0-7]|6[0-79])|4(?:[013568]\\\\d|2[4-7])|54(?:4\\\\d|71)|6\\\\d\\\\d|8(?:14|3[129]))\\\\d{4}\",,,, \"54480123\"], [,, \"5(?:(?:2[589]|7\\\\d|9[0-8])\\\\d|4(?:2[1-389]|[489]\\\\d|7[1-9])|8(?:[0-689]\\\\d|7[15-8]))\\\\d{4}\",,,, \"52512345\",,, [8]], [,, \"80[0-2]\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"30\\\\d{5}\",,,, \"3012345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3(?:20|9\\\\d)\\\\d{4}\",,,, \"3201234\",,, [7]], \"MU\", 230, \"0(?:0|[24-7]0|3[03])\",,,,,, \"020\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"5\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MV: [, [,, \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",,,,,,, [7, 10]], [,, \"(?:3(?:0[0-3]|3[0-59])|6(?:[57][02468]|6[024-68]|8[024689]))\\\\d{4}\",,,, \"6701234\",,, [7]], [,, \"(?:46[46]|(?:7[2-9]|9[14-9])\\\\d)\\\\d{4}\",,,, \"7712345\",,, [7]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"900\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MV\", 960, \"0(?:0|19)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[3467]|9[14-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"4[05]0\\\\d{4}\",,,, \"4001234\",,, [7]],,, [,,,,,,,,, [-1]]],\n    MW: [, [,, \"1\\\\d{6}(?:\\\\d{2})?|(?:[23]1|77|88|99)\\\\d{7}\",,,,,,, [7, 9]], [,, \"(?:1[2-9]|21\\\\d\\\\d)\\\\d{5}\",,,, \"1234567\"], [,, \"(?:111|(?:77|88|99)\\\\d)\\\\d{6}\",,,, \"991234567\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"31\\\\d{7}\",,,, \"310123456\",,, [9]], \"MW\", 265, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[17-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MX: [, [,, \"(?:1\\\\d|[2-9])\\\\d{9}\",,,,,,, [10, 11], [7, 8]], [,, \"(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7}\",,,, \"2221234567\",,, [10], [7, 8]], [,, \"1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7}\",,,, \"12221234567\",,, [11]], [,, \"8(?:00|88)\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"900\\\\d{7}\",,,, \"9001234567\",,, [10]], [,, \"300\\\\d{7}\",,,, \"3001234567\",,, [10]], [,, \"500\\\\d{7}\",,,, \"5001234567\",,, [10]], [,,,,,,,,, [-1]], \"MX\", 52, \"0[09]\", \"01\",,, \"0[12]|04[45]([2-9]\\\\d{9})$\", \"1$1\", \"00\",, [[, \"(\\\\d{5})\", \"$1\", [\"53\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], \"01 $1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], \"01 $1\",, 1], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 $3 $4\", [\"1(?:33|5[56]|81)\"], \"044 $1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 $3 $4\", [\"1\"], \"044 $1\"]], [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], \"01 $1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], \"01 $1\",, 1], [, \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1(?:33|5[56]|81)\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MY: [, [,, \"(?:1\\\\d\\\\d?|3\\\\d|[4-9])\\\\d{7}\",,,,,,, [8, 9, 10], [6, 7]], [,, \"(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\\\d|9[0-57])\\\\d|4(?:2[0-689]|[3-79]\\\\d|8[1-35689])|5(?:2[0-589]|[3468]\\\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\\\d|[3489][0-8]))\\\\d{5}\",,,, \"323856789\",,, [8, 9], [6, 7]], [,, \"1(?:(?:0(?:[23568]\\\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\\\d\\\\d|6(?:0[5-9]|[1-9]\\\\d))|(?:[23679][2-9]|59\\\\d)\\\\d)\\\\d|4(?:[235-9]\\\\d\\\\d|400)|8(?:(?:1[23]|[236]\\\\d|5[7-9]|7[016-9]|9[0-8])\\\\d|4(?:[06]\\\\d|7[0-4])|8(?:[01]\\\\d|[27][0-4])))\\\\d{4}\",,,, \"123456789\",,, [9, 10]], [,, \"1[378]00\\\\d{6}\",,,, \"1300123456\",,, [10]], [,, \"1600\\\\d{6}\",,,, \"1600123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"154(?:6(?:0\\\\d|1[0-3])|8(?:[25]1|4[0189]|7[0-4679]))\\\\d{4}\",,,, \"1546012345\",,, [10]], \"MY\", 60, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[0249]|[367][2-9]|8[1-9])|8\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1[36-8]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    MZ: [, [,, \"(?:2|8\\\\d)\\\\d{7}\",,,,,,, [8, 9]], [,, \"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\",,,, \"21123456\",,, [8]], [,, \"8[2-7]\\\\d{7}\",,,, \"821234567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"MZ\", 258, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-7]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NA: [, [,, \"[68]\\\\d{7,8}\",,,,,,, [8, 9]], [,, \"6(?:1(?:[02-4]\\\\d\\\\d|17)|2(?:17|54\\\\d|69|70)|3(?:17|2[0237]\\\\d|34|6[289]|7[01]|81)|4(?:17|(?:27|41|5[25])\\\\d|69|7[01])|5(?:17|2[236-8]\\\\d|69|7[01])|6(?:17|26\\\\d|38|42|69|7[01])|7(?:17|(?:2[2-4]|30)\\\\d|6[89]|7[01]))\\\\d{4}|6(?:1(?:2[2-7]|3[01378]|4[0-4]|69|7[014])|25[0-46-8]|32\\\\d|4(?:2[0-27]|4[016]|5[0-357])|52[02-9]|62[56]|7(?:2[2-69]|3[013]))\\\\d{4}\",,,, \"61221234\"], [,, \"(?:60|8[1245])\\\\d{7}\",,,, \"811234567\",,, [9]], [,, \"80\\\\d{7}\",,,, \"800123456\",,, [9]], [,, \"8701\\\\d{5}\",,,, \"870123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"8(?:3\\\\d\\\\d|86)\\\\d{5}\",,,, \"88612345\"], \"NA\", 264, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NC: [, [,, \"[2-57-9]\\\\d{5}\",,,,,,, [6]], [,, \"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\",,,, \"201234\"], [,, \"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\",,,, \"751234\"], [,,,,,,,,, [-1]], [,, \"36\\\\d{4}\",,,, \"366711\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NC\", 687, \"00\",,,,,,,, [[, \"(\\\\d{3})\", \"$1\", [\"5[6-8]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[2-57-9]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[2-57-9]\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NE: [, [,, \"[0289]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:0(?:20|3[1-7]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\",,,, \"20201234\"], [,, \"(?:8[04589]|9\\\\d)\\\\d{6}\",,,, \"93123456\"], [,, \"08\\\\d{6}\",,,, \"08123456\"], [,, \"09\\\\d{6}\",,,, \"09123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NE\", 227, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[01]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NF: [, [,, \"[13]\\\\d{5}\",,,,,,, [6], [5]], [,, \"(?:1(?:06|17|28|39)|3[0-2]\\\\d)\\\\d{3}\",,,, \"106609\",,,, [5]], [,, \"3[58]\\\\d{4}\",,,, \"381234\",,,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NF\", 672, \"00\",,,, \"([0-258]\\\\d{4})$\", \"3$1\",,, [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"3\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NG: [, [,, \"[78]\\\\d{10,13}|[7-9]\\\\d{9}|[1-9]\\\\d{7}|[124-7]\\\\d{6}\",,,,,,, [7, 8, 10, 11, 12, 13, 14], [5, 6]], [,, \"(?:(?:[1-356]\\\\d|4[02-8]|7[0-79]|8[2-9])\\\\d|9(?:0[3-9]|[1-9]\\\\d))\\\\d{5}|(?:[12]\\\\d|4[147]|5[14579]|6[1578]|7[0-3578])\\\\d{5}\",,,, \"18040123\",,, [7, 8], [5, 6]], [,, \"(?:70(?:[1-689]\\\\d|7[0-3])|8(?:0(?:1[01]|[2-9]\\\\d)|1(?:[0-8]\\\\d|9[01]))|90[235-9]\\\\d)\\\\d{6}\",,,, \"8021234567\",,, [10]], [,, \"800\\\\d{7,11}\",,,, \"80017591759\",,, [10, 11, 12, 13, 14]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NG\", 234, \"009\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-7]|8[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"700\\\\d{7,11}\",,,, \"7001234567\",,, [10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]]],\n    NI: [, [,, \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",,,,,,, [8]], [,, \"2\\\\d{7}\",,,, \"21234567\"], [,, \"(?:5(?:5[0-7]|[78]\\\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\\\d)\\\\d)\\\\d{5}\",,,, \"81234567\"], [,, \"1800\\\\d{4}\",,,, \"18001234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NI\", 505, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NL: [, [,, \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8])|[89]\\\\d{0,3})\\\\d{6}|1\\\\d{4,5}\",,,,,,, [5, 6, 7, 8, 9, 10]], [,, \"(?:1(?:[035]\\\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\\\d\\\\d)\\\\d{6}\",,,, \"101234567\",,, [9]], [,, \"6[1-58]\\\\d{7}\",,,, \"612345678\",,, [9]], [,, \"800\\\\d{4,7}\",,,, \"8001234\",,, [7, 8, 9, 10]], [,, \"90[069]\\\\d{4,7}\",,,, \"9061234\",,, [7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:85|91)\\\\d{7}\",,,, \"851234567\",,, [9]], \"NL\", 31, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})\", \"$1\", [\"1[238]|[34]\"]], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"14\"]], [, \"(\\\\d{6})\", \"$1\", [\"1\"]], [, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-57-9]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-57-9]\"], \"0$1\"]], [,, \"66\\\\d{7}\",,,, \"662345678\",,, [9]],,, [,, \"140(?:1(?:[035]|[16-8]\\\\d)|2(?:[0346]|[259]\\\\d)|3(?:[03568]|[124]\\\\d)|4(?:[0356]|[17-9]\\\\d)|5(?:[0358]|[124679]\\\\d)|7\\\\d|8[458])\",,,,,,, [5, 6]], [,, \"140(?:1(?:[035]|[16-8]\\\\d)|2(?:[0346]|[259]\\\\d)|3(?:[03568]|[124]\\\\d)|4(?:[0356]|[17-9]\\\\d)|5(?:[0358]|[124679]\\\\d)|7\\\\d|8[458])|8[478]\\\\d{7}\",,,, \"14020\",,, [5, 6, 9]],,, [,,,,,,,,, [-1]]],\n    NO: [, [,, \"(?:0|[2-9]\\\\d{3})\\\\d{4}\",,,,,,, [5, 8]], [,, \"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",,,, \"21234567\",,, [8]], [,, \"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",,,, \"40612345\",,, [8]], [,, \"80[01]\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"82[09]\\\\d{5}\",,,, \"82012345\",,, [8]], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",,,, \"81021234\",,, [8]], [,, \"880\\\\d{5}\",,,, \"88012345\",,, [8]], [,, \"85[0-5]\\\\d{5}\",,,, \"85012345\",,, [8]], \"NO\", 47, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[489]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-7]\"]]],, [,,,,,,,,, [-1]], 1, \"[02-689]|7[0-8]\", [,,,,,,,,, [-1]], [,, \"(?:0\\\\d|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\",,,, \"01234\"],,, [,, \"81[23]\\\\d{5}\",,,, \"81212345\",,, [8]]],\n    NP: [, [,, \"9\\\\d{9}|[1-9]\\\\d{7}\",,,,,,, [8, 10], [6, 7]], [,, \"(?:1[0-6]\\\\d|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-79])[2-6])\\\\d{5}\",,,, \"14567890\",,, [8], [6, 7]], [,, \"9(?:6[0-3]|7[245]|8[0-24-68])\\\\d{7}\",,,, \"9841234567\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NP\", 977, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"[1-8]|9(?:[1-579]|6[2-6])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NR: [, [,, \"(?:444|55\\\\d|888)\\\\d{4}\",,,,,,, [7]], [,, \"(?:444|888)\\\\d{4}\",,,, \"4441234\"], [,, \"55[4-9]\\\\d{4}\",,,, \"5551234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NR\", 674, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[458]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NU: [, [,, \"(?:[47]|888\\\\d)\\\\d{3}\",,,,,,, [4, 7]], [,, \"[47]\\\\d{3}\",,,, \"7012\",,, [4]], [,, \"888[4-9]\\\\d{3}\",,,, \"8884012\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"NU\", 683, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    NZ: [, [,, \"[28]\\\\d{7,9}|[346]\\\\d{7}|(?:508|[79]\\\\d)\\\\d{6,7}\",,,,,,, [8, 9, 10], [7]], [,, \"(?:24099|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{3})\\\\d{3}\",,,, \"32345678\",,, [8], [7]], [,, \"2(?:[0-28]\\\\d?|[79])\\\\d{7}|21\\\\d{6}\",,,, \"211234567\"], [,, \"508\\\\d{6,7}|80\\\\d{6,8}\",,,, \"800123456\"], [,, \"90\\\\d{6,7}\",,,, \"900123456\",,, [8, 9]], [,,,,,,,,, [-1]], [,, \"70\\\\d{7}\",,,, \"701234567\",,, [9]], [,,,,,,,,, [-1]], \"NZ\", 64, \"0(?:0|161)\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[59]|80\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[028]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7|86\"], \"0$1\"]],, [,, \"[28]6\\\\d{6,7}\",,,, \"26123456\",,, [8, 9]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    OM: [, [,, \"(?:[279]\\\\d{3}|500|8007\\\\d?)\\\\d{4}\",,,,,,, [7, 8, 9]], [,, \"2[2-6]\\\\d{6}\",,,, \"23123456\",,, [8]], [,, \"(?:7[129]\\\\d|9(?:0[1-9]|[1-9]\\\\d))\\\\d{5}\",,,, \"92123456\",,, [8]], [,, \"(?:500|8007\\\\d?)\\\\d{4}\",,,, \"80071234\"], [,, \"900\\\\d{5}\",,,, \"90012345\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"OM\", 968, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[79]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PA: [, [,, \"(?:[1-57-9]|6\\\\d)\\\\d{6}\",,,,,,, [7, 8]], [,, \"(?:1(?:0\\\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|[68][58]|7[0167]|9[39])|2(?:[0235-79]\\\\d|1[0-7]|4[013-9]|8[026-9])|3(?:[089]\\\\d|1[014-7]|2[0-35]|33|4[0-579]|55|6[068]|7[06-8])|4(?:00|3[0-579]|4\\\\d|7[0-57-9])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[05]|7[0-24-9]|8[7-9]|90)|8(?:09|2[89]|3\\\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\\\d))\\\\d{4}\",,,, \"2001234\",,, [7]], [,, \"(?:1[16]1|21[89]|6(?:[02-9]\\\\d|1[0-6])\\\\d|8(?:1[01]|7[23]))\\\\d{4}\",,,, \"61234567\"], [,, \"800\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\\\d{4}\",,,, \"8601234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PA\", 507, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"6\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PE: [, [,, \"(?:[14-8]|9\\\\d)\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"(?:1\\\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\\\d{6}\",,,, \"11234567\",,, [8], [6, 7]], [,, \"9\\\\d{8}\",,,, \"912345678\",,, [9]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"805\\\\d{5}\",,,, \"80512345\",,, [8]], [,, \"801\\\\d{5}\",,,, \"80112345\",,, [8]], [,, \"80[24]\\\\d{5}\",,,, \"80212345\",,, [8]], [,,,,,,,,, [-1]], \"PE\", 51, \"19(?:1[124]|77|90)00\", \"0\", \" Anexo \",, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PF: [, [,, \"[48]\\\\d{7}|4\\\\d{5}\",,,,,,, [6, 8]], [,, \"4(?:[09][4-689]\\\\d|4)\\\\d{4}\",,,, \"40412345\"], [,, \"8[79]\\\\d{6}\",,,, \"87123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PF\", 689, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[48]\"]]],, [,,,,,,,,, [-1]],,, [,, \"44\\\\d{4}\",,,,,,, [6]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PG: [, [,, \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",,,,,,, [7, 8]], [,, \"(?:(?:3[0-2]|4[257]|5[34]|9[78])\\\\d|64[1-9]|77(?:[0-24]\\\\d|30)|85[02-46-9])\\\\d{4}\",,,, \"3123456\"], [,, \"(?:7(?:[0-689]\\\\d|75)|81\\\\d)\\\\d{5}\",,,, \"70123456\",,, [8]], [,, \"180\\\\d{4}\",,,, \"1801234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"2(?:0[0-47]|7[568])\\\\d{4}\",,,, \"2751234\",,, [7]], \"PG\", 675, \"00|140[1-3]\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PH: [, [,, \"(?:1800\\\\d{2,4}|2|[89]\\\\d{4})\\\\d{5}|[3-8]\\\\d{8}|[28]\\\\d{7}\",,,,,,, [6, 8, 9, 10, 11, 12, 13], [4, 5, 7]], [,, \"(?:2\\\\d(?:\\\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\\\d{3}|88(?:22\\\\d\\\\d|42))\\\\d{4}|8[2-8]\\\\d{7}\",,,, \"21234567\",,, [6, 8, 9, 10], [4, 5, 7]], [,, \"(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[235-9]|5[056]|6[5-7]|7[3-79]|89|9[4-9]))\\\\d{7}\",,,, \"9051234567\",,, [10]], [,, \"1800\\\\d{7,9}\",,,, \"180012345678\",,, [11, 12, 13]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PH\", 63, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PK: [, [,, \"(?:122|[24-8]\\\\d{4,5}|9(?:[013-9]\\\\d{2,4}|2(?:[01]\\\\d\\\\d|2(?:[025-8]\\\\d|1[01]))\\\\d))\\\\d{6}|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",,,,,,, [8, 9, 10, 11, 12], [5, 6, 7]], [,, \"2(?:(?:1[2-9]\\\\d|[25][2-9])\\\\d{6}|(?:3[2358]|4[2-4]|9[2-8])[2-9]\\\\d{5,6})|4(?:(?:[0146-9][2-9]|2[2-9]\\\\d)\\\\d{6}|5[3479][2-9]\\\\d{5,6})|5(?:(?:[1-35-7][2-9]|8[126]\\\\d)\\\\d{6}|4[2-467][2-9]\\\\d{5,6})|6(?:0[468][2-9]\\\\d{5,6}|[1-8][2-9]\\\\d{6})|7(?:[14][2-9]\\\\d{6}|2[236][2-9]\\\\d{5,6})|8(?:[16][2-9]\\\\d{6}|(?:2[2-689]|3[23578]|4[3478]|5[2356])[2-9]\\\\d{5,6})|9(?:1[2-9]\\\\d{6}|(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])[2-9]\\\\d{5,6})\",,,, \"2123456789\",,, [9, 10], [5, 6, 7, 8]], [,, \"3(?:[014]\\\\d|2[0-5]|3[0-7]|55|64)\\\\d{7}\",,,, \"3012345678\",,, [10]], [,, \"800\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"900\\\\d{5}\",,,, \"90012345\",,, [8]], [,,,,,,,,, [-1]], [,, \"122\\\\d{6}\",,,, \"122044444\",,, [9]], [,,,,,,,,, [-1]], \"PK\", 92, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356]))[2-9]|9(?:2(?:2[2-9]|[3-8])|(?:3[27-9]|4[2-6]|6[3569])[2-9]|9(?:[25-7][2-9]|8))\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\",,,, \"21111825888\",,, [11, 12]],,, [,,,,,,,,, [-1]]],\n    PL: [, [,, \"[1-9]\\\\d{6}(?:\\\\d{2})?|6\\\\d{5}(?:\\\\d{2})?\",,,,,,, [6, 7, 8, 9]], [,, \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])\\\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\\\\d{3}\",,,, \"123456789\",,, [7, 9]], [,, \"(?:45|5[0137]|6[069]|7[2389]|88)\\\\d{7}\",,,, \"512345678\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"70[01346-8]\\\\d{6}\",,,, \"701234567\",,, [9]], [,, \"801\\\\d{6}\",,,, \"801234567\",,, [9]], [,,,,,,,,, [-1]], [,, \"39\\\\d{7}\",,,, \"391234567\",,, [9]], \"PL\", 48, \"00\",,,,,,,, [[, \"(\\\\d{5})\", \"$1\", [\"19\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|64\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"39|45|5[0137]|6[0469]|7[02389]|8[08]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-8]|9[145]\"]]],, [,, \"64\\\\d{4,7}\",,,, \"641234567\"],,, [,,,,,,,,, [-1]], [,, \"804\\\\d{6}\",,,, \"804123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n    PM: [, [,, \"[45]\\\\d{5}\",,,,,,, [6]], [,, \"(?:4[1-3]|50)\\\\d{4}\",,,, \"430123\"], [,, \"(?:4[02-4]|5[05])\\\\d{4}\",,,, \"551234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PM\", 508, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PR: [, [,, \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",,,,,,, [10], [7]], [,, \"(?:787|939)[2-9]\\\\d{6}\",,,, \"7872345678\",,,, [7]], [,, \"(?:787|939)[2-9]\\\\d{6}\",,,, \"7872345678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"PR\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,,,,,,,,, [-1]],, \"787|939\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PS: [, [,, \"(?:(?:1\\\\d|5)\\\\d\\\\d|[2489]2)\\\\d{6}\",,,,,,, [8, 9, 10], [7]], [,, \"(?:22[2-47-9]|42[45]|82[01458]|92[369])\\\\d{5}\",,,, \"22234567\",,, [8], [7]], [,, \"5[69]\\\\d{7}\",,,, \"599123456\",,, [9]], [,, \"1800\\\\d{6}\",,,, \"1800123456\",,, [10]], [,,,,,,,,, [-1]], [,, \"1700\\\\d{6}\",,,, \"1700123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PS\", 970, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PT: [, [,, \"(?:[26-9]\\\\d|30)\\\\d{7}\",,,,,,, [9]], [,, \"2(?:[12]\\\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\\\d{6}\",,,, \"212345678\"], [,, \"9(?:[1-36]\\\\d\\\\d|480)\\\\d{5}\",,,, \"912345678\"], [,, \"80[02]\\\\d{6}\",,,, \"800123456\"], [,, \"(?:6(?:0[178]|4[68])\\\\d|76(?:0[1-57]|1[2-47]|2[237]))\\\\d{5}\",,,, \"760123456\"], [,, \"80(?:8\\\\d|9[1579])\\\\d{5}\",,,, \"808123456\"], [,, \"884[0-4689]\\\\d{5}\",,,, \"884123456\"], [,, \"30\\\\d{7}\",,,, \"301234567\"], \"PT\", 351, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[236-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"70(?:7\\\\d|8[17])\\\\d{5}\",,,, \"707123456\"],,, [,, \"600\\\\d{6}\",,,, \"600110000\"]],\n    PW: [, [,, \"(?:[25-8]\\\\d\\\\d|345|488|900)\\\\d{4}\",,,,,,, [7]], [,, \"(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\\\d{4}\",,,, \"2771234\"], [,, \"(?:6[2-4689]0|77\\\\d|88[0-4])\\\\d{4}\",,,, \"6201234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"PW\", 680, \"01[12]\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    PY: [, [,, \"(?:[2-46-9]\\\\d|5[0-8])\\\\d{7}|[2-9]\\\\d{5,7}\",,,,,,, [6, 7, 8, 9], [5]], [,, \"(?:2(?:1\\\\d|2[4-68]|7[15]|9[1-5])|5(?:[1-4]\\\\d|5[02-4])|6(?:1\\\\d|3[1-3]|44|7[1-46-8]))\\\\d{5,6}|3(?:(?:18|3[167]|4[2357]|51)\\\\d{5,6}|[289]\\\\d{5,7})|4(?:[1246-8]\\\\d{5,7}|(?:3[12]|5[13]|9[1-47])\\\\d{5,6})|7(?:[1-3]\\\\d{5,7}|(?:4[0-4]|6[1-578]|75|8[0-8])\\\\d{5,6})|8(?:[1-36]\\\\d{5,7}|58\\\\d{5,6})|[26]1\\\\d{5}\",,,, \"212345678\",,, [7, 8, 9], [5, 6]], [,, \"9(?:51|6[129]|[78][1-6]|9[1-5])\\\\d{6}\",,,, \"961456789\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"8700[0-4]\\\\d{4}\",,,, \"870012345\",,, [9]], \"PY\", 595, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6[347]|7[46-8]|85\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"[2-9]0\\\\d{4,7}\",,,, \"201234567\"],,, [,,,,,,,,, [-1]]],\n    QA: [, [,, \"(?:(?:2|[3-7]\\\\d)\\\\d\\\\d|800)\\\\d{4}\",,,,,,, [7, 8]], [,, \"4[04]\\\\d{6}\",,,, \"44123456\",,, [8]], [,, \"[35-7]\\\\d{7}\",,,, \"33123456\",,, [8]], [,, \"800\\\\d{4}\",,,, \"8001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"QA\", 974, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[126]|8\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]],, [,, \"2(?:[12]\\\\d|61)\\\\d{4}\",,,, \"2123456\",,, [7]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    RE: [, [,, \"(?:26|[68]\\\\d)\\\\d{7}\",,,,,,, [9]], [,, \"262\\\\d{6}\",,,, \"262161234\"], [,, \"69(?:2\\\\d\\\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[05]|6[0-26]|7[0-27]|8[0-38]|9[0-479]))\\\\d{4}\",,,, \"692123456\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,, \"89[1-37-9]\\\\d{6}\",,,, \"891123456\"], [,, \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\",,,, \"810123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RE\", 262, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[268]\"], \"0$1\"]],, [,,,,,,,,, [-1]], 1, \"262|69|8\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    RO: [, [,, \"(?:[237]\\\\d|[89]0)\\\\d{7}|[23]\\\\d{5}\",,,,,,, [6, 9]], [,, \"[23][13-6]\\\\d{7}|(?:2(?:19\\\\d|[3-6]\\\\d9)|31\\\\d\\\\d)\\\\d\\\\d\",,,, \"211234567\"], [,, \"7(?:(?:[02-7]\\\\d|8[03-8]|99)\\\\d|1(?:[01]\\\\d|20))\\\\d{5}\",,,, \"712034567\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"90[036]\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"801\\\\d{6}\",,,, \"801123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RO\", 40, \"00\", \"0\", \" int \",, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[237-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"37\\\\d{7}\",,,, \"372123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n    RS: [, [,, \"[127]\\\\d{6,11}|3(?:[0-79]\\\\d{5,10}|8(?:[02-9]\\\\d{4,9}|1\\\\d{4,5}))|6\\\\d{7,9}|800\\\\d{3,9}|90\\\\d{4,8}|7\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 11, 12], [4, 5]], [,, \"(?:1(?:[02-9][2-9]|1[1-9])\\\\d|2(?:[0-24-7][2-9]\\\\d|[389](?:0[2-9]|[2-9]\\\\d))|3(?:[0-8][2-9]\\\\d|9(?:0[2-9]|[2-9]\\\\d)))\\\\d{3,8}\",,,, \"10234567\",,, [7, 8, 9, 10, 11, 12], [4, 5, 6]], [,, \"6(?:[0-689]|7\\\\d)\\\\d{6,7}\",,,, \"601234567\",,, [8, 9, 10]], [,, \"800\\\\d{3,9}\",,,, \"80012345\"], [,, \"(?:78\\\\d|90[0169])\\\\d{3,7}\",,,, \"90012345\",,, [6, 7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RS\", 381, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"7[06]\\\\d{4,10}\",,,, \"700123456\"],,, [,,,,,,,,, [-1]]],\n    RU: [, [,, \"[347-9]\\\\d{9}\",,,,,,, [10], [7]], [,, \"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",,,, \"3011234567\",,,, [7]], [,, \"9\\\\d{9}\",,,, \"9123456789\"], [,, \"80[04]\\\\d{7}\",,,, \"8001234567\"], [,, \"80[39]\\\\d{7}\",,,, \"8091234567\"], [,,,,,,,,, [-1]], [,, \"808\\\\d{7}\",,,, \"8081234567\"], [,,,,,,,,, [-1]], \"RU\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"[0-79]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[3489]\"], \"8 ($1)\",, 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[3489]\"], \"8 ($1)\",, 1]], [,,,,,,,,, [-1]], 1, \"3[04-689]|[489]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    RW: [, [,, \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",,,,,,, [8, 9]], [,, \"(?:06|2[258]\\\\d)\\\\d{6}\",,,, \"250123456\"], [,, \"7[238]\\\\d{7}\",,,, \"720123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"900\\\\d{6}\",,,, \"900123456\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"RW\", 250, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SA: [, [,, \"(?:(?:[15]|8\\\\d)\\\\d|92)\\\\d{7}\",,,,,,, [9, 10], [7]], [,, \"1(?:1\\\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\",,,, \"112345678\",,, [9], [7]], [,, \"5(?:[013-689]\\\\d|7[0-36-8])\\\\d{6}\",,,, \"512345678\",,, [9]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"925\\\\d{6}\",,,, \"925012345\",,, [9]], [,, \"920\\\\d{6}\",,,, \"920012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SA\", 966, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"811\\\\d{7}\",,,, \"8110123456\",,, [10]],,, [,,,,,,,,, [-1]]],\n    SB: [, [,, \"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",,,,,,, [5, 7]], [,, \"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\",,,, \"40123\",,, [5]], [,, \"(?:48|(?:(?:7[1-9]|8[4-9])\\\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\\\d)\\\\d{3}\",,,, \"7421234\"], [,, \"1[38]\\\\d{3}\",,,, \"18123\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5[12]\\\\d{3}\",,,, \"51123\",,, [5]], \"SB\", 677, \"0[01]\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SC: [, [,, \"(?:(?:[249]\\\\d|64)\\\\d\\\\d|8000)\\\\d{3}\",,,,,,, [7]], [,, \"4[2-46]\\\\d{5}\",,,, \"4217123\"], [,, \"2[5-8]\\\\d{5}\",,,, \"2510123\"], [,, \"8000\\\\d{3}\",,,, \"8000000\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:64\\\\d|9(?:5\\\\d|71))\\\\d{4}\",,,, \"6412345\"], \"SC\", 248, \"0(?:[02]|10?)\",,,,,, \"00\",, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SD: [, [,, \"[19]\\\\d{8}\",,,,,,, [9]], [,, \"1(?:5[3-7]|8[35-7])\\\\d{6}\",,,, \"153123456\"], [,, \"(?:1[0-2]|9[0-3569])\\\\d{7}\",,,, \"911231234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SD\", 249, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SE: [, [,, \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",,,,,,, [6, 7, 8, 9, 10, 12]], [,, \"1(?:0[1-8]\\\\d{6}|(?:[13689]\\\\d|2[0-35]|4[0-4]|5[0-25-9]|7[13-6])\\\\d{5,6})|(?:2(?:[136]\\\\d|2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|[1356]\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01]))\\\\d{5,6}|4(?:[0246]\\\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\\\d{5,6})|6(?:[03]\\\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\\\d{5,6})|8\\\\d{6,8}|9(?:0[1-9]\\\\d{4,6}|(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\\\d{5,6})|(?:[12][136]|3[356])\\\\d{5}\",,,, \"8123456\",,, [7, 8, 9]], [,, \"7[02369]\\\\d{7}\",,,, \"701234567\",,, [9]], [,, \"20\\\\d{4,7}\",,,, \"20123456\",,, [6, 7, 8, 9]], [,, \"649\\\\d{6}|9(?:00|39|44)[1-8]\\\\d{3,6}\",,,, \"9001234567\",,, [7, 8, 9, 10]], [,, \"77[0-7]\\\\d{6}\",,,, \"771234567\",,, [9]], [,, \"75[1-8]\\\\d{6}\",,,, \"751234567\",,, [9]], [,,,,,,,,, [-1]], \"SE\", 46, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"7\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"20\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"9(?:00|39|44)\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"]], [, \"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1 $2 $3\", [\"9(?:00|39|44)\"]], [, \"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]]], [,, \"74[02-9]\\\\d{6}\",,,, \"740123456\",,, [9]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"(?:25[245]|67[3-68])\\\\d{9}\",,,, \"254123456789\",,, [12]]],\n    SG: [, [,, \"(?:1\\\\d{3}|[369]|7000|8(?:\\\\d{2})?)\\\\d{7}\",,,,,,, [8, 10, 11]], [,, \"6[1-9]\\\\d{6}\",,,, \"61234567\",,, [8]], [,, \"(?:8[1-8]|9[0-8])\\\\d{6}\",,,, \"81234567\",,, [8]], [,, \"(?:18|8)00\\\\d{7}\",,,, \"18001234567\",,, [10, 11]], [,, \"1900\\\\d{7}\",,,, \"19001234567\",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"3[12]\\\\d{6}\",,,, \"31234567\",,, [8]], \"SG\", 65, \"0[0-3]\\\\d\",,,,,,,, [[, \"(\\\\d{4,5})\", \"$1\", [\"1[0135-7]|77\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8[1-8]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8[1-8]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"7000\\\\d{7}\",,,, \"70001234567\",,, [11]],,, [,,,,,,,,, [-1]]],\n    SH: [, [,, \"(?:[256]\\\\d|8)\\\\d{3}\",,,,,,, [4, 5]], [,, \"2(?:[0-57-9]\\\\d|6[4-9])\\\\d\\\\d\",,,, \"22158\"], [,, \"[56]\\\\d{4}\",,,, \"51234\",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"262\\\\d\\\\d\",,,, \"26212\",,, [5]], \"SH\", 290, \"00\",,,,,,,,,, [,,,,,,,,, [-1]], 1, \"[256]\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SI: [, [,, \"[1-8]\\\\d{7}|90\\\\d{4,6}|8\\\\d{4,6}\",,,,,,, [5, 6, 7, 8]], [,, \"(?:[1-357][2-8]|4[24-8])\\\\d{6}\",,,, \"12345678\",,, [8], [7]], [,, \"(?:(?:[37][01]|4[0139]|51)\\\\d\\\\d|6(?:[48]\\\\d\\\\d|5(?:1\\\\d|55|[67]0)|9(?:10|[69]\\\\d)))\\\\d{4}\",,,, \"31234567\",,, [8]], [,, \"80\\\\d{4,6}\",,,, \"80123456\",,, [6, 7, 8]], [,, \"89[1-3]\\\\d{2,5}|90\\\\d{4,6}\",,,, \"90123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:59\\\\d\\\\d|8(?:1(?:[67]\\\\d|8[01389])|2(?:0\\\\d|2[0378]|8[0-2489])|3[389]\\\\d))\\\\d{4}\",,,, \"59012345\",,, [8]], \"SI\", 386, \"00|10(?:22|66|88|99)\", \"0\",,, \"0\",, \"00\",, [[, \"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SJ: [, [,, \"(?:0|(?:[4589]\\\\d|79)\\\\d\\\\d)\\\\d{4}\",,,,,,, [5, 8]], [,, \"79\\\\d{6}\",,,, \"79123456\",,, [8]], [,, \"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",,,, \"41234567\",,, [8]], [,, \"80[01]\\\\d{5}\",,,, \"80012345\",,, [8]], [,, \"82[09]\\\\d{5}\",,,, \"82012345\",,, [8]], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",,,, \"81021234\",,, [8]], [,, \"880\\\\d{5}\",,,, \"88012345\",,, [8]], [,, \"85[0-5]\\\\d{5}\",,,, \"85012345\",,, [8]], \"SJ\", 47, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"79\", [,,,,,,,,, [-1]], [,, \"(?:0\\\\d|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\",,,, \"01234\"],,, [,, \"81[23]\\\\d{5}\",,,, \"81212345\",,, [8]]],\n    SK: [, [,, \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",,,,,,, [6, 7, 9]], [,, \"(?:2(?:16|[2-9]\\\\d{3})|[3-5][1-8]\\\\d{3})\\\\d{4}|(?:2|[3-5][1-8])1[67]\\\\d{3}|[3-5][1-8]16\\\\d\\\\d\",,,, \"221234567\"], [,, \"9(?:0(?:[1-8]\\\\d|9[1-9])|(?:1[0-24-9]|[45]\\\\d)\\\\d)\\\\d{5}\",,,, \"912123456\",,, [9]], [,, \"800\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"9(?:00|[78]\\\\d)\\\\d{6}\",,,, \"900123456\",,, [9]], [,, \"8[5-9]\\\\d{7}\",,,, \"850123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"6(?:02|5[0-4]|9[0-6])\\\\d{6}\",,,, \"690123456\",,, [9]], \"SK\", 421, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"909\", \"9090\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], [,, \"9090\\\\d{3}\",,,, \"9090123\",,, [7]],,, [,, \"(?:(?:602|8(?:00|[5-9]\\\\d))\\\\d{3}|9(?:0(?:0\\\\d{3}|90)|[78]\\\\d{4}))\\\\d{3}\",,,,,,, [7, 9]], [,, \"96\\\\d{7}\",,,, \"961234567\",,, [9]],,, [,,,,,,,,, [-1]]],\n    SL: [, [,, \"(?:[2-578]\\\\d|66|99)\\\\d{6}\",,,,,,, [8], [6]], [,, \"[235]2[2-4][2-9]\\\\d{4}\",,,, \"22221234\",,,, [6]], [,, \"(?:2[15]|3[013-5]|4[04]|5[05]|66|7[5-9]|8[08]|99)\\\\d{6}\",,,, \"25123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SL\", 232, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[2-9]\"], \"(0$1)\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SM: [, [,, \"(?:0549|[5-7]\\\\d)\\\\d{6}\",,,,,,, [8, 10], [6]], [,, \"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\",,,, \"0549886377\",,, [10], [6]], [,, \"6[16]\\\\d{6}\",,,, \"66661212\",,, [8]], [,,,,,,,,, [-1]], [,, \"7[178]\\\\d{6}\",,,, \"71123456\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"5[158]\\\\d{6}\",,,, \"58001110\",,, [8]], \"SM\", 378, \"00\",,,, \"([89]\\\\d{5})$\", \"0549$1\",,, [[, \"(\\\\d{6})\", \"$1\", [\"[89]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SN: [, [,, \"(?:[378]\\\\d{4}|93330)\\\\d{4}\",,,,,,, [9]], [,, \"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\\\d{5}\",,,, \"301012345\"], [,, \"7(?:[06-8]\\\\d|21|90)\\\\d{6}\",,,, \"701234567\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,, \"88[4689]\\\\d{6}\",,,, \"884123456\"], [,, \"81[02468]\\\\d{6}\",,,, \"810123456\"], [,,,,,,,,, [-1]], [,, \"(?:3(?:392|9[01]\\\\d)\\\\d|93330)\\\\d{4}\",,,, \"933301234\"], \"SN\", 221, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SO: [, [,, \"[346-9]\\\\d{8}|[12679]\\\\d{7}|(?:[1-4]\\\\d|59)\\\\d{5}|[1348]\\\\d{5}\",,,,,,, [6, 7, 8, 9]], [,, \"(?:1\\\\d|2[0-79]|3[0-46-8]|4[0-7]|59)\\\\d{5}|(?:[134]\\\\d|8[125])\\\\d{4}\",,,, \"4012345\",,, [6, 7]], [,, \"(?:(?:15|(?:3[59]|4[89]|6[1-9]|79|8[08])\\\\d|9(?:0[67]|[2-9]))\\\\d|2(?:4\\\\d|8))\\\\d{5}|(?:6\\\\d|7[1-9])\\\\d{6}\",,,, \"71123456\",,, [7, 8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SO\", 252, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [, \"(\\\\d{6})\", \"$1\", [\"[134]\"]], [, \"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"1|2[0-79]|3[0-46-8]|4[0-7]|59\"]], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"24|[67]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[348]|64|79[0-8]|90\"]], [, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6[1-35-9]|799|9[2-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SR: [, [,, \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",,,,,,, [6, 7]], [,, \"(?:2[1-3]|3[0-7]|(?:4|68)\\\\d|5[2-58])\\\\d{4}\",,,, \"211234\"], [,, \"(?:7[124-7]|8[125-9])\\\\d{5}\",,,, \"7412345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"56\\\\d{4}\",,,, \"561234\",,, [6]], \"SR\", 597, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SS: [, [,, \"[19]\\\\d{8}\",,,,,,, [9]], [,, \"18\\\\d{7}\",,,, \"181234567\"], [,, \"(?:12|9[1257])\\\\d{7}\",,,, \"977123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SS\", 211, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ST: [, [,, \"(?:22|9\\\\d)\\\\d{5}\",,,,,,, [7]], [,, \"22\\\\d{5}\",,,, \"2221234\"], [,, \"9(?:0(?:0[5-9]|[1-9]\\\\d)|[89]\\\\d\\\\d)\\\\d{3}\",,,, \"9812345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ST\", 239, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SV: [, [,, \"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",,,,,,, [7, 8, 11]], [,, \"2[1-6]\\\\d{6}\",,,, \"21234567\",,, [8]], [,, \"[67]\\\\d{7}\",,,, \"70123456\",,, [8]], [,, \"800\\\\d{4}(?:\\\\d{4})?\",,,, \"8001234\",,, [7, 11]], [,, \"900\\\\d{4}(?:\\\\d{4})?\",,,, \"9001234\",,, [7, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SV\", 503, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SX: [, [,, \"(?:(?:[58]\\\\d\\\\d|900)\\\\d|7215)\\\\d{6}\",,,,,,, [10], [7]], [,, \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\",,,, \"7215425678\",,,, [7]], [,, \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\",,,, \"7215205678\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002123456\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"SX\", 1, \"011\", \"1\",,, \"1|(5\\\\d{6})$\", \"721$1\",,,,, [,,,,,,,,, [-1]],, \"721\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SY: [, [,, \"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",,,,,,, [8, 9], [6, 7]], [,, \"(?:1[14]\\\\d|2(?:1\\\\d?|[235])|3(?:[13]\\\\d|4)|4[13]|5[1-3])\\\\d{6}|1[1-356]\\\\d{6}\",,,, \"112345678\",,,, [6, 7]], [,, \"9(?:22|[3-589]\\\\d|6[024-9])\\\\d{6}\",,,, \"944567890\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"SY\", 963, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    SZ: [, [,, \"(?:0800|(?:[237]\\\\d|900)\\\\d\\\\d)\\\\d{4}\",,,,,,, [8, 9]], [,, \"[23][2-5]\\\\d{6}\",,,, \"22171234\",,, [8]], [,, \"7[6-9]\\\\d{6}\",,,, \"76123456\",,, [8]], [,, \"0800\\\\d{4}\",,,, \"08001234\",,, [8]], [,, \"900\\\\d{6}\",,,, \"900012345\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"70\\\\d{6}\",,,, \"70012345\",,, [8]], \"SZ\", 268, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]],, [,,,,,,,,, [-1]],,, [,, \"0800\\\\d{4}\",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TA: [, [,, \"8\\\\d{3}\",,,,,,, [4]], [,, \"8\\\\d{3}\",,,, \"8999\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TA\", 290, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"8\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TC: [, [,, \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"649(?:712|9(?:4\\\\d|50))\\\\d{4}\",,,, \"6497121234\",,,, [7]], [,, \"649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\\\d{4}\",,,, \"6492311234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,, \"64971[01]\\\\d{4}\",,,, \"6497101234\",,,, [7]], \"TC\", 1, \"011\", \"1\",,, \"1|([2-479]\\\\d{6})$\", \"649$1\",,,,, [,,,,,,,,, [-1]],, \"649\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TD: [, [,, \"(?:22|[69]\\\\d|77)\\\\d{6}\",,,,,,, [8]], [,, \"22(?:[37-9]0|5[0-5]|6[89])\\\\d{4}\",,,, \"22501234\"], [,, \"(?:6[023568]|77|9\\\\d)\\\\d{6}\",,,, \"63012345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TD\", 235, \"00|16\",,,,,, \"00\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2679]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TG: [, [,, \"[279]\\\\d{7}\",,,,,,, [8]], [,, \"2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\\\d{5}\",,,, \"22212345\"], [,, \"(?:7[09]|9[0-36-9])\\\\d{6}\",,,, \"90112345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TG\", 228, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TH: [, [,, \"(?:1\\\\d\\\\d?|[2-57]|[689]\\\\d)\\\\d{7}\",,,,,,, [8, 9, 10]], [,, \"(?:2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\",,,, \"21234567\",,, [8]], [,, \"(?:14|6[1-6]|[89]\\\\d)\\\\d{7}\",,,, \"812345678\",,, [9]], [,, \"1800\\\\d{6}\",,,, \"1800123456\",,, [10]], [,, \"1900\\\\d{6}\",,,, \"1900123456\",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"6[08]\\\\d{7}\",,,, \"601234567\",,, [9]], \"TH\", 66, \"00[1-9]\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"14|[3-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TJ: [, [,, \"(?:[3-59]\\\\d|77|88)\\\\d{7}\",,,,,,, [9], [3, 5, 6, 7]], [,, \"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\",,,, \"372123456\",,,, [3, 5, 6, 7]], [,, \"(?:41[18]|(?:5[05]|77|88|9[0-35-9])\\\\d)\\\\d{6}\",,,, \"917123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TJ\", 992, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"],,, 1], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[34]7|91[78]\"],,, 1], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[457-9]\"],,, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TK: [, [,, \"[2-47]\\\\d{3,6}\",,,,,,, [4, 5, 6, 7]], [,, \"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\",,,, \"3101\"], [,, \"7[2-4]\\\\d{2,5}\",,,, \"7290\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TK\", 690, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TL: [, [,, \"(?:[2-4]\\\\d|7\\\\d\\\\d?|[89]0)\\\\d{5}\",,,,,,, [7, 8]], [,, \"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\",,,, \"2112345\",,, [7]], [,, \"7[3-8]\\\\d{6}\",,,, \"77212345\",,, [8]], [,, \"80\\\\d{5}\",,,, \"8012345\",,, [7]], [,, \"90\\\\d{5}\",,,, \"9012345\",,, [7]], [,,,,,,,,, [-1]], [,, \"70\\\\d{5}\",,,, \"7012345\",,, [7]], [,,,,,,,,, [-1]], \"TL\", 670, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TM: [, [,, \"[1-6]\\\\d{7}\",,,,,,, [8]], [,, \"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\",,,, \"12345678\"], [,, \"6[1-9]\\\\d{6}\",,,, \"66123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TM\", 993, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TN: [, [,, \"[2-57-9]\\\\d{7}\",,,,,,, [8]], [,, \"(?:(?:3[0-2]|7\\\\d)\\\\d{3}|81200)\\\\d{3}\",,,, \"30010123\"], [,, \"(?:(?:[259]\\\\d|4[0-6])\\\\d\\\\d|3(?:001|1(?:[1-35]\\\\d|40)|240|(?:6[0-4]|91)\\\\d))\\\\d{4}\",,,, \"20123456\"], [,, \"8010\\\\d{4}\",,,, \"80101234\"], [,, \"88\\\\d{6}\",,,, \"88123456\"], [,, \"8[12]10\\\\d{4}\",,,, \"81101234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TN\", 216, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TO: [, [,, \"(?:(?:080|[56])0|[2-4]\\\\d|[78]\\\\d(?:\\\\d{2})?)\\\\d{3}\",,,,,,, [5, 7]], [,, \"(?:2\\\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\\\d{3}\",,,, \"20123\",,, [5]], [,, \"(?:7[578]|8[46-9])\\\\d{5}\",,,, \"7715123\",,, [7]], [,, \"0800\\\\d{3}\",,,, \"0800222\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TO\", 676, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-6]|7[014]|8[05]\"]], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"7[578]|8\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TR: [, [,, \"(?:[2-58]\\\\d\\\\d|900)\\\\d{7}|4\\\\d{6}\",,,,,,, [7, 10]], [,, \"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\",,,, \"2123456789\",,, [10]], [,, \"5(?:(?:0[15-7]|1[06]|24|[34]\\\\d|5[1-59]|9[46])\\\\d\\\\d|6161)\\\\d{5}\",,,, \"5012345678\",,, [10]], [,, \"800\\\\d{7}\",,,, \"8001234567\",,, [10]], [,, \"(?:8[89]8|900)\\\\d{7}\",,,, \"9001234567\",,, [10]], [,,,,,,,,, [-1]], [,, \"592(?:21[12]|461)\\\\d{4}\",,,, \"5922121234\",,, [10]], [,,,,,,,,, [-1]], \"TR\", 90, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d)(\\\\d{3})\", \"$1 $2 $3\", [\"444\"],,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[0589]|90\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|616)\", \"5(?:[0-59]|6161)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\",, 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[0589]|90\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|616)\", \"5(?:[0-59]|6161)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\",, 1]], [,, \"512\\\\d{7}\",,,, \"5123456789\",,, [10]],,, [,, \"444\\\\d{4}\",,,,,,, [7]], [,, \"(?:444|850\\\\d{3})\\\\d{4}\",,,, \"4441444\"],,, [,,,,,,,,, [-1]]],\n    TT: [, [,, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"868(?:2(?:01|1[89]|[23]\\\\d)|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\",,,, \"8682211234\",,,, [7]], [,, \"868(?:2(?:6[6-9]|[7-9]\\\\d)|[37](?:0[1-9]|1[02-9]|[2-9]\\\\d)|4[6-9]\\\\d|6(?:20|78|8\\\\d))\\\\d{4}\",,,, \"8682911234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"TT\", 1, \"011\", \"1\",,, \"1|([2-46-8]\\\\d{6})$\", \"868$1\",,,,, [,,,,,,,,, [-1]],, \"868\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"868619\\\\d{4}\",,,, \"8686191234\",,,, [7]]],\n    TV: [, [,, \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",,,,,,, [5, 6, 7]], [,, \"2[02-9]\\\\d{3}\",,,, \"20123\",,, [5]], [,, \"(?:7[01]\\\\d|90)\\\\d{4}\",,,, \"901234\",,, [6, 7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"TV\", 688, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    TW: [, [,, \"(?:[24589]|7\\\\d)\\\\d{8}|[2-8]\\\\d{7}|2\\\\d{6}\",,,,,,, [7, 8, 9, 10]], [,, \"(?:(?:2[2-8]\\\\d|3[2-9]|4(?:[239]\\\\d|[78])|5[2-8]|6[235-79]|7[1-9])\\\\d\\\\d|8(?:2(?:3\\\\d|66)|[7-9]\\\\d\\\\d))\\\\d{4}|24\\\\d{6}\",,,, \"221234567\",,, [8, 9]], [,, \"9[0-8]\\\\d{7}\",,,, \"912345678\",,, [9]], [,, \"80[0-79]\\\\d{6}\",,,, \"800123456\",,, [9]], [,, \"20(?:[013-9]\\\\d\\\\d|2)\\\\d{4}\",,,, \"203123456\",,, [7, 9]], [,,,,,,,,, [-1]], [,, \"99\\\\d{7}\",,,, \"990123456\",,, [9]], [,, \"70\\\\d{8}\",,,, \"7012345678\",,, [10]], \"TW\", 886, \"0(?:0[25-79]|19)\", \"0\", \"#\",, \"0\",,,, [[, \"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25][2-8]|[346]|7[1-9]|8[27-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[258]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"50[0-46-9]\\\\d{6}\",,,, \"500123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n    TZ: [, [,, \"(?:[26-8]\\\\d|41|90)\\\\d{7}\",,,,,,, [9]], [,, \"2[2-8]\\\\d{7}\",,,, \"222345678\"], [,, \"(?:6[2-9]|7[13-9])\\\\d{7}\",,,, \"621234567\"], [,, \"80[08]\\\\d{6}\",,,, \"800123456\"], [,, \"90\\\\d{7}\",,,, \"900123456\"], [,, \"8(?:40|6[01])\\\\d{6}\",,,, \"840123456\"], [,,,,,,,,, [-1]], [,, \"41\\\\d{7}\",,,, \"412345678\"], \"TZ\", 255, \"00[056]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,, \"(?:8(?:[04]0|6[01])|90\\\\d)\\\\d{6}\"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    UA: [, [,, \"[3-9]\\\\d{8}\",,,,,,, [9], [5, 6, 7]], [,, \"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\",,,, \"311234567\",,,, [5, 6, 7]], [,, \"(?:39|50|6[36-8]|7[1-3]|9[1-9])\\\\d{7}\",,,, \"391234567\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,, \"900[2-49]\\\\d{5}\",,,, \"900212345\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"89[1-579]\\\\d{6}\",,,, \"891234567\"], \"UA\", 380, \"00\", \"0\",,, \"0\",, \"0~0\",, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|[89]0\", \"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|[89]0\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    UG: [, [,, \"(?:(?:[29]0|[347]\\\\d)\\\\d|800)\\\\d{6}\",,,,,,, [9], [5, 6, 7]], [,, \"(?:20(?:(?:(?:[0147]\\\\d|5[0-4]|8[0-2])\\\\d|2(?:40|[5-9]\\\\d)|3(?:0[0-4]|[2367]\\\\d))\\\\d|6(?:00[0-2]|30[0-4]|[5-9]\\\\d\\\\d))|[34]\\\\d{5})\\\\d{3}\",,,, \"312345678\",,,, [5, 6, 7]], [,, \"7(?:(?:[0157-9]\\\\d|30|4[0-4])\\\\d|2(?:[03]\\\\d|60))\\\\d{5}\",,,, \"712345678\"], [,, \"800[1-3]\\\\d{5}\",,,, \"800123456\"], [,, \"90[1-3]\\\\d{6}\",,,, \"901123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UG\", 256, \"00[057]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    US: [, [,, \"[2-9]\\\\d{9}\",,,,,,, [10], [7]], [,, \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",,,, \"2015550123\",,,, [7]], [,, \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\",,,, \"2015550123\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"US\", 1, \"011\", \"1\",,, \"1\",,, 1, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"],,, 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-9]\"]]], [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,, \"710[2-9]\\\\d{6}\",,,, \"7102123456\"],,, [,,,,,,,,, [-1]]],\n    UY: [, [,, \"(?:[249]\\\\d\\\\d|80)\\\\d{5}|9\\\\d{6}\",,,,,,, [7, 8]], [,, \"(?:2\\\\d|4[2-7])\\\\d{6}\",,,, \"21231234\",,, [8], [7]], [,, \"9[1-9]\\\\d{6}\",,,, \"94231234\",,, [8]], [,, \"80[05]\\\\d{4}\",,,, \"8001234\",,, [7]], [,, \"90[0-8]\\\\d{4}\",,,, \"9001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UY\", 598, \"0(?:0|1[3-9]\\\\d)\", \"0\", \" int. \",, \"0\",, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8|90\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    UZ: [, [,, \"[679]\\\\d{8}\",,,,,,, [9]], [,, \"(?:6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\\\d\\\\d|7(?:[23]\\\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|1[12]\\\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\\\d{5}\",,,, \"669050123\"], [,, \"(?:6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:(?:11|7\\\\d)\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\\\d)\\\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\\\d|7[0-4])|(?:5[67]|7\\\\d)\\\\d|6(?:2[0-26]|8\\\\d)))|7(?:0\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\\\d|41[179]|5(?:[349]\\\\d|5[0-2])|7(?:0[017]|[13]\\\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07])))|9[0-57-9]\\\\d{3})\\\\d{4}\",,,, \"912345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"UZ\", 998, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[679]\"], \"8 $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VA: [, [,, \"0\\\\d{6}(?:\\\\d{4})?|3[0-8]\\\\d{9}|(?:[0138]\\\\d?|55)\\\\d{8}|[08]\\\\d{5}(?:\\\\d{2})?\",,,,,,, [6, 7, 8, 9, 10, 11]], [,, \"06698\\\\d{1,6}\",,,, \"0669812345\"], [,, \"33\\\\d{9}|3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",,,, \"3123456789\",,, [9, 10, 11]], [,, \"80(?:0\\\\d{3}|3)\\\\d{3}\",,,, \"800123456\",,, [6, 9]], [,, \"(?:(?:0878|1(?:44|6[346])\\\\d)\\\\d\\\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\\\d\\\\d)\\\\d))\\\\d{3}|89[45][0-4]\\\\d\\\\d\",,,, \"899123456\",,, [6, 8, 9, 10]], [,, \"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",,,, \"848123456\",,, [6, 9]], [,, \"1(?:78\\\\d|99)\\\\d{6}\",,,, \"1781234567\",,, [9, 10]], [,, \"55\\\\d{8}\",,,, \"5512345678\",,, [10]], \"VA\", 39, \"00\",,,,,,,,,, [,,,,,,,,, [-1]],, \"06698\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VC: [, [,, \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\",,,, \"7842661234\",,,, [7]], [,, \"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\\\d{4}\",,,, \"7844301234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"VC\", 1, \"011\", \"1\",,, \"1|([2-7]\\\\d{6})$\", \"784$1\",,,,, [,,,,,,,,, [-1]],, \"784\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VE: [, [,, \"(?:(?:[24]\\\\d|50)\\\\d|[89]00)\\\\d{7}\",,,,,,, [10], [7]], [,, \"(?:2(?:12|3[457-9]|[467]\\\\d|[58][1-9]|9[1-6])|50[01])\\\\d{7}\",,,, \"2121234567\",,,, [7]], [,, \"4(?:1[24-8]|2[46])\\\\d{7}\",,,, \"4121234567\"], [,, \"800\\\\d{7}\",,,, \"8001234567\"], [,, \"900\\\\d{7}\",,,, \"9001234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"VE\", 58, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24589]\"], \"0$1\", \"$CC $1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VG: [, [,, \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",,,,,,, [10], [7]], [,, \"284(?:(?:229|774|8(?:52|6[459]))\\\\d|4(?:22\\\\d|9(?:[45]\\\\d|6[0-5])))\\\\d{3}\",,,, \"2842291234\",,,, [7]], [,, \"284(?:(?:3(?:0[0-3]|4[0-7]|68|9[34])|54[0-57])\\\\d|4(?:(?:4[0-6]|68)\\\\d|9(?:6[6-9]|9\\\\d)))\\\\d{3}\",,,, \"2843001234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"VG\", 1, \"011\", \"1\",,, \"1|([2-578]\\\\d{6})$\", \"284$1\",,,,, [,,,,,,,,, [-1]],, \"284\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VI: [, [,, \"(?:(?:34|90)0|[58]\\\\d\\\\d)\\\\d{7}\",,,,,,, [10], [7]], [,, \"340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\\\d)|884|998)\\\\d{4}\",,,, \"3406421234\",,,, [7]], [,, \"340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\\\d)|884|998)\\\\d{4}\",,,, \"3406421234\",,,, [7]], [,, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",,,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\",,,, \"9002345678\"], [,,,,,,,,, [-1]], [,, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\",,,, \"5002345678\"], [,,,,,,,,, [-1]], \"VI\", 1, \"011\", \"1\",,, \"1|([2-9]\\\\d{6})$\", \"340$1\",, 1,,, [,,,,,,,,, [-1]],, \"340\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    VN: [, [,, \"[12]\\\\d{9}|[135-9]\\\\d{8}|(?:[16]\\\\d?|[78])\\\\d{6}\",,,,,,, [7, 8, 9, 10]], [,, \"2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-7]|9[0-4679])\\\\d{7}\",,,, \"2101234567\",,, [10]], [,, \"(?:(?:3\\\\d|7[06-9])\\\\d|5(?:2[238]|[689]\\\\d)|8(?:[1-58]\\\\d|6[5-9]|9[689])|9(?:[0-8]\\\\d|9[013-9]))\\\\d{6}\",,,, \"912345678\",,, [9]], [,, \"1800\\\\d{4,6}\",,,, \"1800123456\",,, [8, 9, 10]], [,, \"1900\\\\d{4,6}\",,,, \"1900123456\",,, [8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"672\\\\d{6}\",,,, \"672012345\",,, [9]], \"VN\", 84, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[17]99\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"69\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[69]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\",, 1]], [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"],,, 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[69]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[3578]\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\",, 1]], [,,,,,,,,, [-1]],,, [,, \"(?:[17]99|69\\\\d\\\\d?)\\\\d{4}\",,,,,,, [7, 8]], [,, \"(?:[17]99|69\\\\d\\\\d?|80\\\\d)\\\\d{4}\",,,, \"1992000\",,, [7, 8]],,, [,,,,,,,,, [-1]]],\n    VU: [, [,, \"(?:(?:[23]|(?:[57]\\\\d|90)\\\\d)\\\\d|[48]8)\\\\d{3}\",,,,,,, [5, 7]], [,, \"(?:(?:2[02-9]|88)\\\\d|3(?:[4-7]\\\\d|8[0-8])|48[4-9])\\\\d\\\\d\",,,, \"22123\",,, [5]], [,, \"(?:5(?:[0-689]\\\\d|7[2-5])|7[013-7]\\\\d)\\\\d{4}\",,,, \"5912345\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"90[1-9]\\\\d{4}\",,,, \"9010123\",,, [7]], \"VU\", 678, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[579]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"(?:3[03]|900\\\\d)\\\\d{3}\",,,, \"30123\"],,, [,,,,,,,,, [-1]]],\n    WF: [, [,, \"(?:[45]0|68|72|8\\\\d)\\\\d{4}\",,,,,,, [6]], [,, \"(?:50|68|72)\\\\d{4}\",,,, \"501234\"], [,, \"(?:50|68|72|8[23])\\\\d{4}\",,,, \"501234\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"WF\", 681, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[4-8]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"[48]0\\\\d{4}\",,,, \"401234\"]],\n    WS: [, [,, \"(?:[2-6]|8\\\\d(?:\\\\d{4})?)\\\\d{4}|[78]\\\\d{6}\",,,,,,, [5, 6, 7, 10]], [,, \"(?:[2-5]\\\\d|6[1-9])\\\\d{3}\",,,, \"22123\",,, [5]], [,, \"(?:7[25-7]|8(?:[3-7]|9\\\\d{3}))\\\\d{5}\",,,, \"7212345\",,, [7, 10]], [,, \"800\\\\d{3}\",,,, \"800123\",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"WS\", 685, \"0\",,,,,,,, [[, \"(\\\\d{5})\", \"$1\", [\"[2-6]\"]], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"8\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    XK: [, [,, \"(?:[23]\\\\d{2,3}|4\\\\d\\\\d|[89]00)\\\\d{5}\",,,,,,, [8, 9]], [,, \"(?:2[89]|39)0\\\\d{6}|[23][89]\\\\d{6}\",,,, \"28012345\"], [,, \"4[3-79]\\\\d{6}\",,,, \"43201234\",,, [8]], [,, \"800\\\\d{5}\",,,, \"80001234\",,, [8]], [,, \"900\\\\d{5}\",,,, \"90001234\",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"XK\", 383, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    YE: [, [,, \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",,,,,,, [7, 8, 9], [6]], [,, \"17\\\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\\\d{5}\",,,, \"1234567\",,, [7, 8], [6]], [,, \"7[0137]\\\\d{7}\",,,, \"712345678\",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"YE\", 967, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7[24-68]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    YT: [, [,, \"(?:(?:26|63)9|80\\\\d)\\\\d{6}\",,,,,,, [9]], [,, \"269(?:0[67]|5[01]|6\\\\d|[78]0)\\\\d{4}\",,,, \"269601234\"], [,, \"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|[45]0|9[04-79])\\\\d{4}\",,,, \"639012345\"], [,, \"80\\\\d{7}\",,,, \"801234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"YT\", 262, \"00\", \"0\",,, \"0\",,,,,, [,,,,,,,,, [-1]],, \"269|63\", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ZA: [, [,, \"[1-9]\\\\d{8}|8\\\\d{4,7}\",,,,,,, [5, 6, 7, 8, 9]], [,, \"(?:1[0-8]|2[1-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\",,,, \"101234567\",,, [9]], [,, \"(?:6\\\\d|7[0-46-9]|8[1-5])\\\\d{7}|8[1-4]\\\\d{3,6}\",,,, \"711234567\"], [,, \"80\\\\d{7}\",,,, \"801234567\",,, [9]], [,, \"(?:86[2-9]|9[0-2]\\\\d)\\\\d{6}\",,,, \"862345678\",,, [9]], [,, \"860\\\\d{6}\",,,, \"860123456\",,, [9]], [,,,,,,,,, [-1]], [,, \"87\\\\d{7}\",,,, \"871234567\",,, [9]], \"ZA\", 27, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"861\\\\d{6}\",,,, \"861123456\",,, [9]],,, [,,,,,,,,, [-1]]],\n    ZM: [, [,, \"(?:(?:21|76|9\\\\d)\\\\d|800)\\\\d{6}\",,,,,,, [9], [6]], [,, \"21[1-8]\\\\d{6}\",,,, \"211234567\",,,, [6]], [,, \"(?:76|9[5-8])\\\\d{7}\",,,, \"955123456\"], [,, \"800\\\\d{6}\",,,, \"800123456\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"ZM\", 260, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[1-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    ZW: [, [,, \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",,,,,,, [5, 6, 7, 8, 9, 10], [3, 4]], [,, \"(?:1(?:(?:3\\\\d|9)\\\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\\\d\\\\d|[56](?:[14]\\\\d\\\\d|20)|7(?:[089]|2[03]|[35]\\\\d\\\\d))\\\\d|4(?:2\\\\d\\\\d|8))\\\\d|1(?:2|[39]\\\\d{4}))|3(?:(?:123|(?:29\\\\d|92)\\\\d)\\\\d\\\\d|7(?:[19]|[56]\\\\d))|(?:4\\\\d\\\\d|9[2-9])\\\\d\\\\d?|5(?:0|1[2-478]|26|[37]2|4(?:2\\\\d{3}|83)|5(?:25\\\\d\\\\d|[78])|[689]\\\\d)|6(?:(?:[16-8]21|28|52[013])\\\\d\\\\d|[39])|8(?:[1349]28|523)\\\\d\\\\d)\\\\d{3}|(?:(?:2(?:(?:(?:0|8[146])\\\\d|7[1-7])\\\\d|2(?:[278]\\\\d|92)|58(?:2\\\\d|3))|3(?:[26]|9\\\\d{3})|5(?:4\\\\d|5)\\\\d\\\\d)\\\\d|6(?:(?:(?:[0-246]|[78]\\\\d)\\\\d|37)\\\\d|5[2-8]))\\\\d\\\\d|(?:2(?:[569]\\\\d|8[2-57-9])|3(?:[013-59]\\\\d|8[37])|6[89]8)\\\\d{3}\",,,, \"1312345\",,,, [3, 4]], [,, \"(?:7(?:1\\\\d|3[2-9]|7[1-9]|8[2-5])|8644)\\\\d{6}\",,,, \"712345678\",,, [9, 10]], [,, \"80(?:[01]\\\\d|20|8[0-8])\\\\d{3}\",,,, \"8001234\",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"86(?:1[12]|30|55|77|8[368])\\\\d{6}\",,,, \"8686123456\",,, [10]], \"ZW\", 263, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|[78])|5[15][78]|6(?:[29]8|37|[68][78]|75)\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"2(?:[05-79]2|4)|(?:39|5[45]|6[15-8])2|8[13-59]\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56]|9[0-79])|3(?:[09][0-79]|1[0-689]|[24-6]|3[0-69])|5(?:[0236-9]|1[2-4]|5[0-69])|6(?:[013-59]|2[0-79]|[68][0-69]|7[0-46-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    800: [, [,, \"\\\\d{8}\",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"\\\\d{8}\",,,, \"12345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 800,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    808: [, [,, \"\\\\d{8}\",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"\\\\d{8}\",,,, \"12345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 808,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    870: [, [,, \"[35-7]\\\\d{8}\",,,,,,, [9]], [,,,,,,,,, [-1]], [,, \"(?:[356]\\\\d|7[6-8])\\\\d{7}\",,,, \"301234567\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 870,,,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[35-7]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    878: [, [,, \"10\\\\d{10}\",,,,,,, [12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"10\\\\d{10}\",,,, \"101234567890\"], \"001\", 878,,,,,,,, 1, [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    881: [, [,, \"[67]\\\\d{8}\",,,,,,, [9]], [,,,,,,,,, [-1]], [,, \"[67]\\\\d{8}\",,,, \"612345678\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 881,,,,,,,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[67]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    882: [, [,, \"[13]\\\\d{6}(?:\\\\d{2,5})?|1\\\\d{7}\",,,,,,, [7, 8, 9, 10, 11, 12]], [,,,,,,,,, [-1]], [,, \"3(?:(?:(?:2|7\\\\d{3})\\\\d|37)\\\\d\\\\d|4(?:2|7\\\\d{3}))\\\\d{4}\",,,, \"3421234\",,, [7, 9, 10, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"(?:1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])|6\\\\d{1,6})|3(?:45|9\\\\d{3})\\\\d{3})\\\\d{4}\",,,, \"390123456789\"], \"001\", 882,,,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34[57]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [, \"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[13]\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, \"348[57]\\\\d{7}\",,,, \"34851234567\",,, [11]]],\n    883: [, [,, \"51\\\\d{7}(?:\\\\d{3})?\",,,,,,, [9, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"51[013]0\\\\d{8}|5100\\\\d{5}\",,,, \"510012345\"], \"001\", 883,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"510\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],\n    888: [, [,, \"\\\\d{11}\",,,,,,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 888,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, \"\\\\d{11}\",,,, \"12345678901\"],,, [,,,,,,,,, [-1]]],\n    979: [, [,, \"\\\\d{9}\",,,,,,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, \"\\\\d{9}\",,,, \"123456789\"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], \"001\", 979,,,,,,,, 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]]\n  };\n  /*\n  Copyright (C) 2010 The Libphonenumber Authors.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  function M() {\n    this.a = {};\n  }\n\n  M.c = void 0;\n\n  M.a = function () {\n    return M.c ? M.c : M.c = new M();\n  };\n\n  var xa = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"\\uFF10\": \"0\",\n    \"\\uFF11\": \"1\",\n    \"\\uFF12\": \"2\",\n    \"\\uFF13\": \"3\",\n    \"\\uFF14\": \"4\",\n    \"\\uFF15\": \"5\",\n    \"\\uFF16\": \"6\",\n    \"\\uFF17\": \"7\",\n    \"\\uFF18\": \"8\",\n    \"\\uFF19\": \"9\",\n    \"\\u0660\": \"0\",\n    \"\\u0661\": \"1\",\n    \"\\u0662\": \"2\",\n    \"\\u0663\": \"3\",\n    \"\\u0664\": \"4\",\n    \"\\u0665\": \"5\",\n    \"\\u0666\": \"6\",\n    \"\\u0667\": \"7\",\n    \"\\u0668\": \"8\",\n    \"\\u0669\": \"9\",\n    \"\\u06F0\": \"0\",\n    \"\\u06F1\": \"1\",\n    \"\\u06F2\": \"2\",\n    \"\\u06F3\": \"3\",\n    \"\\u06F4\": \"4\",\n    \"\\u06F5\": \"5\",\n    \"\\u06F6\": \"6\",\n    \"\\u06F7\": \"7\",\n    \"\\u06F8\": \"8\",\n    \"\\u06F9\": \"9\"\n  },\n      ya = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"\\uFF10\": \"0\",\n    \"\\uFF11\": \"1\",\n    \"\\uFF12\": \"2\",\n    \"\\uFF13\": \"3\",\n    \"\\uFF14\": \"4\",\n    \"\\uFF15\": \"5\",\n    \"\\uFF16\": \"6\",\n    \"\\uFF17\": \"7\",\n    \"\\uFF18\": \"8\",\n    \"\\uFF19\": \"9\",\n    \"\\u0660\": \"0\",\n    \"\\u0661\": \"1\",\n    \"\\u0662\": \"2\",\n    \"\\u0663\": \"3\",\n    \"\\u0664\": \"4\",\n    \"\\u0665\": \"5\",\n    \"\\u0666\": \"6\",\n    \"\\u0667\": \"7\",\n    \"\\u0668\": \"8\",\n    \"\\u0669\": \"9\",\n    \"\\u06F0\": \"0\",\n    \"\\u06F1\": \"1\",\n    \"\\u06F2\": \"2\",\n    \"\\u06F3\": \"3\",\n    \"\\u06F4\": \"4\",\n    \"\\u06F5\": \"5\",\n    \"\\u06F6\": \"6\",\n    \"\\u06F7\": \"7\",\n    \"\\u06F8\": \"8\",\n    \"\\u06F9\": \"9\",\n    A: \"2\",\n    B: \"2\",\n    C: \"2\",\n    D: \"3\",\n    E: \"3\",\n    F: \"3\",\n    G: \"4\",\n    H: \"4\",\n    I: \"4\",\n    J: \"5\",\n    K: \"5\",\n    L: \"5\",\n    M: \"6\",\n    N: \"6\",\n    O: \"6\",\n    P: \"7\",\n    Q: \"7\",\n    R: \"7\",\n    S: \"7\",\n    T: \"8\",\n    U: \"8\",\n    V: \"8\",\n    W: \"9\",\n    X: \"9\",\n    Y: \"9\",\n    Z: \"9\"\n  },\n      N = /^[+\\uff0b]+/,\n      za = /([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9])/,\n      Aa = /[+\\uff0b0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]/,\n      Ba = /[\\\\\\/] *x/,\n      Ca = /[^0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9A-Za-z#]+$/,\n      Da = /(?:.*?[A-Za-z]){3}.*/,\n      Ea = /(?:;ext=([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,7})|[ \\u00a0\\t,]*(?:e?xt(?:ensi(?:o\\u0301?|\\u00f3))?n?|\\uff45?\\uff58\\uff54\\uff4e?|\\u0434\\u043e\\u0431|[;,x\\uff58#\\uff03~\\uff5e]|int|anexo|\\uff49\\uff4e\\uff54)[:\\.\\uff0e]?[ \\u00a0\\t,-]*([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,7})#?|[- ]+([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,5})#)$/i,\n      Fa = /^[0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{2}$|^[+\\uff0b]*(?:[-x\\u2010-\\u2015\\u2212\\u30fc\\uff0d-\\uff0f \\u00a0\\u00ad\\u200b\\u2060\\u3000()\\uff08\\uff09\\uff3b\\uff3d.\\[\\]/~\\u2053\\u223c\\uff5e*]*[0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]){3,}[-x\\u2010-\\u2015\\u2212\\u30fc\\uff0d-\\uff0f \\u00a0\\u00ad\\u200b\\u2060\\u3000()\\uff08\\uff09\\uff3b\\uff3d.\\[\\]/~\\u2053\\u223c\\uff5e*A-Za-z0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]*(?:;ext=([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,7})|[ \\u00a0\\t,]*(?:e?xt(?:ensi(?:o\\u0301?|\\u00f3))?n?|\\uff45?\\uff58\\uff54\\uff4e?|\\u0434\\u043e\\u0431|[;,x\\uff58#\\uff03~\\uff5e]|int|anexo|\\uff49\\uff4e\\uff54)[:\\.\\uff0e]?[ \\u00a0\\t,-]*([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,7})#?|[- ]+([0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9]{1,5})#)?$/i,\n      Ga = /(\\$\\d)/;\n\n  function Ha(a) {\n    var b = a.search(Aa);\n    0 <= b ? (a = a.substring(b), a = a.replace(Ca, \"\"), b = a.search(Ba), 0 <= b && (a = a.substring(0, b))) : a = \"\";\n    return a;\n  }\n\n  function Ia(a) {\n    return 2 > a.length ? !1 : O(Fa, a);\n  }\n\n  function Ja(a) {\n    return O(Da, a) ? P(a, ya) : P(a, xa);\n  }\n\n  function Ka(a) {\n    var b = Ja(a.toString());\n    a.c = \"\";\n    a.a(b);\n  }\n\n  function La(a) {\n    return null != a && (1 != A(a, 9) || -1 != w(a, 9)[0]);\n  }\n\n  function P(a, b) {\n    for (var c = new F(), d, e = a.length, f = 0; f < e; ++f) {\n      d = a.charAt(f), d = b[d.toUpperCase()], null != d && c.a(d);\n    }\n\n    return c.toString();\n  }\n\n  function Q(a) {\n    return null != a && isNaN(a) && a.toUpperCase() in wa;\n  }\n\n  function Ma(a, b, c) {\n    if (0 == t(b, 2) && null != b.a[5]) {\n      var d = y(b, 5);\n      if (0 < d.length) return d;\n    }\n\n    d = y(b, 1);\n    var e = R(b);\n    if (0 == c) return Na(d, 0, e, \"\");\n    if (!(d in K)) return e;\n    a = S(a, d, T(d));\n    b = null != b.a[3] && 0 != t(b, 3).length ? 3 == c ? \";ext=\" + t(b, 3) : null != a.a[13] ? t(a, 13) + y(b, 3) : \" ext. \" + y(b, 3) : \"\";\n\n    a: {\n      a = 0 == w(a, 20).length || 2 == c ? w(a, 19) : w(a, 20);\n\n      for (var f, g = a.length, h = 0; h < g; ++h) {\n        f = a[h];\n        var l = A(f, 3);\n        if (0 == l || 0 == e.search(t(f, 3, l - 1))) if (l = new RegExp(t(f, 1)), O(l, e)) {\n          a = f;\n          break a;\n        }\n      }\n\n      a = null;\n    }\n\n    null != a && (g = a, a = y(g, 2), f = new RegExp(t(g, 1)), y(g, 5), g = y(g, 4), e = 2 == c && null != g && 0 < g.length ? e.replace(f, a.replace(Ga, g)) : e.replace(f, a), 3 == c && (e = e.replace(/^[-x\\u2010-\\u2015\\u2212\\u30fc\\uff0d-\\uff0f \\u00a0\\u00ad\\u200b\\u2060\\u3000()\\uff08\\uff09\\uff3b\\uff3d.\\[\\]/~\\u2053\\u223c\\uff5e]+/, \"\"), e = e.replace(/[-x\\u2010-\\u2015\\u2212\\u30fc\\uff0d-\\uff0f \\u00a0\\u00ad\\u200b\\u2060\\u3000()\\uff08\\uff09\\uff3b\\uff3d.\\[\\]/~\\u2053\\u223c\\uff5e]+/g, \"-\")));\n    return Na(d, c, e, b);\n  }\n\n  function S(a, b, c) {\n    return \"001\" == c ? U(a, \"\" + b) : U(a, c);\n  }\n\n  function R(a) {\n    if (null == a.a[2]) return \"\";\n    var b = \"\" + t(a, 2);\n    return null != a.a[4] && t(a, 4) && 0 < y(a, 8) ? Array(y(a, 8) + 1).join(\"0\") + b : b;\n  }\n\n  function Na(a, b, c, d) {\n    switch (b) {\n      case 0:\n        return \"+\" + a + c + d;\n\n      case 1:\n        return \"+\" + a + \" \" + c + d;\n\n      case 3:\n        return \"tel:+\" + a + \"-\" + c + d;\n\n      default:\n        return c + d;\n    }\n  }\n\n  function V(a, b) {\n    switch (b) {\n      case 4:\n        return t(a, 5);\n\n      case 3:\n        return t(a, 4);\n\n      case 1:\n        return t(a, 3);\n\n      case 0:\n      case 2:\n        return t(a, 2);\n\n      case 5:\n        return t(a, 6);\n\n      case 6:\n        return t(a, 8);\n\n      case 7:\n        return t(a, 7);\n\n      case 8:\n        return t(a, 21);\n\n      case 9:\n        return t(a, 25);\n\n      case 10:\n        return t(a, 28);\n\n      default:\n        return t(a, 1);\n    }\n  }\n\n  function W(a, b) {\n    return X(a, t(b, 1)) ? X(a, t(b, 5)) ? 4 : X(a, t(b, 4)) ? 3 : X(a, t(b, 6)) ? 5 : X(a, t(b, 8)) ? 6 : X(a, t(b, 7)) ? 7 : X(a, t(b, 21)) ? 8 : X(a, t(b, 25)) ? 9 : X(a, t(b, 28)) ? 10 : X(a, t(b, 2)) ? t(b, 18) || X(a, t(b, 3)) ? 2 : 0 : !t(b, 18) && X(a, t(b, 3)) ? 1 : -1 : -1;\n  }\n\n  function U(a, b) {\n    if (null == b) return null;\n    b = b.toUpperCase();\n    var c = a.a[b];\n\n    if (null == c) {\n      c = wa[b];\n      if (null == c) return null;\n      c = new E().a(I.f(), c);\n      a.a[b] = c;\n    }\n\n    return c;\n  }\n\n  function X(a, b) {\n    var c = a.length;\n    return 0 < A(b, 9) && -1 == p(w(b, 9), c) ? !1 : O(y(b, 2), a);\n  }\n\n  function Oa(a, b) {\n    if (null == b) return null;\n    var c = y(b, 1);\n    c = K[c];\n    if (null == c) a = null;else if (1 == c.length) a = c[0];else a: {\n      b = R(b);\n\n      for (var d, e = c.length, f = 0; f < e; f++) {\n        d = c[f];\n        var g = U(a, d);\n\n        if (null != g.a[23]) {\n          if (0 == b.search(t(g, 23))) {\n            a = d;\n            break a;\n          }\n        } else if (-1 != W(b, g)) {\n          a = d;\n          break a;\n        }\n      }\n\n      a = null;\n    }\n    return a;\n  }\n\n  function T(a) {\n    a = K[a];\n    return null == a ? \"ZZ\" : a[0];\n  }\n\n  function Y(a, b, c, d) {\n    var e = V(c, d),\n        f = 0 == A(e, 9) ? w(t(c, 1), 9) : w(e, 9);\n    e = w(e, 10);\n    if (2 == d) if (La(V(c, 0))) a = V(c, 1), La(a) && (f = f.concat(0 == A(a, 9) ? w(t(c, 1), 9) : w(a, 9)), q(f), 0 == e.length ? e = w(a, 10) : (e = e.concat(w(a, 10)), q(e)));else return Y(a, b, c, 1);\n    if (-1 == f[0]) return 5;\n    b = b.length;\n    if (-1 < p(e, b)) return 4;\n    c = f[0];\n    return c == b ? 0 : c > b ? 2 : f[f.length - 1] < b ? 3 : -1 < p(f, b, 1) ? 0 : 5;\n  }\n\n  function Pa(a, b) {\n    var c = R(b);\n    b = y(b, 1);\n    if (!(b in K)) return 1;\n    b = S(a, b, T(b));\n    return Y(a, c, b, -1);\n  }\n\n  function Qa(a, b, c, d, e, f) {\n    if (0 == b.length) return 0;\n    b = new F(b);\n    var g;\n    null != c && (g = t(c, 11));\n    null == g && (g = \"NonMatch\");\n    var h = b.toString();\n    if (0 == h.length) g = 20;else if (N.test(h)) h = h.replace(N, \"\"), b.c = \"\", b.a(Ja(h)), g = 1;else {\n      h = new RegExp(g);\n      Ka(b);\n      g = b.toString();\n\n      if (0 == g.search(h)) {\n        h = g.match(h)[0].length;\n        var l = g.substring(h).match(za);\n        l && null != l[1] && 0 < l[1].length && \"0\" == P(l[1], xa) ? g = !1 : (b.c = \"\", b.a(g.substring(h)), g = !0);\n      } else g = !1;\n\n      g = g ? 5 : 20;\n    }\n    e && u(f, 6, g);\n\n    if (20 != g) {\n      if (2 >= b.c.length) throw Error(\"Phone number too short after IDD\");\n\n      a: {\n        a = b.toString();\n        if (0 != a.length && \"0\" != a.charAt(0)) for (e = a.length, b = 1; 3 >= b && b <= e; ++b) {\n          if (c = parseInt(a.substring(0, b), 10), c in K) {\n            d.a(a.substring(b));\n            d = c;\n            break a;\n          }\n        }\n        d = 0;\n      }\n\n      if (0 != d) return u(f, 1, d), d;\n      throw Error(\"Invalid country calling code\");\n    }\n\n    if (null != c && (g = y(c, 10), h = \"\" + g, l = b.toString(), 0 == l.lastIndexOf(h, 0) && (h = new F(l.substring(h.length)), l = t(c, 1), l = new RegExp(y(l, 2)), Ra(h, c, null), h = h.toString(), !O(l, b.toString()) && O(l, h) || 3 == Y(a, b.toString(), c, -1)))) return d.a(h), e && u(f, 6, 10), u(f, 1, g), g;\n    u(f, 1, 0);\n    return 0;\n  }\n\n  function Ra(a, b, c) {\n    var d = a.toString(),\n        e = d.length,\n        f = t(b, 15);\n\n    if (0 != e && null != f && 0 != f.length) {\n      var g = new RegExp(\"^(?:\" + f + \")\");\n\n      if (e = g.exec(d)) {\n        f = new RegExp(y(t(b, 1), 2));\n        var h = O(f, d),\n            l = e.length - 1;\n        b = t(b, 16);\n\n        if (null == b || 0 == b.length || null == e[l] || 0 == e[l].length) {\n          if (!h || O(f, d.substring(e[0].length))) null != c && 0 < l && null != e[l] && c.a(e[1]), a.set(d.substring(e[0].length));\n        } else if (d = d.replace(g, b), !h || O(f, d)) null != c && 0 < l && c.a(e[1]), a.set(d);\n      }\n    }\n  }\n\n  function Z(a, b, c) {\n    if (!Q(c) && 0 < b.length && \"+\" != b.charAt(0)) throw Error(\"Invalid country calling code\");\n    return Sa(a, b, c, !0);\n  }\n\n  function Sa(a, b, c, d) {\n    if (null == b) throw Error(\"The string supplied did not seem to be a phone number\");\n    if (250 < b.length) throw Error(\"The string supplied is too long to be a phone number\");\n    var e = new F(),\n        f = b.indexOf(\";phone-context=\");\n\n    if (0 <= f) {\n      var g = f + 15;\n\n      if (\"+\" == b.charAt(g)) {\n        var h = b.indexOf(\";\", g);\n        0 < h ? e.a(b.substring(g, h)) : e.a(b.substring(g));\n      }\n\n      g = b.indexOf(\"tel:\");\n      e.a(b.substring(0 <= g ? g + 4 : 0, f));\n    } else e.a(Ha(b));\n\n    f = e.toString();\n    g = f.indexOf(\";isub=\");\n    0 < g && (e.c = \"\", e.a(f.substring(0, g)));\n    if (!Ia(e.toString())) throw Error(\"The string supplied did not seem to be a phone number\");\n    f = e.toString();\n    if (!(Q(c) || null != f && 0 < f.length && N.test(f))) throw Error(\"Invalid country calling code\");\n    f = new J();\n    d && u(f, 5, b);\n\n    a: {\n      b = e.toString();\n      g = b.search(Ea);\n\n      if (0 <= g && Ia(b.substring(0, g))) {\n        h = b.match(Ea);\n\n        for (var l = h.length, z = 1; z < l; ++z) {\n          if (null != h[z] && 0 < h[z].length) {\n            e.c = \"\";\n            e.a(b.substring(0, g));\n            b = h[z];\n            break a;\n          }\n        }\n      }\n\n      b = \"\";\n    }\n\n    0 < b.length && u(f, 3, b);\n    g = U(a, c);\n    b = new F();\n    h = 0;\n    l = e.toString();\n\n    try {\n      h = Qa(a, l, g, b, d, f);\n    } catch (L) {\n      if (\"Invalid country calling code\" == L.message && N.test(l)) {\n        if (l = l.replace(N, \"\"), h = Qa(a, l, g, b, d, f), 0 == h) throw L;\n      } else throw L;\n    }\n\n    0 != h ? (e = T(h), e != c && (g = S(a, h, e))) : (Ka(e), b.a(e.toString()), null != c ? (h = y(g, 10), u(f, 1, h)) : d && (delete f.a[6], f.c && delete f.c[6]));\n    if (2 > b.c.length) throw Error(\"The string supplied is too short to be a phone number\");\n    null != g && (c = new F(), e = new F(b.toString()), Ra(e, g, c), a = Y(a, e.toString(), g, -1), 2 != a && 4 != a && 5 != a && (b = e, d && 0 < c.toString().length && u(f, 7, c.toString())));\n    d = b.toString();\n    a = d.length;\n    if (2 > a) throw Error(\"The string supplied is too short to be a phone number\");\n    if (17 < a) throw Error(\"The string supplied is too long to be a phone number\");\n\n    if (1 < d.length && \"0\" == d.charAt(0)) {\n      u(f, 4, !0);\n\n      for (a = 1; a < d.length - 1 && \"0\" == d.charAt(a);) {\n        a++;\n      }\n\n      1 != a && u(f, 8, a);\n    }\n\n    u(f, 2, parseInt(d, 10));\n    return f;\n  }\n\n  function O(a, b) {\n    return (a = \"string\" == typeof a ? b.match(\"^(?:\" + a + \")$\") : b.match(a)) && a[0].length == b.length ? !0 : !1;\n  }\n\n  ;\n  m(\"intlTelInputUtils\", {});\n  m(\"intlTelInputUtils.formatNumber\", function (a, b, c) {\n    try {\n      var d = M.a(),\n          e = Z(d, a, b),\n          f = Pa(d, e);\n      return 0 == f || 4 == f ? Ma(d, e, \"undefined\" == typeof c ? 0 : c) : a;\n    } catch (g) {\n      return a;\n    }\n  });\n  m(\"intlTelInputUtils.getExampleNumber\", function (a, b, c) {\n    try {\n      var d = M.a();\n\n      a: {\n        if (Q(a)) {\n          var e = V(U(d, a), c);\n\n          try {\n            if (null != e.a[6]) {\n              var f = t(e, 6);\n              var g = Sa(d, f, a, !1);\n              break a;\n            }\n          } catch (h) {}\n        }\n\n        g = null;\n      }\n\n      return Ma(d, g, b ? 2 : 1);\n    } catch (h) {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtils.getExtension\", function (a, b) {\n    try {\n      return t(Z(M.a(), a, b), 3);\n    } catch (c) {\n      return \"\";\n    }\n  });\n  m(\"intlTelInputUtils.getNumberType\", function (a, b) {\n    try {\n      var c = M.a();\n      var d = Z(c, a, b),\n          e = Oa(c, d),\n          f = S(c, y(d, 1), e);\n      if (null == f) var g = -1;else {\n        var h = R(d);\n        g = W(h, f);\n      }\n      return g;\n    } catch (l) {\n      return -99;\n    }\n  });\n  m(\"intlTelInputUtils.getValidationError\", function (a, b) {\n    try {\n      var c = M.a(),\n          d = Z(c, a, b);\n      return Pa(c, d);\n    } catch (e) {\n      return \"Invalid country calling code\" == e.message ? 1 : \"The string supplied did not seem to be a phone number\" == e.message ? 4 : \"Phone number too short after IDD\" == e.message || \"The string supplied is too short to be a phone number\" == e ? 2 : \"The string supplied is too long to be a phone number\" == e.message ? 3 : -99;\n    }\n  });\n  m(\"intlTelInputUtils.isValidNumber\", function (a, b) {\n    try {\n      var c = M.a(),\n          d = Z(c, a, b);\n      var e = Oa(c, d),\n          f = y(d, 1),\n          g = S(c, f, e),\n          h;\n\n      if (!(h = null == g)) {\n        var l;\n\n        if (l = \"001\" != e) {\n          var z = U(c, e);\n          if (null == z) throw Error(\"Invalid region code: \" + e);\n          var L = y(z, 10);\n          l = f != L;\n        }\n\n        h = l;\n      }\n\n      if (h) var va = !1;else {\n        var Ta = R(d);\n        va = -1 != W(Ta, g);\n      }\n      return va;\n    } catch (Ua) {\n      return !1;\n    }\n  });\n  m(\"intlTelInputUtils.numberFormat\", {\n    E164: 0,\n    INTERNATIONAL: 1,\n    NATIONAL: 2,\n    RFC3966: 3\n  });\n  m(\"intlTelInputUtils.numberType\", {\n    FIXED_LINE: 0,\n    MOBILE: 1,\n    FIXED_LINE_OR_MOBILE: 2,\n    TOLL_FREE: 3,\n    PREMIUM_RATE: 4,\n    SHARED_COST: 5,\n    VOIP: 6,\n    PERSONAL_NUMBER: 7,\n    PAGER: 8,\n    UAN: 9,\n    VOICEMAIL: 10,\n    UNKNOWN: -1\n  });\n  m(\"intlTelInputUtils.validationError\", {\n    IS_POSSIBLE: 0,\n    INVALID_COUNTRY_CODE: 1,\n    TOO_SHORT: 2,\n    TOO_LONG: 3,\n    NOT_A_NUMBER: 4\n  });\n})();"],"sourceRoot":""}